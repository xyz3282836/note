const n=JSON.parse('{"key":"v-5022612b","path":"/apue/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6.html","title":"第八章 进程控制","lang":"zh-CN","frontmatter":{"description":"第八章 进程控制 fork 进程标识 id 为 0 的是调度进程，被称为交换进程 swapper，是内核的一部分 id 为 1 的是 init 进程，是所以孤儿进程的父进程，不是内核一部分，只是个普通进程，但是拥有 root 权限， #include &lt;unistd.h&gt; pid_t getpid(void); pid_t getppid(void); uid_t getuid(void);//实际用户 ID uid_t geteuid(void);//有效用户 ID gid_t getgid(void); gid_t getegid(void);","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/apue/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"第八章 进程控制"}],["meta",{"property":"og:description","content":"第八章 进程控制 fork 进程标识 id 为 0 的是调度进程，被称为交换进程 swapper，是内核的一部分 id 为 1 的是 init 进程，是所以孤儿进程的父进程，不是内核一部分，只是个普通进程，但是拥有 root 权限， #include &lt;unistd.h&gt; pid_t getpid(void); pid_t getppid(void); uid_t getuid(void);//实际用户 ID uid_t geteuid(void);//有效用户 ID gid_t getgid(void); gid_t getegid(void);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第八章 进程控制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"fork 进程标识","slug":"fork-进程标识","link":"#fork-进程标识","children":[]},{"level":2,"title":"fork","slug":"fork","link":"#fork","children":[{"level":3,"title":"fork 后处理 fd 有两种常见操作模式","slug":"fork-后处理-fd-有两种常见操作模式","link":"#fork-后处理-fd-有两种常见操作模式","children":[]},{"level":3,"title":"fork 的两种方法","slug":"fork-的两种方法","link":"#fork-的两种方法","children":[]}]},{"level":2,"title":"vfork","slug":"vfork","link":"#vfork","children":[]},{"level":2,"title":"exit","slug":"exit","link":"#exit","children":[]},{"level":2,"title":"wait 和 waitpid","slug":"wait-和-waitpid","link":"#wait-和-waitpid","children":[]},{"level":2,"title":"waitid","slug":"waitid","link":"#waitid","children":[]},{"level":2,"title":"wait3,wait4","slug":"wait3-wait4","link":"#wait3-wait4","children":[]},{"level":2,"title":"竞争条件","slug":"竞争条件","link":"#竞争条件","children":[]},{"level":2,"title":"exec 函数","slug":"exec-函数","link":"#exec-函数","children":[]},{"level":2,"title":"更改用户 id 和组 id","slug":"更改用户-id-和组-id","link":"#更改用户-id-和组-id","children":[]},{"level":2,"title":"解释器文件","slug":"解释器文件","link":"#解释器文件","children":[]},{"level":2,"title":"system","slug":"system","link":"#system","children":[]},{"level":2,"title":"进程会计","slug":"进程会计","link":"#进程会计","children":[]},{"level":2,"title":"用户标志","slug":"用户标志","link":"#用户标志","children":[]},{"level":2,"title":"进程调度","slug":"进程调度","link":"#进程调度","children":[]},{"level":2,"title":"进程时间","slug":"进程时间","link":"#进程时间","children":[]}],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":4.61,"words":1383},"filePathRelative":"apue/第八章 进程控制.md","localizedDate":"2023年3月11日","excerpt":"<h1> 第八章 进程控制</h1>\\n<h2> fork 进程标识</h2>\\n<p>id 为 0 的是调度进程，被称为交换进程 swapper，是内核的一部分</p>\\n<p>id 为 1 的是 init 进程，是所以孤儿进程的父进程，不是内核一部分，只是个普通进程，但是拥有 root 权限，</p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;unistd.h&gt;</span></span>\\n<span class=\\"token class-name\\">pid_t</span> <span class=\\"token function\\">getpid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">pid_t</span> <span class=\\"token function\\">getppid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token class-name\\">uid_t</span> <span class=\\"token function\\">getuid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//实际用户 ID</span>\\n<span class=\\"token class-name\\">uid_t</span> <span class=\\"token function\\">geteuid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//有效用户 ID</span>\\n\\n<span class=\\"token class-name\\">gid_t</span> <span class=\\"token function\\">getgid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">gid_t</span> <span class=\\"token function\\">getegid</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">void</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
