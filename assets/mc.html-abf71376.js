const e=JSON.parse('{"key":"v-5a8b44d7","path":"/source-code/bilibili-kratos/library/cache/memcache/mc.html","title":"mc","lang":"zh-CN","frontmatter":{"description":"Memcache 主体结构，其中有 Pool 结构，相当于包了一层，主张使用主体结构。 Pool 结构中有 pool.Pool，其实是连接池的 interface，mc 中使用 pool.NewList 来实现，也就是链表的实现，同时还有个 slice 的实现。 ```go type Pool struct { p pool.Pool // 连接池的接...","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/source-code/bilibili-kratos/library/cache/memcache/mc.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"mc"}],["meta",{"property":"og:description","content":"Memcache 主体结构，其中有 Pool 结构，相当于包了一层，主张使用主体结构。 Pool 结构中有 pool.Pool，其实是连接池的 interface，mc 中使用 pool.NewList 来实现，也就是链表的实现，同时还有个 slice 的实现。 ```go type Pool struct { p pool.Pool // 连接池的接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":2,"words":600},"filePathRelative":"source-code/bilibili-kratos/library/cache/memcache/mc.md","localizedDate":"2023年3月11日","autoDesc":true}');export{e as data};
