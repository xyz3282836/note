import{d as defineAsyncComponent,r as ref,a as readonly,b as reactive,c as defineComponent,i as isString$1,e as isArray,f as dedupeHead,g as resolveLocalePath,o as onMounted,h as computed,j as h$1,k as isLinkHttp,l as removeLeadingSlash,m as inject,n as getCurrentInstance,p as camelize,q as capitalize,s as nextTick,u as unref,t as isRef,w as watch,v as getCurrentScope,x as onScopeDispose,y as shallowRef,z as watchEffect,T as Transition,A as useRouter,B as onBeforeUnmount,R as RouterLink,C as resolveComponent,D as isPlainObject,E as onUnmounted,F as useRoute,G as isLinkMailto,H as toRef,I as isLinkTel,J as isLinkExternal,K as ensureEndingSlash,L as provide,M as TransitionGroup,N as removeEndingSlash,O as useLink,P as createRouter,S as START_LOCATION_NORMALIZED,Q as createSSRApp,U as createWebHistory,V as RouterView}from"./framework-7d39e0da.js";const scriptRel="modulepreload",assetsURL=function(d){return"/"+d},seen={},__vitePreload=function(R,N,z){if(!N||N.length===0)return R();const j=document.getElementsByTagName("link");return Promise.all(N.map(Z=>{if(Z=assetsURL(Z),Z in seen)return;seen[Z]=!0;const X=Z.endsWith(".css"),Q=X?'[rel="stylesheet"]':"";if(!!z)for(let en=j.length-1;en>=0;en--){const tn=j[en];if(tn.href===Z&&(!X||tn.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${Z}"]${Q}`))return;const sn=document.createElement("link");if(sn.rel=X?"stylesheet":scriptRel,X||(sn.as="script",sn.crossOrigin=""),sn.href=Z,document.head.appendChild(sn),X)return new Promise((en,tn)=>{sn.addEventListener("load",en),sn.addEventListener("error",()=>tn(new Error(`Unable to preload CSS for ${Z}`)))})})).then(()=>R())},pagesData$1={"v-8daa1a0e":()=>__vitePreload(()=>import("./index.html-b8672b09.js"),[]).then(({data:d})=>d),"v-14679d9e":()=>__vitePreload(()=>import("./常见算法.html-b649fae6.js"),[]).then(({data:d})=>d),"v-0f76b6d9":()=>__vitePreload(()=>import("./DDD.html-2ae16ae0.js"),[]).then(({data:d})=>d),"v-626d1f23":()=>__vitePreload(()=>import("./大纲.html-211b3351.js"),[]).then(({data:d})=>d),"v-f54f2f0e":()=>__vitePreload(()=>import("./CRLF.html-d8646d04.js"),[]).then(({data:d})=>d),"v-540b3114":()=>__vitePreload(()=>import("./IPC.html-407fd03e.js"),[]).then(({data:d})=>d),"v-ffbecaec":()=>__vitePreload(()=>import("./K8s.html-163188e4.js"),[]).then(({data:d})=>d),"v-54a85011":()=>__vitePreload(()=>import("./Linux初级指令.html-ad6ea149.js"),[]).then(({data:d})=>d),"v-80f3353a":()=>__vitePreload(()=>import("./apue.html-d5b5ca40.js"),[]).then(({data:d})=>d),"v-08d2adae":()=>__vitePreload(()=>import("./c primary.html-0a0a6161.js"),[]).then(({data:d})=>d),"v-3dca5d6e":()=>__vitePreload(()=>import("./c语言指针数组.html-a70dff56.js"),[]).then(({data:d})=>d),"v-b7c0262e":()=>__vitePreload(()=>import("./gcc.html-0a2107d2.js"),[]).then(({data:d})=>d),"v-02f09a04":()=>__vitePreload(()=>import("./git.html-4a815f53.js"),[]).then(({data:d})=>d),"v-05ab0988":()=>__vitePreload(()=>import("./http code.html-5d41dd11.js"),[]).then(({data:d})=>d),"v-52b41d92":()=>__vitePreload(()=>import("./make-apue.html-4b8eae56.js"),[]).then(({data:d})=>d),"v-7a0becb0":()=>__vitePreload(()=>import("./mysql字符集.html-c6b7e905.js"),[]).then(({data:d})=>d),"v-2883b3a5":()=>__vitePreload(()=>import("./nginx配置.html-c6c73d0e.js"),[]).then(({data:d})=>d),"v-31fb3d4e":()=>__vitePreload(()=>import("./openssl-ca.html-fcd59577.js"),[]).then(({data:d})=>d),"v-4cd385cc":()=>__vitePreload(()=>import("./signal.html-531024ce.js"),[]).then(({data:d})=>d),"v-08db3ce7":()=>__vitePreload(()=>import("./stdio.html-29d45878.js"),[]).then(({data:d})=>d),"v-93d304e2":()=>__vitePreload(()=>import("./umask.html-76ef68df.js"),[]).then(({data:d})=>d),"v-d2a192d8":()=>__vitePreload(()=>import("./unix历史和标准.html-e7b31583.js"),[]).then(({data:d})=>d),"v-2330770e":()=>__vitePreload(()=>import("./二叉树.html-35a011a4.js"),[]).then(({data:d})=>d),"v-69328bde":()=>__vitePreload(()=>import("./套接字.html-66bd3d0d.js"),[]).then(({data:d})=>d),"v-5a7808b6":()=>__vitePreload(()=>import("./存储器.html-de2777fc.js"),[]).then(({data:d})=>d),"v-9dc54574":()=>__vitePreload(()=>import("./守护进程.html-ec12e3a8.js"),[]).then(({data:d})=>d),"v-55113402":()=>__vitePreload(()=>import("./执行shell的三种方式.html-18945db7.js"),[]).then(({data:d})=>d),"v-454dcd6a":()=>__vitePreload(()=>import("./第一章.html-3c3650ab.js"),[]).then(({data:d})=>d),"v-d0483b36":()=>__vitePreload(()=>import("./第七章 进程环境.html-545a0615.js"),[]).then(({data:d})=>d),"v-3413ac34":()=>__vitePreload(()=>import("./第三章 文件IO.html-8922c3a8.js"),[]).then(({data:d})=>d),"v-3918c409":()=>__vitePreload(()=>import("./第九章 进程关系.html-d4c07840.js"),[]).then(({data:d})=>d),"v-125f3036":()=>__vitePreload(()=>import("./第二十一章 网络打印机通信.html-a34a0148.js"),[]).then(({data:d})=>d),"v-4c90b958":()=>__vitePreload(()=>import("./第二章.html-399c6cce.js"),[]).then(({data:d})=>d),"v-15658a77":()=>__vitePreload(()=>import("./第五章 标准IO.html-ab4dd4e1.js"),[]).then(({data:d})=>d),"v-5022612b":()=>__vitePreload(()=>import("./第八章 进程控制.html-b8c014e2.js"),[]).then(({data:d})=>d),"v-79f0a4fd":()=>__vitePreload(()=>import("./第六章 系统数据文件和信息.html-882493cd.js"),[]).then(({data:d})=>d),"v-63dc7a8e":()=>__vitePreload(()=>import("./第十一章 线程.html-544c5710.js"),[]).then(({data:d})=>d),"v-1912efa4":()=>__vitePreload(()=>import("./第十七章 高级进程间通信.html-5f4f45cb.js"),[]).then(({data:d})=>d),"v-5351d5c2":()=>__vitePreload(()=>import("./第十三章 守护进程.html-1ad901af.js"),[]).then(({data:d})=>d),"v-09bdfe36":()=>__vitePreload(()=>import("./第十二章 线程控制.html-0c17a9b2.js"),[]).then(({data:d})=>d),"v-0cfae4ee":()=>__vitePreload(()=>import("./第十五章 进程间通信.html-e2333d45.js"),[]).then(({data:d})=>d),"v-29de861a":()=>__vitePreload(()=>import("./第十八章 终端IO.html-867d6c84.js"),[]).then(({data:d})=>d),"v-45ad708e":()=>__vitePreload(()=>import("./第十六章 网络IPC 套接字.html-bfb096f2.js"),[]).then(({data:d})=>d),"v-9354be2a":()=>__vitePreload(()=>import("./第十四章 高级IO.html-d4e399b3.js"),[]).then(({data:d})=>d),"v-05e9d15d":()=>__vitePreload(()=>import("./第十章 信号.html-c43d69bc.js"),[]).then(({data:d})=>d),"v-296a96ce":()=>__vitePreload(()=>import("./第四章 文件目录.html-74f89e95.js"),[]).then(({data:d})=>d),"v-376f89aa":()=>__vitePreload(()=>import("./网络模型.html-f82ed173.js"),[]).then(({data:d})=>d),"v-76c5059c":()=>__vitePreload(()=>import("./coredump.html-2bbfc902.js"),[]).then(({data:d})=>d),"v-20d4074c":()=>__vitePreload(()=>import("./find.html-d3e4f712.js"),[]).then(({data:d})=>d),"v-1987e354":()=>__vitePreload(()=>import("./linux命令杂项.html-ac711e6f.js"),[]).then(({data:d})=>d),"v-9b6fd810":()=>__vitePreload(()=>import("./reuseport.html-c4846f8e.js"),[]).then(({data:d})=>d),"v-8931789c":()=>__vitePreload(()=>import("./swap.html-b39d6439.js"),[]).then(({data:d})=>d),"v-32db7ed0":()=>__vitePreload(()=>import("./tcpdump.html-70417d90.js"),[]).then(({data:d})=>d),"v-86c1b21a":()=>__vitePreload(()=>import("./vim.html-d6811816.js"),[]).then(({data:d})=>d),"v-5d186e13":()=>__vitePreload(()=>import("./内存耗用.html-88d87510.js"),[]).then(({data:d})=>d),"v-5c7f1620":()=>__vitePreload(()=>import("./gc 性能优化.html-0a2b6321.js"),[]).then(({data:d})=>d),"v-69f10f0f":()=>__vitePreload(()=>import("./gc.html-7eb4d576.js"),[]).then(({data:d})=>d),"v-20236824":()=>__vitePreload(()=>import("./go tool compile.html-c41b92ae.js"),[]).then(({data:d})=>d),"v-27a7113a":()=>__vitePreload(()=>import("./gpm.html-e9108334.js"),[]).then(({data:d})=>d),"v-1731abc5":()=>__vitePreload(()=>import("./mod.html-94825af5.js"),[]).then(({data:d})=>d),"v-5dba4a60":()=>__vitePreload(()=>import("./protoc.html-9a60b1f6.js"),[]).then(({data:d})=>d),"v-5bd11c99":()=>__vitePreload(()=>import("./test.html-ac53c5a5.js"),[]).then(({data:d})=>d),"v-d0470fda":()=>__vitePreload(()=>import("./基础.html-c274198f.js"),[]).then(({data:d})=>d),"v-3780fdb0":()=>__vitePreload(()=>import("./杂项.html-9d9ca3d5.js"),[]).then(({data:d})=>d),"v-45b37b7c":()=>__vitePreload(()=>import("./概念.html-b6ca2705.js"),[]).then(({data:d})=>d),"v-9f6d3fce":()=>__vitePreload(()=>import("./毛剑.html-b8639f0f.js"),[]).then(({data:d})=>d),"v-ae077b66":()=>__vitePreload(()=>import("./版本升级.html-74197840.js"),[]).then(({data:d})=>d),"v-15f7cb44":()=>__vitePreload(()=>import("./相关命令.html-66fed20d.js"),[]).then(({data:d})=>d),"v-69eb1ee5":()=>__vitePreload(()=>import("./调度.html-06a68f35.js"),[]).then(({data:d})=>d),"v-41143382":()=>__vitePreload(()=>import("./闭包.html-30ba688e.js"),[]).then(({data:d})=>d),"v-1e82a95c":()=>__vitePreload(()=>import("./操作系统.html-83dcfc28.js"),[]).then(({data:d})=>d),"v-5a02890e":()=>__vitePreload(()=>import("./testpic.html-1bafdc1b.js"),[]).then(({data:d})=>d),"v-cb60c1de":()=>__vitePreload(()=>import("./正则.html-55188ce4.js"),[]).then(({data:d})=>d),"v-311d1129":()=>__vitePreload(()=>import("./index.html-6a1bba1e.js"),[]).then(({data:d})=>d),"v-00fa2137":()=>__vitePreload(()=>import("./性能之巅.html-ef063fbd.js"),[]).then(({data:d})=>d),"v-737a2942":()=>__vitePreload(()=>import("./杂记.html-e2c1ee48.js"),[]).then(({data:d})=>d),"v-ca57f694":()=>__vitePreload(()=>import("./概念.html-c1574b6e.js"),[]).then(({data:d})=>d),"v-0d3d58f3":()=>__vitePreload(()=>import("./feature.html-b4ef7660.js"),[]).then(({data:d})=>d),"v-0995ed03":()=>__vitePreload(()=>import("./todo.html-f50871b0.js"),[]).then(({data:d})=>d),"v-c2338974":()=>__vitePreload(()=>import("./毛老师推荐.html-e0bef896.js"),[]).then(({data:d})=>d),"v-9fdd33a2":()=>__vitePreload(()=>import("./tcmalloc.html-d20dfcb7.js"),[]).then(({data:d})=>d),"v-8577f6a2":()=>__vitePreload(()=>import("./cgroup.html-860ad3f5.js"),[]).then(({data:d})=>d),"v-9c77694e":()=>__vitePreload(()=>import("./tcp协议滑动窗口.html-fa351b5b.js"),[]).then(({data:d})=>d),"v-66e1220e":()=>__vitePreload(()=>import("./协议栈.html-bc843557.js"),[]).then(({data:d})=>d),"v-04f4c8f0":()=>__vitePreload(()=>import("./时区.html-f7c594b3.js"),[]).then(({data:d})=>d),"v-7db669ff":()=>__vitePreload(()=>import("./monkey patch.html-832fdf04.js"),[]).then(({data:d})=>d),"v-cb41d22a":()=>__vitePreload(()=>import("./plan9.html-927831c6.js"),[]).then(({data:d})=>d),"v-5fe9137f":()=>__vitePreload(()=>import("./基础.html-2ef3fe50.js"),[]).then(({data:d})=>d),"v-d8c21a80":()=>__vitePreload(()=>import("./block profiling.html-a2fa6a30.js"),[]).then(({data:d})=>d),"v-095ab845":()=>__vitePreload(()=>import("./dlv 命令.html-fab20d7a.js"),[]).then(({data:d})=>d),"v-75e42678":()=>__vitePreload(()=>import("./dlv 案例.html-73a91171.js"),[]).then(({data:d})=>d),"v-6f1b987a":()=>__vitePreload(()=>import("./go profiling tracing observability.html-f4a91fac.js"),[]).then(({data:d})=>d),"v-7cf0bcd1":()=>__vitePreload(()=>import("./goroutine profiling.html-759fdc7b.js"),[]).then(({data:d})=>d),"v-cc77d808":()=>__vitePreload(()=>import("./pprof tool and format.html-5453861e.js"),[]).then(({data:d})=>d),"v-0114a559":()=>__vitePreload(()=>import("./stack traces.html-45b8597b.js"),[]).then(({data:d})=>d),"v-aac4eefa":()=>__vitePreload(()=>import("./面试.html-e973d074.js"),[]).then(({data:d})=>d),"v-20e7896c":()=>__vitePreload(()=>import("./cache.html-12983d65.js"),[]).then(({data:d})=>d),"v-0d4f4684":()=>__vitePreload(()=>import("./io.html-599be6cb.js"),[]).then(({data:d})=>d),"v-02f9f3ee":()=>__vitePreload(()=>import("./protoc.html-4a3b0cb6.js"),[]).then(({data:d})=>d),"v-96cc17a8":()=>__vitePreload(()=>import("./bytes.html-d75de193.js"),[]).then(({data:d})=>d),"v-b2c63254":()=>__vitePreload(()=>import("./container.html-30ea02d3.js"),[]).then(({data:d})=>d),"v-5962aca2":()=>__vitePreload(()=>import("./net.http.html-353a1f66.js"),[]).then(({data:d})=>d),"v-1052a15d":()=>__vitePreload(()=>import("./sort.html-6e9fcb13.js"),[]).then(({data:d})=>d),"v-2d37c472":()=>__vitePreload(()=>import("./strconv.html-2c0da222.js"),[]).then(({data:d})=>d),"v-70f1ee16":()=>__vitePreload(()=>import("./strings.html-7a36c661.js"),[]).then(({data:d})=>d),"v-473d3848":()=>__vitePreload(()=>import("./index.html-32d9a3c2.js"),[]).then(({data:d})=>d),"v-315f1caf":()=>__vitePreload(()=>import("./grpc库.html-585c241d.js"),[]).then(({data:d})=>d),"v-65d94903":()=>__vitePreload(()=>import("./af_xdp.html-098d0a58.js"),[]).then(({data:d})=>d),"v-e14f7a38":()=>__vitePreload(()=>import("./卡尔曼滤波.html-a59308e5.js"),[]).then(({data:d})=>d),"v-24d24a4f":()=>__vitePreload(()=>import("./日志.html-9a25fa74.js"),[]).then(({data:d})=>d),"v-91c031d6":()=>__vitePreload(()=>import("./服务发现.html-ee874204.js"),[]).then(({data:d})=>d),"v-41db700c":()=>__vitePreload(()=>import("./lock.html-5bafe9e1.js"),[]).then(({data:d})=>d),"v-378b0cea":()=>__vitePreload(()=>import("./mysql.html-677ebdf5.js"),[]).then(({data:d})=>d),"v-0a5aa9da":()=>__vitePreload(()=>import("./数据库原理.html-7555eb04.js"),[]).then(({data:d})=>d),"v-5ea5124a":()=>__vitePreload(()=>import("./docker.html-093de7e9.js"),[]).then(({data:d})=>d),"v-daf1ed44":()=>__vitePreload(()=>import("./iptables.html-eb322623.js"),[]).then(({data:d})=>d),"v-5704a85a":()=>__vitePreload(()=>import("./kubelet.html-eb9e9f2a.js"),[]).then(({data:d})=>d),"v-85e42c34":()=>__vitePreload(()=>import("./linux-namespace.html-321bdf45.js"),[]).then(({data:d})=>d),"v-3f2de73e":()=>__vitePreload(()=>import("./linux隧道.html-8f4573f1.js"),[]).then(({data:d})=>d),"v-5ea1901d":()=>__vitePreload(()=>import("./es搜索.html-46ff81d5.js"),[]).then(({data:d})=>d),"v-05242fd8":()=>__vitePreload(()=>import("./nginx.html-e39f9b77.js"),[]).then(({data:d})=>d),"v-0938a9d3":()=>__vitePreload(()=>import("./gossip.html-0bf5614e.js"),[]).then(({data:d})=>d),"v-4b5c10d5":()=>__vitePreload(()=>import("./wsl.html-7fd74405.js"),[]).then(({data:d})=>d),"v-09600dda":()=>__vitePreload(()=>import("./ctx-kv.html-0e05cb40.js"),[]).then(({data:d})=>d),"v-52dc23b1":()=>__vitePreload(()=>import("./ctx-time.html-78f1c917.js"),[]).then(({data:d})=>d),"v-624dff1f":()=>__vitePreload(()=>import("./grpc.html-c2894238.js"),[]).then(({data:d})=>d),"v-0b9cd25e":()=>__vitePreload(()=>import("./拦截器.html-57a98a4a.js"),[]).then(({data:d})=>d),"v-79329100":()=>__vitePreload(()=>import("./服务发现.html-3c96e2d7.js"),[]).then(({data:d})=>d),"v-e7cde7c6":()=>__vitePreload(()=>import("./chan.html-da1abfaa.js"),[]).then(({data:d})=>d),"v-36a869d0":()=>__vitePreload(()=>import("./ctx.html-3de263f8.js"),[]).then(({data:d})=>d),"v-a22d01e4":()=>__vitePreload(()=>import("./buffer.html-4bf03697.js"),[]).then(({data:d})=>d),"v-0c9a988b":()=>__vitePreload(()=>import("./bufio.html-738091f9.js"),[]).then(({data:d})=>d),"v-65042868":()=>__vitePreload(()=>import("./io.html-57610380.js"),[]).then(({data:d})=>d),"v-2f208a26":()=>__vitePreload(()=>import("./ioutil.html-8f310142.js"),[]).then(({data:d})=>d),"v-0edd84b2":()=>__vitePreload(()=>import("./pool.html-7ec5ba30.js"),[]).then(({data:d})=>d),"v-37e97163":()=>__vitePreload(()=>import("./B站搜推kv分享.html-3ddfc1b6.js"),[]).then(({data:d})=>d),"v-c225c592":()=>__vitePreload(()=>import("./lsm-tree.html-9e62042e.js"),[]).then(({data:d})=>d),"v-12c615d4":()=>__vitePreload(()=>import("./redis.html-d4d56ff8.js"),[]).then(({data:d})=>d),"v-310bef1e":()=>__vitePreload(()=>import("./group.html-7e127089.js"),[]).then(({data:d})=>d),"v-2ea49593":()=>__vitePreload(()=>import("./ascii_conn.html-dc2375c1.js"),[]).then(({data:d})=>d),"v-389e8c01":()=>__vitePreload(()=>import("./conn.html-99d93d8e.js"),[]).then(({data:d})=>d),"v-5a8b44d7":()=>__vitePreload(()=>import("./mc.html-ad4b36a8.js"),[]).then(({data:d})=>d),"v-5539e700":()=>__vitePreload(()=>import("./memcache.html-335e289f.js"),[]).then(({data:d})=>d),"v-6e55db14":()=>__vitePreload(()=>import("./pool_conn.html-4e9e305b.js"),[]).then(({data:d})=>d),"v-ee0734ea":()=>__vitePreload(()=>import("./blademaster.html-c7400404.js"),[]).then(({data:d})=>d),"v-1b2fb878":()=>__vitePreload(()=>import("./breaker.html-389d3c4e.js"),[]).then(({data:d})=>d),"v-105ea741":()=>__vitePreload(()=>import("./bbr.html-269e253f.js"),[]).then(({data:d})=>d),"v-39f8f26a":()=>__vitePreload(()=>import("./token bucket.html-61de3571.js"),[]).then(({data:d})=>d),"v-3706649a":()=>__vitePreload(()=>import("./404.html-fd9fa50e.js"),[]).then(({data:d})=>d),"v-b26deb9c":()=>__vitePreload(()=>import("./index.html-7876b59f.js"),[]).then(({data:d})=>d),"v-7445c744":()=>__vitePreload(()=>import("./index.html-cfd4c060.js"),[]).then(({data:d})=>d),"v-8845e9f4":()=>__vitePreload(()=>import("./index.html-033fea5e.js"),[]).then(({data:d})=>d),"v-144e95b7":()=>__vitePreload(()=>import("./index.html-ca5c64b5.js"),[]).then(({data:d})=>d),"v-f0383c18":()=>__vitePreload(()=>import("./index.html-3ef132c5.js"),[]).then(({data:d})=>d),"v-2d0a8eae":()=>__vitePreload(()=>import("./index.html-5b26e9ae.js"),[]).then(({data:d})=>d),"v-690bbc96":()=>__vitePreload(()=>import("./index.html-50290a1c.js"),[]).then(({data:d})=>d),"v-e4cb1150":()=>__vitePreload(()=>import("./index.html-4824a173.js"),[]).then(({data:d})=>d),"v-6c02dd81":()=>__vitePreload(()=>import("./index.html-52c3d2bc.js"),[]).then(({data:d})=>d),"v-e6bd028c":()=>__vitePreload(()=>import("./index.html-e04578c1.js"),[]).then(({data:d})=>d),"v-1559a150":()=>__vitePreload(()=>import("./index.html-ef4b1977.js"),[]).then(({data:d})=>d),"v-7f7dc1d3":()=>__vitePreload(()=>import("./index.html-bdbb06e3.js"),[]).then(({data:d})=>d),"v-4eacdcee":()=>__vitePreload(()=>import("./index.html-7006d2c9.js"),[]).then(({data:d})=>d),"v-62c15b5b":()=>__vitePreload(()=>import("./index.html-ec7ba836.js"),[]).then(({data:d})=>d),"v-28e445b4":()=>__vitePreload(()=>import("./index.html-f5ac67e7.js"),[]).then(({data:d})=>d),"v-72d55cc2":()=>__vitePreload(()=>import("./index.html-1dc02012.js"),[]).then(({data:d})=>d),"v-68f2e697":()=>__vitePreload(()=>import("./index.html-c435ceed.js"),[]).then(({data:d})=>d),"v-1726efb4":()=>__vitePreload(()=>import("./index.html-8eadb499.js"),[]).then(({data:d})=>d),"v-3415a5d6":()=>__vitePreload(()=>import("./index.html-70f0ccb9.js"),[]).then(({data:d})=>d),"v-7c55c65e":()=>__vitePreload(()=>import("./index.html-4e8bad5d.js"),[]).then(({data:d})=>d),"v-66c372a8":()=>__vitePreload(()=>import("./index.html-6840bbc3.js"),[]).then(({data:d})=>d),"v-183a65fd":()=>__vitePreload(()=>import("./index.html-956e364d.js"),[]).then(({data:d})=>d),"v-15551100":()=>__vitePreload(()=>import("./index.html-f8bba5da.js"),[]).then(({data:d})=>d),"v-62402a27":()=>__vitePreload(()=>import("./index.html-6b276e76.js"),[]).then(({data:d})=>d),"v-3571a5d8":()=>__vitePreload(()=>import("./index.html-dc48b5be.js"),[]).then(({data:d})=>d),"v-dbf7b5e2":()=>__vitePreload(()=>import("./index.html-c9aa9269.js"),[]).then(({data:d})=>d),"v-7646d841":()=>__vitePreload(()=>import("./index.html-19235c55.js"),[]).then(({data:d})=>d),"v-0d1640d5":()=>__vitePreload(()=>import("./index.html-852664f2.js"),[]).then(({data:d})=>d),"v-51d558d2":()=>__vitePreload(()=>import("./index.html-e2c804d7.js"),[]).then(({data:d})=>d),"v-3938bf0c":()=>__vitePreload(()=>import("./index.html-eeea6361.js"),[]).then(({data:d})=>d),"v-3044c875":()=>__vitePreload(()=>import("./index.html-4346ccb1.js"),[]).then(({data:d})=>d),"v-7ef5afdc":()=>__vitePreload(()=>import("./index.html-a95706f7.js"),[]).then(({data:d})=>d),"v-0bb4abea":()=>__vitePreload(()=>import("./index.html-5f888052.js"),[]).then(({data:d})=>d),"v-d6ffee84":()=>__vitePreload(()=>import("./index.html-17561ae6.js"),[]).then(({data:d})=>d),"v-01b8ccab":()=>__vitePreload(()=>import("./index.html-618227e2.js"),[]).then(({data:d})=>d),"v-774abd56":()=>__vitePreload(()=>import("./index.html-62e21de1.js"),[]).then(({data:d})=>d),"v-ee2a1ec6":()=>__vitePreload(()=>import("./index.html-2c810c0e.js"),[]).then(({data:d})=>d),"v-377f6916":()=>__vitePreload(()=>import("./index.html-058b410f.js"),[]).then(({data:d})=>d),"v-f59c8a2e":()=>__vitePreload(()=>import("./index.html-637b49c2.js"),[]).then(({data:d})=>d),"v-32a02f77":()=>__vitePreload(()=>import("./index.html-488aec85.js"),[]).then(({data:d})=>d),"v-368ce2ac":()=>__vitePreload(()=>import("./index.html-be89aeda.js"),[]).then(({data:d})=>d),"v-74ac88ec":()=>__vitePreload(()=>import("./index.html-6b6264be.js"),[]).then(({data:d})=>d),"v-6268aeca":()=>__vitePreload(()=>import("./index.html-7c4c4e0f.js"),[]).then(({data:d})=>d),"v-5f7a82ea":()=>__vitePreload(()=>import("./index.html-7903ad8b.js"),[]).then(({data:d})=>d),"v-dbd5e54c":()=>__vitePreload(()=>import("./index.html-6aa48b51.js"),[]).then(({data:d})=>d),"v-0adffe06":()=>__vitePreload(()=>import("./index.html-5ea7eb08.js"),[]).then(({data:d})=>d),"v-5bc93818":()=>__vitePreload(()=>import("./index.html-524ec402.js"),[]).then(({data:d})=>d),"v-744d024e":()=>__vitePreload(()=>import("./index.html-9b88fc33.js"),[]).then(({data:d})=>d),"v-e52c881c":()=>__vitePreload(()=>import("./index.html-a86a5ed6.js"),[]).then(({data:d})=>d),"v-154dc4c4":()=>__vitePreload(()=>import("./index.html-c2fc78d5.js"),[]).then(({data:d})=>d),"v-01560935":()=>__vitePreload(()=>import("./index.html-64834f8f.js"),[]).then(({data:d})=>d),"v-5bc77b38":()=>__vitePreload(()=>import("./index.html-cdac3602.js"),[]).then(({data:d})=>d),"v-287f3643":()=>__vitePreload(()=>import("./index.html-95a548ce.js"),[]).then(({data:d})=>d)},siteData$1=JSON.parse('{"base":"/","lang":"en-US","title":"","description":"","head":[],"locales":{"/":{"lang":"zh-CN","title":"rz文档","description":"rz文档"}}}'),pagesComponents={"v-8daa1a0e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8750a35b.js"),["assets/index.html-8750a35b.js","assets/framework-7d39e0da.js"])),"v-14679d9e":defineAsyncComponent(()=>__vitePreload(()=>import("./常见算法.html-ed3b683f.js"),["assets/常见算法.html-ed3b683f.js","assets/framework-7d39e0da.js"])),"v-0f76b6d9":defineAsyncComponent(()=>__vitePreload(()=>import("./DDD.html-6c46eb1c.js"),["assets/DDD.html-6c46eb1c.js","assets/framework-7d39e0da.js"])),"v-626d1f23":defineAsyncComponent(()=>__vitePreload(()=>import("./大纲.html-f8ac6a24.js"),["assets/大纲.html-f8ac6a24.js","assets/framework-7d39e0da.js"])),"v-f54f2f0e":defineAsyncComponent(()=>__vitePreload(()=>import("./CRLF.html-a1b78858.js"),["assets/CRLF.html-a1b78858.js","assets/framework-7d39e0da.js"])),"v-540b3114":defineAsyncComponent(()=>__vitePreload(()=>import("./IPC.html-1c6ce93a.js"),["assets/IPC.html-1c6ce93a.js","assets/framework-7d39e0da.js"])),"v-ffbecaec":defineAsyncComponent(()=>__vitePreload(()=>import("./K8s.html-41be84e8.js"),["assets/K8s.html-41be84e8.js","assets/framework-7d39e0da.js"])),"v-54a85011":defineAsyncComponent(()=>__vitePreload(()=>import("./Linux初级指令.html-b20e4a15.js"),["assets/Linux初级指令.html-b20e4a15.js","assets/framework-7d39e0da.js"])),"v-80f3353a":defineAsyncComponent(()=>__vitePreload(()=>import("./apue.html-d4c96dde.js"),["assets/apue.html-d4c96dde.js","assets/framework-7d39e0da.js"])),"v-08d2adae":defineAsyncComponent(()=>__vitePreload(()=>import("./c primary.html-d78a0335.js"),["assets/c primary.html-d78a0335.js","assets/framework-7d39e0da.js"])),"v-3dca5d6e":defineAsyncComponent(()=>__vitePreload(()=>import("./c语言指针数组.html-eb0440d1.js"),["assets/c语言指针数组.html-eb0440d1.js","assets/framework-7d39e0da.js"])),"v-b7c0262e":defineAsyncComponent(()=>__vitePreload(()=>import("./gcc.html-11d2bf1a.js"),["assets/gcc.html-11d2bf1a.js","assets/framework-7d39e0da.js"])),"v-02f09a04":defineAsyncComponent(()=>__vitePreload(()=>import("./git.html-45f09b50.js"),["assets/git.html-45f09b50.js","assets/framework-7d39e0da.js"])),"v-05ab0988":defineAsyncComponent(()=>__vitePreload(()=>import("./http code.html-0ab6018c.js"),["assets/http code.html-0ab6018c.js","assets/framework-7d39e0da.js"])),"v-52b41d92":defineAsyncComponent(()=>__vitePreload(()=>import("./make-apue.html-3680d0e5.js"),["assets/make-apue.html-3680d0e5.js","assets/framework-7d39e0da.js"])),"v-7a0becb0":defineAsyncComponent(()=>__vitePreload(()=>import("./mysql字符集.html-720fb941.js"),["assets/mysql字符集.html-720fb941.js","assets/framework-7d39e0da.js"])),"v-2883b3a5":defineAsyncComponent(()=>__vitePreload(()=>import("./nginx配置.html-b206a8d5.js"),["assets/nginx配置.html-b206a8d5.js","assets/framework-7d39e0da.js"])),"v-31fb3d4e":defineAsyncComponent(()=>__vitePreload(()=>import("./openssl-ca.html-8de43b81.js"),["assets/openssl-ca.html-8de43b81.js","assets/framework-7d39e0da.js"])),"v-4cd385cc":defineAsyncComponent(()=>__vitePreload(()=>import("./signal.html-610c97e2.js"),["assets/signal.html-610c97e2.js","assets/framework-7d39e0da.js"])),"v-08db3ce7":defineAsyncComponent(()=>__vitePreload(()=>import("./stdio.html-19c7e46d.js"),["assets/stdio.html-19c7e46d.js","assets/framework-7d39e0da.js"])),"v-93d304e2":defineAsyncComponent(()=>__vitePreload(()=>import("./umask.html-21084a4f.js"),["assets/umask.html-21084a4f.js","assets/framework-7d39e0da.js"])),"v-d2a192d8":defineAsyncComponent(()=>__vitePreload(()=>import("./unix历史和标准.html-9c9145ff.js"),["assets/unix历史和标准.html-9c9145ff.js","assets/framework-7d39e0da.js"])),"v-2330770e":defineAsyncComponent(()=>__vitePreload(()=>import("./二叉树.html-b2a57926.js"),["assets/二叉树.html-b2a57926.js","assets/framework-7d39e0da.js"])),"v-69328bde":defineAsyncComponent(()=>__vitePreload(()=>import("./套接字.html-3e469492.js"),["assets/套接字.html-3e469492.js","assets/framework-7d39e0da.js"])),"v-5a7808b6":defineAsyncComponent(()=>__vitePreload(()=>import("./存储器.html-d64fa723.js"),["assets/存储器.html-d64fa723.js","assets/framework-7d39e0da.js"])),"v-9dc54574":defineAsyncComponent(()=>__vitePreload(()=>import("./守护进程.html-42913630.js"),["assets/守护进程.html-42913630.js","assets/framework-7d39e0da.js"])),"v-55113402":defineAsyncComponent(()=>__vitePreload(()=>import("./执行shell的三种方式.html-036852ac.js"),["assets/执行shell的三种方式.html-036852ac.js","assets/framework-7d39e0da.js"])),"v-454dcd6a":defineAsyncComponent(()=>__vitePreload(()=>import("./第一章.html-7f8a41ed.js"),["assets/第一章.html-7f8a41ed.js","assets/framework-7d39e0da.js"])),"v-d0483b36":defineAsyncComponent(()=>__vitePreload(()=>import("./第七章 进程环境.html-04373e5a.js"),["assets/第七章 进程环境.html-04373e5a.js","assets/framework-7d39e0da.js"])),"v-3413ac34":defineAsyncComponent(()=>__vitePreload(()=>import("./第三章 文件IO.html-918d21a4.js"),["assets/第三章 文件IO.html-918d21a4.js","assets/framework-7d39e0da.js"])),"v-3918c409":defineAsyncComponent(()=>__vitePreload(()=>import("./第九章 进程关系.html-d5a1c8bc.js"),["assets/第九章 进程关系.html-d5a1c8bc.js","assets/framework-7d39e0da.js"])),"v-125f3036":defineAsyncComponent(()=>__vitePreload(()=>import("./第二十一章 网络打印机通信.html-f3f9b043.js"),["assets/第二十一章 网络打印机通信.html-f3f9b043.js","assets/framework-7d39e0da.js"])),"v-4c90b958":defineAsyncComponent(()=>__vitePreload(()=>import("./第二章.html-46f7e717.js"),["assets/第二章.html-46f7e717.js","assets/framework-7d39e0da.js"])),"v-15658a77":defineAsyncComponent(()=>__vitePreload(()=>import("./第五章 标准IO.html-bb529870.js"),["assets/第五章 标准IO.html-bb529870.js","assets/framework-7d39e0da.js"])),"v-5022612b":defineAsyncComponent(()=>__vitePreload(()=>import("./第八章 进程控制.html-1193777a.js"),["assets/第八章 进程控制.html-1193777a.js","assets/framework-7d39e0da.js"])),"v-79f0a4fd":defineAsyncComponent(()=>__vitePreload(()=>import("./第六章 系统数据文件和信息.html-80fb7453.js"),["assets/第六章 系统数据文件和信息.html-80fb7453.js","assets/framework-7d39e0da.js"])),"v-63dc7a8e":defineAsyncComponent(()=>__vitePreload(()=>import("./第十一章 线程.html-576c68bd.js"),["assets/第十一章 线程.html-576c68bd.js","assets/framework-7d39e0da.js"])),"v-1912efa4":defineAsyncComponent(()=>__vitePreload(()=>import("./第十七章 高级进程间通信.html-768a8e4a.js"),["assets/第十七章 高级进程间通信.html-768a8e4a.js","assets/framework-7d39e0da.js"])),"v-5351d5c2":defineAsyncComponent(()=>__vitePreload(()=>import("./第十三章 守护进程.html-7232bb88.js"),["assets/第十三章 守护进程.html-7232bb88.js","assets/framework-7d39e0da.js"])),"v-09bdfe36":defineAsyncComponent(()=>__vitePreload(()=>import("./第十二章 线程控制.html-8d544868.js"),["assets/第十二章 线程控制.html-8d544868.js","assets/framework-7d39e0da.js"])),"v-0cfae4ee":defineAsyncComponent(()=>__vitePreload(()=>import("./第十五章 进程间通信.html-2ec80e23.js"),["assets/第十五章 进程间通信.html-2ec80e23.js","assets/framework-7d39e0da.js"])),"v-29de861a":defineAsyncComponent(()=>__vitePreload(()=>import("./第十八章 终端IO.html-fb8a45af.js"),["assets/第十八章 终端IO.html-fb8a45af.js","assets/framework-7d39e0da.js"])),"v-45ad708e":defineAsyncComponent(()=>__vitePreload(()=>import("./第十六章 网络IPC 套接字.html-0793b334.js"),["assets/第十六章 网络IPC 套接字.html-0793b334.js","assets/framework-7d39e0da.js"])),"v-9354be2a":defineAsyncComponent(()=>__vitePreload(()=>import("./第十四章 高级IO.html-a6d8a941.js"),["assets/第十四章 高级IO.html-a6d8a941.js","assets/framework-7d39e0da.js"])),"v-05e9d15d":defineAsyncComponent(()=>__vitePreload(()=>import("./第十章 信号.html-9f2997c8.js"),["assets/第十章 信号.html-9f2997c8.js","assets/framework-7d39e0da.js"])),"v-296a96ce":defineAsyncComponent(()=>__vitePreload(()=>import("./第四章 文件目录.html-6239240f.js"),["assets/第四章 文件目录.html-6239240f.js","assets/framework-7d39e0da.js"])),"v-376f89aa":defineAsyncComponent(()=>__vitePreload(()=>import("./网络模型.html-d0e07473.js"),["assets/网络模型.html-d0e07473.js","assets/framework-7d39e0da.js"])),"v-76c5059c":defineAsyncComponent(()=>__vitePreload(()=>import("./coredump.html-c919657e.js"),["assets/coredump.html-c919657e.js","assets/framework-7d39e0da.js"])),"v-20d4074c":defineAsyncComponent(()=>__vitePreload(()=>import("./find.html-7f1857a9.js"),["assets/find.html-7f1857a9.js","assets/framework-7d39e0da.js"])),"v-1987e354":defineAsyncComponent(()=>__vitePreload(()=>import("./linux命令杂项.html-f47516b0.js"),["assets/linux命令杂项.html-f47516b0.js","assets/framework-7d39e0da.js"])),"v-9b6fd810":defineAsyncComponent(()=>__vitePreload(()=>import("./reuseport.html-a0d9b89b.js"),["assets/reuseport.html-a0d9b89b.js","assets/framework-7d39e0da.js"])),"v-8931789c":defineAsyncComponent(()=>__vitePreload(()=>import("./swap.html-146d67a7.js"),["assets/swap.html-146d67a7.js","assets/framework-7d39e0da.js"])),"v-32db7ed0":defineAsyncComponent(()=>__vitePreload(()=>import("./tcpdump.html-d06a5cea.js"),["assets/tcpdump.html-d06a5cea.js","assets/framework-7d39e0da.js"])),"v-86c1b21a":defineAsyncComponent(()=>__vitePreload(()=>import("./vim.html-a978f99e.js"),["assets/vim.html-a978f99e.js","assets/framework-7d39e0da.js"])),"v-5d186e13":defineAsyncComponent(()=>__vitePreload(()=>import("./内存耗用.html-be8e2466.js"),["assets/内存耗用.html-be8e2466.js","assets/framework-7d39e0da.js"])),"v-5c7f1620":defineAsyncComponent(()=>__vitePreload(()=>import("./gc 性能优化.html-2558968a.js"),["assets/gc 性能优化.html-2558968a.js","assets/framework-7d39e0da.js"])),"v-69f10f0f":defineAsyncComponent(()=>__vitePreload(()=>import("./gc.html-7fda1de1.js"),["assets/gc.html-7fda1de1.js","assets/framework-7d39e0da.js"])),"v-20236824":defineAsyncComponent(()=>__vitePreload(()=>import("./go tool compile.html-1b419296.js"),["assets/go tool compile.html-1b419296.js","assets/framework-7d39e0da.js"])),"v-27a7113a":defineAsyncComponent(()=>__vitePreload(()=>import("./gpm.html-e44093f3.js"),["assets/gpm.html-e44093f3.js","assets/framework-7d39e0da.js"])),"v-1731abc5":defineAsyncComponent(()=>__vitePreload(()=>import("./mod.html-30b4e3c8.js"),["assets/mod.html-30b4e3c8.js","assets/framework-7d39e0da.js"])),"v-5dba4a60":defineAsyncComponent(()=>__vitePreload(()=>import("./protoc.html-806b00c7.js"),["assets/protoc.html-806b00c7.js","assets/framework-7d39e0da.js"])),"v-5bd11c99":defineAsyncComponent(()=>__vitePreload(()=>import("./test.html-0a35c6ad.js"),["assets/test.html-0a35c6ad.js","assets/framework-7d39e0da.js"])),"v-d0470fda":defineAsyncComponent(()=>__vitePreload(()=>import("./基础.html-45879371.js"),["assets/基础.html-45879371.js","assets/framework-7d39e0da.js"])),"v-3780fdb0":defineAsyncComponent(()=>__vitePreload(()=>import("./杂项.html-2b1fa187.js"),["assets/杂项.html-2b1fa187.js","assets/framework-7d39e0da.js"])),"v-45b37b7c":defineAsyncComponent(()=>__vitePreload(()=>import("./概念.html-2852f462.js"),["assets/概念.html-2852f462.js","assets/framework-7d39e0da.js"])),"v-9f6d3fce":defineAsyncComponent(()=>__vitePreload(()=>import("./毛剑.html-da01a160.js"),["assets/毛剑.html-da01a160.js","assets/framework-7d39e0da.js"])),"v-ae077b66":defineAsyncComponent(()=>__vitePreload(()=>import("./版本升级.html-e3ef110f.js"),["assets/版本升级.html-e3ef110f.js","assets/framework-7d39e0da.js"])),"v-15f7cb44":defineAsyncComponent(()=>__vitePreload(()=>import("./相关命令.html-d909e2ac.js"),["assets/相关命令.html-d909e2ac.js","assets/framework-7d39e0da.js"])),"v-69eb1ee5":defineAsyncComponent(()=>__vitePreload(()=>import("./调度.html-b2f77687.js"),["assets/调度.html-b2f77687.js","assets/framework-7d39e0da.js"])),"v-41143382":defineAsyncComponent(()=>__vitePreload(()=>import("./闭包.html-86730cb5.js"),["assets/闭包.html-86730cb5.js","assets/framework-7d39e0da.js"])),"v-1e82a95c":defineAsyncComponent(()=>__vitePreload(()=>import("./操作系统.html-b68bd8f5.js"),["assets/操作系统.html-b68bd8f5.js","assets/framework-7d39e0da.js"])),"v-5a02890e":defineAsyncComponent(()=>__vitePreload(()=>import("./testpic.html-73bc7998.js"),["assets/testpic.html-73bc7998.js","assets/framework-7d39e0da.js"])),"v-cb60c1de":defineAsyncComponent(()=>__vitePreload(()=>import("./正则.html-a12ff841.js"),["assets/正则.html-a12ff841.js","assets/framework-7d39e0da.js"])),"v-311d1129":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-01d5dea1.js"),["assets/index.html-01d5dea1.js","assets/framework-7d39e0da.js"])),"v-00fa2137":defineAsyncComponent(()=>__vitePreload(()=>import("./性能之巅.html-c12d43d7.js"),["assets/性能之巅.html-c12d43d7.js","assets/framework-7d39e0da.js"])),"v-737a2942":defineAsyncComponent(()=>__vitePreload(()=>import("./杂记.html-ba9490b1.js"),["assets/杂记.html-ba9490b1.js","assets/framework-7d39e0da.js"])),"v-ca57f694":defineAsyncComponent(()=>__vitePreload(()=>import("./概念.html-241a6928.js"),["assets/概念.html-241a6928.js","assets/framework-7d39e0da.js"])),"v-0d3d58f3":defineAsyncComponent(()=>__vitePreload(()=>import("./feature.html-2ae55390.js"),["assets/feature.html-2ae55390.js","assets/framework-7d39e0da.js"])),"v-0995ed03":defineAsyncComponent(()=>__vitePreload(()=>import("./todo.html-64abf7e3.js"),["assets/todo.html-64abf7e3.js","assets/framework-7d39e0da.js"])),"v-c2338974":defineAsyncComponent(()=>__vitePreload(()=>import("./毛老师推荐.html-8ccf296b.js"),["assets/毛老师推荐.html-8ccf296b.js","assets/framework-7d39e0da.js"])),"v-9fdd33a2":defineAsyncComponent(()=>__vitePreload(()=>import("./tcmalloc.html-e241b2c4.js"),["assets/tcmalloc.html-e241b2c4.js","assets/framework-7d39e0da.js"])),"v-8577f6a2":defineAsyncComponent(()=>__vitePreload(()=>import("./cgroup.html-31685f90.js"),["assets/cgroup.html-31685f90.js","assets/framework-7d39e0da.js"])),"v-9c77694e":defineAsyncComponent(()=>__vitePreload(()=>import("./tcp协议滑动窗口.html-e0eca306.js"),["assets/tcp协议滑动窗口.html-e0eca306.js","assets/framework-7d39e0da.js"])),"v-66e1220e":defineAsyncComponent(()=>__vitePreload(()=>import("./协议栈.html-993bcada.js"),["assets/协议栈.html-993bcada.js","assets/framework-7d39e0da.js"])),"v-04f4c8f0":defineAsyncComponent(()=>__vitePreload(()=>import("./时区.html-83e75c29.js"),["assets/时区.html-83e75c29.js","assets/framework-7d39e0da.js"])),"v-7db669ff":defineAsyncComponent(()=>__vitePreload(()=>import("./monkey patch.html-566318c9.js"),["assets/monkey patch.html-566318c9.js","assets/framework-7d39e0da.js"])),"v-cb41d22a":defineAsyncComponent(()=>__vitePreload(()=>import("./plan9.html-6aa01e10.js"),["assets/plan9.html-6aa01e10.js","assets/framework-7d39e0da.js"])),"v-5fe9137f":defineAsyncComponent(()=>__vitePreload(()=>import("./基础.html-b445ce50.js"),["assets/基础.html-b445ce50.js","assets/framework-7d39e0da.js"])),"v-d8c21a80":defineAsyncComponent(()=>__vitePreload(()=>import("./block profiling.html-846484f4.js"),["assets/block profiling.html-846484f4.js","assets/framework-7d39e0da.js"])),"v-095ab845":defineAsyncComponent(()=>__vitePreload(()=>import("./dlv 命令.html-a05823df.js"),["assets/dlv 命令.html-a05823df.js","assets/framework-7d39e0da.js"])),"v-75e42678":defineAsyncComponent(()=>__vitePreload(()=>import("./dlv 案例.html-93e26e67.js"),["assets/dlv 案例.html-93e26e67.js","assets/framework-7d39e0da.js"])),"v-6f1b987a":defineAsyncComponent(()=>__vitePreload(()=>import("./go profiling tracing observability.html-4156e5cc.js"),["assets/go profiling tracing observability.html-4156e5cc.js","assets/framework-7d39e0da.js"])),"v-7cf0bcd1":defineAsyncComponent(()=>__vitePreload(()=>import("./goroutine profiling.html-25afc4c4.js"),["assets/goroutine profiling.html-25afc4c4.js","assets/framework-7d39e0da.js"])),"v-cc77d808":defineAsyncComponent(()=>__vitePreload(()=>import("./pprof tool and format.html-9da30c43.js"),["assets/pprof tool and format.html-9da30c43.js","assets/framework-7d39e0da.js"])),"v-0114a559":defineAsyncComponent(()=>__vitePreload(()=>import("./stack traces.html-470aa802.js"),["assets/stack traces.html-470aa802.js","assets/framework-7d39e0da.js"])),"v-aac4eefa":defineAsyncComponent(()=>__vitePreload(()=>import("./面试.html-a97710ce.js"),["assets/面试.html-a97710ce.js","assets/framework-7d39e0da.js"])),"v-20e7896c":defineAsyncComponent(()=>__vitePreload(()=>import("./cache.html-c1ad5af1.js"),["assets/cache.html-c1ad5af1.js","assets/framework-7d39e0da.js"])),"v-0d4f4684":defineAsyncComponent(()=>__vitePreload(()=>import("./io.html-7d5e8329.js"),["assets/io.html-7d5e8329.js","assets/framework-7d39e0da.js"])),"v-02f9f3ee":defineAsyncComponent(()=>__vitePreload(()=>import("./protoc.html-68814965.js"),["assets/protoc.html-68814965.js","assets/framework-7d39e0da.js"])),"v-96cc17a8":defineAsyncComponent(()=>__vitePreload(()=>import("./bytes.html-51a87c97.js"),["assets/bytes.html-51a87c97.js","assets/framework-7d39e0da.js"])),"v-b2c63254":defineAsyncComponent(()=>__vitePreload(()=>import("./container.html-4745eec7.js"),["assets/container.html-4745eec7.js","assets/framework-7d39e0da.js"])),"v-5962aca2":defineAsyncComponent(()=>__vitePreload(()=>import("./net.http.html-0cdda788.js"),["assets/net.http.html-0cdda788.js","assets/framework-7d39e0da.js"])),"v-1052a15d":defineAsyncComponent(()=>__vitePreload(()=>import("./sort.html-9a6b5277.js"),["assets/sort.html-9a6b5277.js","assets/framework-7d39e0da.js"])),"v-2d37c472":defineAsyncComponent(()=>__vitePreload(()=>import("./strconv.html-6118f09c.js"),["assets/strconv.html-6118f09c.js","assets/framework-7d39e0da.js"])),"v-70f1ee16":defineAsyncComponent(()=>__vitePreload(()=>import("./strings.html-29f60210.js"),["assets/strings.html-29f60210.js","assets/framework-7d39e0da.js"])),"v-473d3848":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-3e4cc6f0.js"),["assets/index.html-3e4cc6f0.js","assets/framework-7d39e0da.js"])),"v-315f1caf":defineAsyncComponent(()=>__vitePreload(()=>import("./grpc库.html-289fcee5.js"),["assets/grpc库.html-289fcee5.js","assets/framework-7d39e0da.js"])),"v-65d94903":defineAsyncComponent(()=>__vitePreload(()=>import("./af_xdp.html-2eae78cf.js"),["assets/af_xdp.html-2eae78cf.js","assets/framework-7d39e0da.js"])),"v-e14f7a38":defineAsyncComponent(()=>__vitePreload(()=>import("./卡尔曼滤波.html-fead1f6d.js"),["assets/卡尔曼滤波.html-fead1f6d.js","assets/framework-7d39e0da.js"])),"v-24d24a4f":defineAsyncComponent(()=>__vitePreload(()=>import("./日志.html-6debd3f6.js"),["assets/日志.html-6debd3f6.js","assets/framework-7d39e0da.js"])),"v-91c031d6":defineAsyncComponent(()=>__vitePreload(()=>import("./服务发现.html-e5e8e4c8.js"),["assets/服务发现.html-e5e8e4c8.js","assets/framework-7d39e0da.js"])),"v-41db700c":defineAsyncComponent(()=>__vitePreload(()=>import("./lock.html-654287eb.js"),["assets/lock.html-654287eb.js","assets/framework-7d39e0da.js"])),"v-378b0cea":defineAsyncComponent(()=>__vitePreload(()=>import("./mysql.html-504cd9c6.js"),["assets/mysql.html-504cd9c6.js","assets/framework-7d39e0da.js"])),"v-0a5aa9da":defineAsyncComponent(()=>__vitePreload(()=>import("./数据库原理.html-a1591811.js"),["assets/数据库原理.html-a1591811.js","assets/framework-7d39e0da.js"])),"v-5ea5124a":defineAsyncComponent(()=>__vitePreload(()=>import("./docker.html-3ad7428a.js"),["assets/docker.html-3ad7428a.js","assets/framework-7d39e0da.js"])),"v-daf1ed44":defineAsyncComponent(()=>__vitePreload(()=>import("./iptables.html-7f22e75c.js"),["assets/iptables.html-7f22e75c.js","assets/framework-7d39e0da.js"])),"v-5704a85a":defineAsyncComponent(()=>__vitePreload(()=>import("./kubelet.html-8fd7dd76.js"),["assets/kubelet.html-8fd7dd76.js","assets/framework-7d39e0da.js"])),"v-85e42c34":defineAsyncComponent(()=>__vitePreload(()=>import("./linux-namespace.html-a4e6dce3.js"),["assets/linux-namespace.html-a4e6dce3.js","assets/framework-7d39e0da.js"])),"v-3f2de73e":defineAsyncComponent(()=>__vitePreload(()=>import("./linux隧道.html-0d2d1a18.js"),["assets/linux隧道.html-0d2d1a18.js","assets/framework-7d39e0da.js"])),"v-5ea1901d":defineAsyncComponent(()=>__vitePreload(()=>import("./es搜索.html-b181f091.js"),["assets/es搜索.html-b181f091.js","assets/framework-7d39e0da.js"])),"v-05242fd8":defineAsyncComponent(()=>__vitePreload(()=>import("./nginx.html-33f90a6d.js"),["assets/nginx.html-33f90a6d.js","assets/framework-7d39e0da.js"])),"v-0938a9d3":defineAsyncComponent(()=>__vitePreload(()=>import("./gossip.html-0c9fc00f.js"),["assets/gossip.html-0c9fc00f.js","assets/framework-7d39e0da.js"])),"v-4b5c10d5":defineAsyncComponent(()=>__vitePreload(()=>import("./wsl.html-d12e3112.js"),["assets/wsl.html-d12e3112.js","assets/framework-7d39e0da.js"])),"v-09600dda":defineAsyncComponent(()=>__vitePreload(()=>import("./ctx-kv.html-3ce535af.js"),["assets/ctx-kv.html-3ce535af.js","assets/framework-7d39e0da.js"])),"v-52dc23b1":defineAsyncComponent(()=>__vitePreload(()=>import("./ctx-time.html-a47eb5e2.js"),["assets/ctx-time.html-a47eb5e2.js","assets/framework-7d39e0da.js"])),"v-624dff1f":defineAsyncComponent(()=>__vitePreload(()=>import("./grpc.html-0a603105.js"),["assets/grpc.html-0a603105.js","assets/framework-7d39e0da.js"])),"v-0b9cd25e":defineAsyncComponent(()=>__vitePreload(()=>import("./拦截器.html-cd31bc2e.js"),["assets/拦截器.html-cd31bc2e.js","assets/framework-7d39e0da.js"])),"v-79329100":defineAsyncComponent(()=>__vitePreload(()=>import("./服务发现.html-c19172c9.js"),["assets/服务发现.html-c19172c9.js","assets/framework-7d39e0da.js"])),"v-e7cde7c6":defineAsyncComponent(()=>__vitePreload(()=>import("./chan.html-1b80c08c.js"),["assets/chan.html-1b80c08c.js","assets/framework-7d39e0da.js"])),"v-36a869d0":defineAsyncComponent(()=>__vitePreload(()=>import("./ctx.html-240afe79.js"),["assets/ctx.html-240afe79.js","assets/framework-7d39e0da.js"])),"v-a22d01e4":defineAsyncComponent(()=>__vitePreload(()=>import("./buffer.html-a40622f9.js"),["assets/buffer.html-a40622f9.js","assets/framework-7d39e0da.js"])),"v-0c9a988b":defineAsyncComponent(()=>__vitePreload(()=>import("./bufio.html-d0753398.js"),["assets/bufio.html-d0753398.js","assets/framework-7d39e0da.js"])),"v-65042868":defineAsyncComponent(()=>__vitePreload(()=>import("./io.html-8f42c191.js"),["assets/io.html-8f42c191.js","assets/framework-7d39e0da.js"])),"v-2f208a26":defineAsyncComponent(()=>__vitePreload(()=>import("./ioutil.html-68d7c21f.js"),["assets/ioutil.html-68d7c21f.js","assets/framework-7d39e0da.js"])),"v-0edd84b2":defineAsyncComponent(()=>__vitePreload(()=>import("./pool.html-ebb0d4c2.js"),["assets/pool.html-ebb0d4c2.js","assets/framework-7d39e0da.js"])),"v-37e97163":defineAsyncComponent(()=>__vitePreload(()=>import("./B站搜推kv分享.html-5649e1fc.js"),["assets/B站搜推kv分享.html-5649e1fc.js","assets/framework-7d39e0da.js"])),"v-c225c592":defineAsyncComponent(()=>__vitePreload(()=>import("./lsm-tree.html-3e64187d.js"),["assets/lsm-tree.html-3e64187d.js","assets/framework-7d39e0da.js"])),"v-12c615d4":defineAsyncComponent(()=>__vitePreload(()=>import("./redis.html-2665ff8d.js"),["assets/redis.html-2665ff8d.js","assets/framework-7d39e0da.js"])),"v-310bef1e":defineAsyncComponent(()=>__vitePreload(()=>import("./group.html-e33fc91c.js"),["assets/group.html-e33fc91c.js","assets/framework-7d39e0da.js"])),"v-2ea49593":defineAsyncComponent(()=>__vitePreload(()=>import("./ascii_conn.html-477b0521.js"),["assets/ascii_conn.html-477b0521.js","assets/framework-7d39e0da.js"])),"v-389e8c01":defineAsyncComponent(()=>__vitePreload(()=>import("./conn.html-5cb6f844.js"),["assets/conn.html-5cb6f844.js","assets/framework-7d39e0da.js"])),"v-5a8b44d7":defineAsyncComponent(()=>__vitePreload(()=>import("./mc.html-9a9c447e.js"),["assets/mc.html-9a9c447e.js","assets/framework-7d39e0da.js"])),"v-5539e700":defineAsyncComponent(()=>__vitePreload(()=>import("./memcache.html-a3a460dd.js"),["assets/memcache.html-a3a460dd.js","assets/framework-7d39e0da.js"])),"v-6e55db14":defineAsyncComponent(()=>__vitePreload(()=>import("./pool_conn.html-5be9a30c.js"),["assets/pool_conn.html-5be9a30c.js","assets/framework-7d39e0da.js"])),"v-ee0734ea":defineAsyncComponent(()=>__vitePreload(()=>import("./blademaster.html-6ce8968b.js"),["assets/blademaster.html-6ce8968b.js","assets/framework-7d39e0da.js"])),"v-1b2fb878":defineAsyncComponent(()=>__vitePreload(()=>import("./breaker.html-5fd7f405.js"),["assets/breaker.html-5fd7f405.js","assets/framework-7d39e0da.js"])),"v-105ea741":defineAsyncComponent(()=>__vitePreload(()=>import("./bbr.html-4d046915.js"),["assets/bbr.html-4d046915.js","assets/framework-7d39e0da.js"])),"v-39f8f26a":defineAsyncComponent(()=>__vitePreload(()=>import("./token bucket.html-c0421487.js"),["assets/token bucket.html-c0421487.js","assets/framework-7d39e0da.js"])),"v-3706649a":defineAsyncComponent(()=>__vitePreload(()=>import("./404.html-6066aa70.js"),["assets/404.html-6066aa70.js","assets/framework-7d39e0da.js"])),"v-b26deb9c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-4f868654.js"),["assets/index.html-4f868654.js","assets/framework-7d39e0da.js"])),"v-7445c744":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-19fbec2c.js"),["assets/index.html-19fbec2c.js","assets/framework-7d39e0da.js"])),"v-8845e9f4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-6ef3a0dc.js"),["assets/index.html-6ef3a0dc.js","assets/framework-7d39e0da.js"])),"v-144e95b7":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-a90564c2.js"),["assets/index.html-a90564c2.js","assets/framework-7d39e0da.js"])),"v-f0383c18":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-93866af1.js"),["assets/index.html-93866af1.js","assets/framework-7d39e0da.js"])),"v-2d0a8eae":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-e1f87652.js"),["assets/index.html-e1f87652.js","assets/framework-7d39e0da.js"])),"v-690bbc96":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f053a239.js"),["assets/index.html-f053a239.js","assets/framework-7d39e0da.js"])),"v-e4cb1150":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ff979dd3.js"),["assets/index.html-ff979dd3.js","assets/framework-7d39e0da.js"])),"v-6c02dd81":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f7f5a710.js"),["assets/index.html-f7f5a710.js","assets/framework-7d39e0da.js"])),"v-e6bd028c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-23a111dc.js"),["assets/index.html-23a111dc.js","assets/framework-7d39e0da.js"])),"v-1559a150":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-37d2a688.js"),["assets/index.html-37d2a688.js","assets/framework-7d39e0da.js"])),"v-7f7dc1d3":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-aa80393e.js"),["assets/index.html-aa80393e.js","assets/framework-7d39e0da.js"])),"v-4eacdcee":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-d1cf878b.js"),["assets/index.html-d1cf878b.js","assets/framework-7d39e0da.js"])),"v-62c15b5b":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-822366e8.js"),["assets/index.html-822366e8.js","assets/framework-7d39e0da.js"])),"v-28e445b4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0128686f.js"),["assets/index.html-0128686f.js","assets/framework-7d39e0da.js"])),"v-72d55cc2":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ecb0e99f.js"),["assets/index.html-ecb0e99f.js","assets/framework-7d39e0da.js"])),"v-68f2e697":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8d7dcd92.js"),["assets/index.html-8d7dcd92.js","assets/framework-7d39e0da.js"])),"v-1726efb4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0f5eb9e5.js"),["assets/index.html-0f5eb9e5.js","assets/framework-7d39e0da.js"])),"v-3415a5d6":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f2fe593b.js"),["assets/index.html-f2fe593b.js","assets/framework-7d39e0da.js"])),"v-7c55c65e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-a613266b.js"),["assets/index.html-a613266b.js","assets/framework-7d39e0da.js"])),"v-66c372a8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-47fe351c.js"),["assets/index.html-47fe351c.js","assets/framework-7d39e0da.js"])),"v-183a65fd":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-f04e82ff.js"),["assets/index.html-f04e82ff.js","assets/framework-7d39e0da.js"])),"v-15551100":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-d96f87a2.js"),["assets/index.html-d96f87a2.js","assets/framework-7d39e0da.js"])),"v-62402a27":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-5a15d89c.js"),["assets/index.html-5a15d89c.js","assets/framework-7d39e0da.js"])),"v-3571a5d8":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-67991d44.js"),["assets/index.html-67991d44.js","assets/framework-7d39e0da.js"])),"v-dbf7b5e2":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ea34fe55.js"),["assets/index.html-ea34fe55.js","assets/framework-7d39e0da.js"])),"v-7646d841":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0b6f9773.js"),["assets/index.html-0b6f9773.js","assets/framework-7d39e0da.js"])),"v-0d1640d5":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-58b5793f.js"),["assets/index.html-58b5793f.js","assets/framework-7d39e0da.js"])),"v-51d558d2":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-c5d319e8.js"),["assets/index.html-c5d319e8.js","assets/framework-7d39e0da.js"])),"v-3938bf0c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-91943ed0.js"),["assets/index.html-91943ed0.js","assets/framework-7d39e0da.js"])),"v-3044c875":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-a05729c1.js"),["assets/index.html-a05729c1.js","assets/framework-7d39e0da.js"])),"v-7ef5afdc":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-0e01c8dd.js"),["assets/index.html-0e01c8dd.js","assets/framework-7d39e0da.js"])),"v-0bb4abea":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-88972268.js"),["assets/index.html-88972268.js","assets/framework-7d39e0da.js"])),"v-d6ffee84":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-118f2c0f.js"),["assets/index.html-118f2c0f.js","assets/framework-7d39e0da.js"])),"v-01b8ccab":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-7cffe253.js"),["assets/index.html-7cffe253.js","assets/framework-7d39e0da.js"])),"v-774abd56":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-9b194232.js"),["assets/index.html-9b194232.js","assets/framework-7d39e0da.js"])),"v-ee2a1ec6":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-d8ae23d4.js"),["assets/index.html-d8ae23d4.js","assets/framework-7d39e0da.js"])),"v-377f6916":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-7840e795.js"),["assets/index.html-7840e795.js","assets/framework-7d39e0da.js"])),"v-f59c8a2e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-10835b84.js"),["assets/index.html-10835b84.js","assets/framework-7d39e0da.js"])),"v-32a02f77":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-a6975814.js"),["assets/index.html-a6975814.js","assets/framework-7d39e0da.js"])),"v-368ce2ac":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-aec1e397.js"),["assets/index.html-aec1e397.js","assets/framework-7d39e0da.js"])),"v-74ac88ec":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-685cc050.js"),["assets/index.html-685cc050.js","assets/framework-7d39e0da.js"])),"v-6268aeca":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-94bebf01.js"),["assets/index.html-94bebf01.js","assets/framework-7d39e0da.js"])),"v-5f7a82ea":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-84eceffb.js"),["assets/index.html-84eceffb.js","assets/framework-7d39e0da.js"])),"v-dbd5e54c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-b411850a.js"),["assets/index.html-b411850a.js","assets/framework-7d39e0da.js"])),"v-0adffe06":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-2b7d5003.js"),["assets/index.html-2b7d5003.js","assets/framework-7d39e0da.js"])),"v-5bc93818":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-8ebdf038.js"),["assets/index.html-8ebdf038.js","assets/framework-7d39e0da.js"])),"v-744d024e":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-ecebe680.js"),["assets/index.html-ecebe680.js","assets/framework-7d39e0da.js"])),"v-e52c881c":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-13b05b0c.js"),["assets/index.html-13b05b0c.js","assets/framework-7d39e0da.js"])),"v-154dc4c4":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-4ae35408.js"),["assets/index.html-4ae35408.js","assets/framework-7d39e0da.js"])),"v-01560935":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-4a6487c3.js"),["assets/index.html-4a6487c3.js","assets/framework-7d39e0da.js"])),"v-5bc77b38":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-2f0c7350.js"),["assets/index.html-2f0c7350.js","assets/framework-7d39e0da.js"])),"v-287f3643":defineAsyncComponent(()=>__vitePreload(()=>import("./index.html-6a91aaf8.js"),["assets/index.html-6a91aaf8.js","assets/framework-7d39e0da.js"]))};var layoutsSymbol=Symbol(""),pagesData=ref(pagesData$1),pageDataEmpty=readonly({key:"",path:"",title:"",lang:"",frontmatter:{},headers:[]}),pageData=ref(pageDataEmpty),usePageData=()=>pageData,pageFrontmatterSymbol=Symbol(""),usePageFrontmatter=()=>{const d=inject(pageFrontmatterSymbol);if(!d)throw new Error("usePageFrontmatter() is called without provider.");return d},pageHeadSymbol=Symbol(""),usePageHead=()=>{const d=inject(pageHeadSymbol);if(!d)throw new Error("usePageHead() is called without provider.");return d},pageHeadTitleSymbol=Symbol(""),usePageHeadTitle=()=>{const d=inject(pageHeadTitleSymbol);if(!d)throw new Error("usePageHeadTitle() is called without provider.");return d},pageLangSymbol=Symbol(""),usePageLang=()=>{const d=inject(pageLangSymbol);if(!d)throw new Error("usePageLang() is called without provider.");return d},pageLayoutSymbol=Symbol(""),usePageLayout=()=>{const d=inject(pageLayoutSymbol);if(!d)throw new Error("usePageLayout() is called without provider.");return d},routeLocaleSymbol=Symbol(""),useRouteLocale=()=>{const d=inject(routeLocaleSymbol);if(!d)throw new Error("useRouteLocale() is called without provider.");return d},siteData=ref(siteData$1),useSiteData=()=>siteData,siteLocaleDataSymbol=Symbol(""),useSiteLocaleData=()=>{const d=inject(siteLocaleDataSymbol);if(!d)throw new Error("useSiteLocaleData() is called without provider.");return d},updateHeadSymbol=Symbol(""),LAYOUT_NAME_DEFAULT="Layout",LAYOUT_NAME_NOT_FOUND="NotFound",resolvers=reactive({resolveLayouts:d=>d.reduce((R,N)=>({...R,...N.layouts}),{}),resolvePageData:async d=>{const R=pagesData.value[d];return await(R==null?void 0:R())??pageDataEmpty},resolvePageFrontmatter:d=>d.frontmatter,resolvePageHead:(d,R,N)=>{const z=isString$1(R.description)?R.description:N.description,j=[...isArray(R.head)?R.head:[],...N.head,["title",{},d],["meta",{name:"description",content:z}]];return dedupeHead(j)},resolvePageHeadTitle:(d,R)=>[d.title,R.title].filter(N=>!!N).join(" | "),resolvePageLang:d=>d.lang||"en",resolvePageLayout:(d,R)=>{let N;if(d.path){const z=d.frontmatter.layout;isString$1(z)?N=z:N=LAYOUT_NAME_DEFAULT}else N=LAYOUT_NAME_NOT_FOUND;return R[N]},resolveRouteLocale:(d,R)=>resolveLocalePath(d,R),resolveSiteLocaleData:(d,R)=>({...d,...d.locales[R]})}),ClientOnly=defineComponent({name:"ClientOnly",setup(d,R){const N=ref(!1);return onMounted(()=>{N.value=!0}),()=>{var z,j;return N.value?(j=(z=R.slots).default)==null?void 0:j.call(z):null}}}),Content=defineComponent({name:"Content",props:{pageKey:{type:String,required:!1,default:""}},setup(d){const R=usePageData(),N=computed(()=>pagesComponents[d.pageKey||R.value.key]);return()=>N.value?h$1(N.value):h$1("div","404 Not Found")}}),defineClientConfig=(d={})=>d,withBase=d=>isLinkHttp(d)?d:`/${removeLeadingSlash(d)}`;const hopeInject="",clientConfig0={};var u8=Uint8Array,u16=Uint16Array,u32=Uint32Array,fleb=new u8([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),clim=new u8([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),freb=function(d,R){for(var N=new u16(31),z=0;z<31;++z)N[z]=R+=1<<d[z-1];for(var j=new u32(N[30]),z=1;z<30;++z)for(var Z=N[z];Z<N[z+1];++Z)j[Z]=Z-N[z]<<5|z;return[N,j]},_a$1=freb(fleb,2),fl=_a$1[0],revfl=_a$1[1];fl[28]=258,revfl[258]=28;var _b=freb(fdeb,0),fd=_b[0],rev=new u16(32768);for(var i$3=0;i$3<32768;++i$3){var x$2=(i$3&43690)>>>1|(i$3&21845)<<1;x$2=(x$2&52428)>>>2|(x$2&13107)<<2,x$2=(x$2&61680)>>>4|(x$2&3855)<<4,rev[i$3]=((x$2&65280)>>>8|(x$2&255)<<8)>>>1}var hMap=function(d,R,N){for(var z=d.length,j=0,Z=new u16(R);j<z;++j)d[j]&&++Z[d[j]-1];var X=new u16(R);for(j=0;j<R;++j)X[j]=X[j-1]+Z[j-1]<<1;var Q;if(N){Q=new u16(1<<R);var nn=15-R;for(j=0;j<z;++j)if(d[j])for(var sn=j<<4|d[j],en=R-d[j],tn=X[d[j]-1]++<<en,an=tn|(1<<en)-1;tn<=an;++tn)Q[rev[tn]>>>nn]=sn}else for(Q=new u16(z),j=0;j<z;++j)d[j]&&(Q[j]=rev[X[d[j]-1]++]>>>15-d[j]);return Q},flt=new u8(288);for(var i$3=0;i$3<144;++i$3)flt[i$3]=8;for(var i$3=144;i$3<256;++i$3)flt[i$3]=9;for(var i$3=256;i$3<280;++i$3)flt[i$3]=7;for(var i$3=280;i$3<288;++i$3)flt[i$3]=8;var fdt=new u8(32);for(var i$3=0;i$3<32;++i$3)fdt[i$3]=5;var flrm=hMap(flt,9,1),fdrm=hMap(fdt,5,1),max=function(d){for(var R=d[0],N=1;N<d.length;++N)d[N]>R&&(R=d[N]);return R},bits=function(d,R,N){var z=R/8|0;return(d[z]|d[z+1]<<8)>>(R&7)&N},bits16=function(d,R){var N=R/8|0;return(d[N]|d[N+1]<<8|d[N+2]<<16)>>(R&7)},shft=function(d){return(d+7)/8|0},slc=function(d,R,N){(R==null||R<0)&&(R=0),(N==null||N>d.length)&&(N=d.length);var z=new(d.BYTES_PER_ELEMENT==2?u16:d.BYTES_PER_ELEMENT==4?u32:u8)(N-R);return z.set(d.subarray(R,N)),z},ec=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],err=function(d,R,N){var z=new Error(R||ec[d]);if(z.code=d,Error.captureStackTrace&&Error.captureStackTrace(z,err),!N)throw z;return z},inflt=function(d,R,N){var z=d.length;if(!z||N&&N.f&&!N.l)return R||new u8(0);var j=!R||N,Z=!N||N.i;N||(N={}),R||(R=new u8(z*3));var X=function(Bn){var Vn=R.length;if(Bn>Vn){var Rn=new u8(Math.max(Vn*2,Bn));Rn.set(R),R=Rn}},Q=N.f||0,nn=N.p||0,sn=N.b||0,en=N.l,tn=N.d,an=N.m,on=N.n,cn=z*8;do{if(!en){Q=bits(d,nn,1);var pn=bits(d,nn+1,3);if(nn+=3,pn)if(pn==1)en=flrm,tn=fdrm,an=9,on=5;else if(pn==2){var vn=bits(d,nn,31)+257,bn=bits(d,nn+10,15)+4,_n=vn+bits(d,nn+5,31)+1;nn+=14;for(var In=new u8(_n),Pn=new u8(19),mn=0;mn<bn;++mn)Pn[clim[mn]]=bits(d,nn+mn*3,7);nn+=bn*3;for(var dn=max(Pn),yn=(1<<dn)-1,$n=hMap(Pn,dn,1),mn=0;mn<_n;){var Mn=$n[bits(d,nn,yn)];nn+=Mn&15;var ln=Mn>>>4;if(ln<16)In[mn++]=ln;else{var En=0,hn=0;for(ln==16?(hn=3+bits(d,nn,3),nn+=2,En=In[mn-1]):ln==17?(hn=3+bits(d,nn,7),nn+=3):ln==18&&(hn=11+bits(d,nn,127),nn+=7);hn--;)In[mn++]=En}}var kn=In.subarray(0,vn),gn=In.subarray(vn);an=max(kn),on=max(gn),en=hMap(kn,an,1),tn=hMap(gn,on,1)}else err(1);else{var ln=shft(nn)+4,un=d[ln-4]|d[ln-3]<<8,rn=ln+un;if(rn>z){Z&&err(0);break}j&&X(sn+un),R.set(d.subarray(ln,rn),sn),N.b=sn+=un,N.p=nn=rn*8,N.f=Q;continue}if(nn>cn){Z&&err(0);break}}j&&X(sn+131072);for(var fn=(1<<an)-1,An=(1<<on)-1,wn=nn;;wn=nn){var En=en[bits16(d,nn)&fn],Tn=En>>>4;if(nn+=En&15,nn>cn){Z&&err(0);break}if(En||err(2),Tn<256)R[sn++]=Tn;else if(Tn==256){wn=nn,en=null;break}else{var Ln=Tn-254;if(Tn>264){var mn=Tn-257,Cn=fleb[mn];Ln=bits(d,nn,(1<<Cn)-1)+fl[mn],nn+=Cn}var xn=tn[bits16(d,nn)&An],Sn=xn>>>4;xn||err(3),nn+=xn&15;var gn=fd[Sn];if(Sn>3){var Cn=fdeb[Sn];gn+=bits16(d,nn)&(1<<Cn)-1,nn+=Cn}if(nn>cn){Z&&err(0);break}j&&X(sn+131072);for(var On=sn+Ln;sn<On;sn+=4)R[sn]=R[sn-gn],R[sn+1]=R[sn+1-gn],R[sn+2]=R[sn+2-gn],R[sn+3]=R[sn+3-gn];sn=On}}N.l=en,N.p=wn,N.b=sn,N.f=Q,en&&(Q=1,N.m=an,N.d=tn,N.n=on)}while(!Q);return sn==R.length?R:slc(R,0,sn)},et$1=new u8(0),zlv=function(d){((d[0]&15)!=8||d[0]>>>4>7||(d[0]<<8|d[1])%31)&&err(6,"invalid zlib data"),d[1]&32&&err(6,"invalid zlib data: preset dictionaries not supported")};function unzlibSync(d,R){return inflt((zlv(d),d.subarray(2,-4)),R)}var te$1=typeof TextEncoder<"u"&&new TextEncoder,td=typeof TextDecoder<"u"&&new TextDecoder,tds=0;try{td.decode(et$1,{stream:!0}),tds=1}catch{}var dutf8=function(d){for(var R="",N=0;;){var z=d[N++],j=(z>127)+(z>223)+(z>239);if(N+j>d.length)return[R,slc(d,N-1)];j?j==3?(z=((z&15)<<18|(d[N++]&63)<<12|(d[N++]&63)<<6|d[N++]&63)-65536,R+=String.fromCharCode(55296|z>>10,56320|z&1023)):j&1?R+=String.fromCharCode((z&31)<<6|d[N++]&63):R+=String.fromCharCode((z&15)<<12|(d[N++]&63)<<6|d[N++]&63):R+=String.fromCharCode(z)}};function strToU8(d,R){if(R){for(var N=new u8(d.length),z=0;z<d.length;++z)N[z]=d.charCodeAt(z);return N}if(te$1)return te$1.encode(d);for(var j=d.length,Z=new u8(d.length+(d.length>>1)),X=0,Q=function(en){Z[X++]=en},z=0;z<j;++z){if(X+5>Z.length){var nn=new u8(X+8+(j-z<<1));nn.set(Z),Z=nn}var sn=d.charCodeAt(z);sn<128||R?Q(sn):sn<2048?(Q(192|sn>>6),Q(128|sn&63)):sn>55295&&sn<57344?(sn=65536+(sn&1023<<10)|d.charCodeAt(++z)&1023,Q(240|sn>>18),Q(128|sn>>12&63),Q(128|sn>>6&63),Q(128|sn&63)):(Q(224|sn>>12),Q(128|sn>>6&63),Q(128|sn&63))}return slc(Z,0,X)}function strFromU8(d,R){if(R){for(var N="",z=0;z<d.length;z+=16384)N+=String.fromCharCode.apply(null,d.subarray(z,z+16384));return N}else{if(td)return td.decode(d);var j=dutf8(d),Z=j[0],X=j[1];return X.length&&err(8),Z}}const G$1=({name:d="",color:R="currentColor"},{slots:N})=>{var z;return h$1("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${d}-icon`],viewBox:"0 0 1024 1024",fill:R,"aria-label":`${d} icon`},(z=N.default)==null?void 0:z.call(N))};G$1.displayName="IconBase";const vt=({size:d=48,stroke:R=4,wrapper:N=!0,height:z=2*d})=>{const j=h$1("svg",{xmlns:"http://www.w3.org/2000/svg",width:d,height:d,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h$1("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h$1("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":R,"stroke-linecap":"round"},[h$1("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h$1("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return N?h$1("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${z}px`},j):j};vt.displayName="LoadingIcon";const Rt=(d,{slots:R})=>{var N;return((N=R.default)==null?void 0:N.call(R))||null},gt=()=>h$1(G$1,{name:"github"},()=>h$1("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));gt.displayName="GitHubIcon";const $t=()=>h$1(G$1,{name:"gitlab"},()=>h$1("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));$t.displayName="GitlabIcon";const yt=()=>h$1(G$1,{name:"gitee"},()=>h$1("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));yt.displayName="GiteeIcon";const bt=()=>h$1(G$1,{name:"bitbucket"},()=>h$1("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));bt.displayName="BitbucketIcon";const wt=()=>h$1(G$1,{name:"source"},()=>h$1("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));wt.displayName="SourceIcon";const et=Array.isArray,Gt=d=>typeof d=="function",P$1=d=>typeof d=="string";var Ot=d=>/^(https?:)?\/\//.test(d),J$1=d=>Object.prototype.toString.call(d)==="[object Object]";const Vt=(d,R)=>{const N=R?R._instance:getCurrentInstance();return J$1(N==null?void 0:N.appContext.components)&&(d in N.appContext.components||camelize(d)in N.appContext.components||capitalize(camelize(d))in N.appContext.components)};function Ft(d){return d}function Zt(d,R=!0){getCurrentInstance()?onMounted(d):R?d():nextTick(d)}function Qt(d,R=!1){const N=ref(),z=()=>N.value=!!d();return z(),Zt(z,R),N}const St=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Mt="__vueuse_ssr_handlers__";St[Mt]=St[Mt]||{};var Dt;(function(d){d.UP="UP",d.RIGHT="RIGHT",d.DOWN="DOWN",d.LEFT="LEFT",d.NONE="NONE"})(Dt||(Dt={}));var Jt=Object.defineProperty,xt=Object.getOwnPropertySymbols,qt=Object.prototype.hasOwnProperty,Kt=Object.prototype.propertyIsEnumerable,It=(d,R,N)=>R in d?Jt(d,R,{enumerable:!0,configurable:!0,writable:!0,value:N}):d[R]=N,Xt=(d,R)=>{for(var N in R||(R={}))qt.call(R,N)&&It(d,N,R[N]);if(xt)for(var N of xt(R))Kt.call(R,N)&&It(d,N,R[N]);return d};const te={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};Xt({linear:Ft},te);const Et=()=>Qt(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),ee=()=>{const d=Et();return computed(()=>d.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},ne=d=>{const R=useRouteLocale();return computed(()=>d[R.value])},fe=(d,R)=>{let N=1;for(let z=0;z<d.length;z++)N+=d.charCodeAt(z),N+=N<<10,N^=N>>6;return N+=N<<3,N^=N>>11,N%R};var K$2=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},nt={},me={get exports(){return nt},set exports(d){nt=d}};(function(d,R){(function(N,z){d.exports=z()})(K$2,function(){var N=1e3,z=6e4,j=36e5,Z="millisecond",X="second",Q="minute",nn="hour",sn="day",en="week",tn="month",an="quarter",on="year",cn="date",pn="Invalid Date",ln=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,un=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,rn={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(En){var hn=["th","st","nd","rd"],kn=En%100;return"["+En+(hn[(kn-20)%10]||hn[kn]||hn[0])+"]"}},vn=function(En,hn,kn){var gn=String(En);return!gn||gn.length>=hn?En:""+Array(hn+1-gn.length).join(kn)+En},bn={s:vn,z:function(En){var hn=-En.utcOffset(),kn=Math.abs(hn),gn=Math.floor(kn/60),fn=kn%60;return(hn<=0?"+":"-")+vn(gn,2,"0")+":"+vn(fn,2,"0")},m:function En(hn,kn){if(hn.date()<kn.date())return-En(kn,hn);var gn=12*(kn.year()-hn.year())+(kn.month()-hn.month()),fn=hn.clone().add(gn,tn),An=kn-fn<0,wn=hn.clone().add(gn+(An?-1:1),tn);return+(-(gn+(kn-fn)/(An?fn-wn:wn-fn))||0)},a:function(En){return En<0?Math.ceil(En)||0:Math.floor(En)},p:function(En){return{M:tn,y:on,w:en,d:sn,D:cn,h:nn,m:Q,s:X,ms:Z,Q:an}[En]||String(En||"").toLowerCase().replace(/s$/,"")},u:function(En){return En===void 0}},_n="en",In={};In[_n]=rn;var Pn=function(En){return En instanceof $n},mn=function En(hn,kn,gn){var fn;if(!hn)return _n;if(typeof hn=="string"){var An=hn.toLowerCase();In[An]&&(fn=An),kn&&(In[An]=kn,fn=An);var wn=hn.split("-");if(!fn&&wn.length>1)return En(wn[0])}else{var Tn=hn.name;In[Tn]=hn,fn=Tn}return!gn&&fn&&(_n=fn),fn||!gn&&_n},dn=function(En,hn){if(Pn(En))return En.clone();var kn=typeof hn=="object"?hn:{};return kn.date=En,kn.args=arguments,new $n(kn)},yn=bn;yn.l=mn,yn.i=Pn,yn.w=function(En,hn){return dn(En,{locale:hn.$L,utc:hn.$u,x:hn.$x,$offset:hn.$offset})};var $n=function(){function En(kn){this.$L=mn(kn.locale,null,!0),this.parse(kn)}var hn=En.prototype;return hn.parse=function(kn){this.$d=function(gn){var fn=gn.date,An=gn.utc;if(fn===null)return new Date(NaN);if(yn.u(fn))return new Date;if(fn instanceof Date)return new Date(fn);if(typeof fn=="string"&&!/Z$/i.test(fn)){var wn=fn.match(ln);if(wn){var Tn=wn[2]-1||0,Ln=(wn[7]||"0").substring(0,3);return An?new Date(Date.UTC(wn[1],Tn,wn[3]||1,wn[4]||0,wn[5]||0,wn[6]||0,Ln)):new Date(wn[1],Tn,wn[3]||1,wn[4]||0,wn[5]||0,wn[6]||0,Ln)}}return new Date(fn)}(kn),this.$x=kn.x||{},this.init()},hn.init=function(){var kn=this.$d;this.$y=kn.getFullYear(),this.$M=kn.getMonth(),this.$D=kn.getDate(),this.$W=kn.getDay(),this.$H=kn.getHours(),this.$m=kn.getMinutes(),this.$s=kn.getSeconds(),this.$ms=kn.getMilliseconds()},hn.$utils=function(){return yn},hn.isValid=function(){return this.$d.toString()!==pn},hn.isSame=function(kn,gn){var fn=dn(kn);return this.startOf(gn)<=fn&&fn<=this.endOf(gn)},hn.isAfter=function(kn,gn){return dn(kn)<this.startOf(gn)},hn.isBefore=function(kn,gn){return this.endOf(gn)<dn(kn)},hn.$g=function(kn,gn,fn){return yn.u(kn)?this[gn]:this.set(fn,kn)},hn.unix=function(){return Math.floor(this.valueOf()/1e3)},hn.valueOf=function(){return this.$d.getTime()},hn.startOf=function(kn,gn){var fn=this,An=!!yn.u(gn)||gn,wn=yn.p(kn),Tn=function(Rn,Dn){var Nn=yn.w(fn.$u?Date.UTC(fn.$y,Dn,Rn):new Date(fn.$y,Dn,Rn),fn);return An?Nn:Nn.endOf(sn)},Ln=function(Rn,Dn){return yn.w(fn.toDate()[Rn].apply(fn.toDate("s"),(An?[0,0,0,0]:[23,59,59,999]).slice(Dn)),fn)},Cn=this.$W,xn=this.$M,Sn=this.$D,On="set"+(this.$u?"UTC":"");switch(wn){case on:return An?Tn(1,0):Tn(31,11);case tn:return An?Tn(1,xn):Tn(0,xn+1);case en:var Bn=this.$locale().weekStart||0,Vn=(Cn<Bn?Cn+7:Cn)-Bn;return Tn(An?Sn-Vn:Sn+(6-Vn),xn);case sn:case cn:return Ln(On+"Hours",0);case nn:return Ln(On+"Minutes",1);case Q:return Ln(On+"Seconds",2);case X:return Ln(On+"Milliseconds",3);default:return this.clone()}},hn.endOf=function(kn){return this.startOf(kn,!1)},hn.$set=function(kn,gn){var fn,An=yn.p(kn),wn="set"+(this.$u?"UTC":""),Tn=(fn={},fn[sn]=wn+"Date",fn[cn]=wn+"Date",fn[tn]=wn+"Month",fn[on]=wn+"FullYear",fn[nn]=wn+"Hours",fn[Q]=wn+"Minutes",fn[X]=wn+"Seconds",fn[Z]=wn+"Milliseconds",fn)[An],Ln=An===sn?this.$D+(gn-this.$W):gn;if(An===tn||An===on){var Cn=this.clone().set(cn,1);Cn.$d[Tn](Ln),Cn.init(),this.$d=Cn.set(cn,Math.min(this.$D,Cn.daysInMonth())).$d}else Tn&&this.$d[Tn](Ln);return this.init(),this},hn.set=function(kn,gn){return this.clone().$set(kn,gn)},hn.get=function(kn){return this[yn.p(kn)]()},hn.add=function(kn,gn){var fn,An=this;kn=Number(kn);var wn=yn.p(gn),Tn=function(xn){var Sn=dn(An);return yn.w(Sn.date(Sn.date()+Math.round(xn*kn)),An)};if(wn===tn)return this.set(tn,this.$M+kn);if(wn===on)return this.set(on,this.$y+kn);if(wn===sn)return Tn(1);if(wn===en)return Tn(7);var Ln=(fn={},fn[Q]=z,fn[nn]=j,fn[X]=N,fn)[wn]||1,Cn=this.$d.getTime()+kn*Ln;return yn.w(Cn,this)},hn.subtract=function(kn,gn){return this.add(-1*kn,gn)},hn.format=function(kn){var gn=this,fn=this.$locale();if(!this.isValid())return fn.invalidDate||pn;var An=kn||"YYYY-MM-DDTHH:mm:ssZ",wn=yn.z(this),Tn=this.$H,Ln=this.$m,Cn=this.$M,xn=fn.weekdays,Sn=fn.months,On=function(Dn,Nn,zn,Fn){return Dn&&(Dn[Nn]||Dn(gn,An))||zn[Nn].slice(0,Fn)},Bn=function(Dn){return yn.s(Tn%12||12,Dn,"0")},Vn=fn.meridiem||function(Dn,Nn,zn){var Fn=Dn<12?"AM":"PM";return zn?Fn.toLowerCase():Fn},Rn={YY:String(this.$y).slice(-2),YYYY:this.$y,M:Cn+1,MM:yn.s(Cn+1,2,"0"),MMM:On(fn.monthsShort,Cn,Sn,3),MMMM:On(Sn,Cn),D:this.$D,DD:yn.s(this.$D,2,"0"),d:String(this.$W),dd:On(fn.weekdaysMin,this.$W,xn,2),ddd:On(fn.weekdaysShort,this.$W,xn,3),dddd:xn[this.$W],H:String(Tn),HH:yn.s(Tn,2,"0"),h:Bn(1),hh:Bn(2),a:Vn(Tn,Ln,!0),A:Vn(Tn,Ln,!1),m:String(Ln),mm:yn.s(Ln,2,"0"),s:String(this.$s),ss:yn.s(this.$s,2,"0"),SSS:yn.s(this.$ms,3,"0"),Z:wn};return An.replace(un,function(Dn,Nn){return Nn||Rn[Dn]||wn.replace(":","")})},hn.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},hn.diff=function(kn,gn,fn){var An,wn=yn.p(gn),Tn=dn(kn),Ln=(Tn.utcOffset()-this.utcOffset())*z,Cn=this-Tn,xn=yn.m(this,Tn);return xn=(An={},An[on]=xn/12,An[tn]=xn,An[an]=xn/3,An[en]=(Cn-Ln)/6048e5,An[sn]=(Cn-Ln)/864e5,An[nn]=Cn/j,An[Q]=Cn/z,An[X]=Cn/N,An)[wn]||Cn,fn?xn:yn.a(xn)},hn.daysInMonth=function(){return this.endOf(tn).$D},hn.$locale=function(){return In[this.$L]},hn.locale=function(kn,gn){if(!kn)return this.$L;var fn=this.clone(),An=mn(kn,gn,!0);return An&&(fn.$L=An),fn},hn.clone=function(){return yn.w(this.$d,this)},hn.toDate=function(){return new Date(this.valueOf())},hn.toJSON=function(){return this.isValid()?this.toISOString():null},hn.toISOString=function(){return this.$d.toISOString()},hn.toString=function(){return this.$d.toUTCString()},En}(),Mn=$n.prototype;return dn.prototype=Mn,[["$ms",Z],["$s",X],["$m",Q],["$H",nn],["$W",sn],["$M",tn],["$y",on],["$D",cn]].forEach(function(En){Mn[En[1]]=function(hn){return this.$g(hn,En[0],En[1])}}),dn.extend=function(En,hn){return En.$i||(En(hn,$n,dn),En.$i=!0),dn},dn.locale=mn,dn.isDayjs=Pn,dn.unix=function(En){return dn(1e3*En)},dn.en=In[_n],dn.Ls=In,dn.p={},dn})})(me);var V$1=nt,it={},pe={get exports(){return it},set exports(d){it=d}};(function(d,R){(function(N,z){d.exports=z()})(K$2,function(){return function(N,z,j){var Z=z.prototype,X=function(an){var on,cn=an.date,pn=an.utc,ln={};if(!((on=cn)instanceof Date||on instanceof Array||Z.$utils().u(on)||on.constructor.name!=="Object")){if(!Object.keys(cn).length)return new Date;var un=pn?j.utc():j();Object.keys(cn).forEach(function(dn){var yn,$n;ln[yn=dn,$n=Z.$utils().p(yn),$n==="date"?"day":$n]=cn[dn]});var rn=ln.day||(ln.year||ln.month>=0?1:un.date()),vn=ln.year||un.year(),bn=ln.month>=0?ln.month:ln.year||ln.day?0:un.month(),_n=ln.hour||0,In=ln.minute||0,Pn=ln.second||0,mn=ln.millisecond||0;return pn?new Date(Date.UTC(vn,bn,rn,_n,In,Pn,mn)):new Date(vn,bn,rn,_n,In,Pn,mn)}return cn},Q=Z.parse;Z.parse=function(an){an.date=X.bind(this)(an),Q.bind(this)(an)};var nn=Z.set,sn=Z.add,en=Z.subtract,tn=function(an,on,cn,pn){pn===void 0&&(pn=1);var ln=Object.keys(on),un=this;return ln.forEach(function(rn){un=an.bind(un)(on[rn]*pn,rn)}),un};Z.set=function(an,on){return on=on===void 0?an:on,an.constructor.name==="Object"?tn.bind(this)(function(cn,pn){return nn.bind(this)(pn,cn)},on,an):nn.bind(this)(an,on)},Z.add=function(an,on){return an.constructor.name==="Object"?tn.bind(this)(sn,an,on):sn.bind(this)(an,on)},Z.subtract=function(an,on){return an.constructor.name==="Object"?tn.bind(this)(sn,an,on,-1):en.bind(this)(an,on)}}})})(pe);var ve=it,rt={},ge={get exports(){return rt},set exports(d){rt=d}};(function(d,R){(function(N,z){d.exports=z()})(K$2,function(){var N={year:0,month:1,day:2,hour:3,minute:4,second:5},z={};return function(j,Z,X){var Q,nn=function(an,on,cn){cn===void 0&&(cn={});var pn=new Date(an),ln=function(un,rn){rn===void 0&&(rn={});var vn=rn.timeZoneName||"short",bn=un+"|"+vn,_n=z[bn];return _n||(_n=new Intl.DateTimeFormat("en-US",{hour12:!1,timeZone:un,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZoneName:vn}),z[bn]=_n),_n}(on,cn);return ln.formatToParts(pn)},sn=function(an,on){for(var cn=nn(an,on),pn=[],ln=0;ln<cn.length;ln+=1){var un=cn[ln],rn=un.type,vn=un.value,bn=N[rn];bn>=0&&(pn[bn]=parseInt(vn,10))}var _n=pn[3],In=_n===24?0:_n,Pn=pn[0]+"-"+pn[1]+"-"+pn[2]+" "+In+":"+pn[4]+":"+pn[5]+":000",mn=+an;return(X.utc(Pn).valueOf()-(mn-=mn%1e3))/6e4},en=Z.prototype;en.tz=function(an,on){an===void 0&&(an=Q);var cn=this.utcOffset(),pn=this.toDate(),ln=pn.toLocaleString("en-US",{timeZone:an}),un=Math.round((pn-new Date(ln))/1e3/60),rn=X(ln).$set("millisecond",this.$ms).utcOffset(15*-Math.round(pn.getTimezoneOffset()/15)-un,!0);if(on){var vn=rn.utcOffset();rn=rn.add(cn-vn,"minute")}return rn.$x.$timezone=an,rn},en.offsetName=function(an){var on=this.$x.$timezone||X.tz.guess(),cn=nn(this.valueOf(),on,{timeZoneName:an}).find(function(pn){return pn.type.toLowerCase()==="timezonename"});return cn&&cn.value};var tn=en.startOf;en.startOf=function(an,on){if(!this.$x||!this.$x.$timezone)return tn.call(this,an,on);var cn=X(this.format("YYYY-MM-DD HH:mm:ss:SSS"));return tn.call(cn,an,on).tz(this.$x.$timezone,!0)},X.tz=function(an,on,cn){var pn=cn&&on,ln=cn||on||Q,un=sn(+X(),ln);if(typeof an!="string")return X(an).tz(ln);var rn=function(In,Pn,mn){var dn=In-60*Pn*1e3,yn=sn(dn,mn);if(Pn===yn)return[dn,Pn];var $n=sn(dn-=60*(yn-Pn)*1e3,mn);return yn===$n?[dn,yn]:[In-60*Math.min(yn,$n)*1e3,Math.max(yn,$n)]}(X.utc(an,pn).valueOf(),un,ln),vn=rn[0],bn=rn[1],_n=X(vn).utcOffset(bn);return _n.$x.$timezone=ln,_n},X.tz.guess=function(){return Intl.DateTimeFormat().resolvedOptions().timeZone},X.tz.setDefault=function(an){Q=an}}})})(ge);var $e=rt,st={},ye={get exports(){return st},set exports(d){st=d}};(function(d,R){(function(N,z){d.exports=z()})(K$2,function(){var N="minute",z=/[+-]\d\d(?::?\d\d)?/g,j=/([+-]|\d\d)/g;return function(Z,X,Q){var nn=X.prototype;Q.utc=function(pn){var ln={date:pn,utc:!0,args:arguments};return new X(ln)},nn.utc=function(pn){var ln=Q(this.toDate(),{locale:this.$L,utc:!0});return pn?ln.add(this.utcOffset(),N):ln},nn.local=function(){return Q(this.toDate(),{locale:this.$L,utc:!1})};var sn=nn.parse;nn.parse=function(pn){pn.utc&&(this.$u=!0),this.$utils().u(pn.$offset)||(this.$offset=pn.$offset),sn.call(this,pn)};var en=nn.init;nn.init=function(){if(this.$u){var pn=this.$d;this.$y=pn.getUTCFullYear(),this.$M=pn.getUTCMonth(),this.$D=pn.getUTCDate(),this.$W=pn.getUTCDay(),this.$H=pn.getUTCHours(),this.$m=pn.getUTCMinutes(),this.$s=pn.getUTCSeconds(),this.$ms=pn.getUTCMilliseconds()}else en.call(this)};var tn=nn.utcOffset;nn.utcOffset=function(pn,ln){var un=this.$utils().u;if(un(pn))return this.$u?0:un(this.$offset)?tn.call(this):this.$offset;if(typeof pn=="string"&&(pn=function(_n){_n===void 0&&(_n="");var In=_n.match(z);if(!In)return null;var Pn=(""+In[0]).match(j)||["-",0,0],mn=Pn[0],dn=60*+Pn[1]+ +Pn[2];return dn===0?0:mn==="+"?dn:-dn}(pn),pn===null))return this;var rn=Math.abs(pn)<=16?60*pn:pn,vn=this;if(ln)return vn.$offset=rn,vn.$u=pn===0,vn;if(pn!==0){var bn=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(vn=this.local().add(rn+bn,N)).$offset=rn,vn.$x.$localOffset=bn}else vn=this.utc();return vn};var an=nn.format;nn.format=function(pn){var ln=pn||(this.$u?"YYYY-MM-DDTHH:mm:ss[Z]":"");return an.call(this,ln)},nn.valueOf=function(){var pn=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*pn},nn.isUTC=function(){return!!this.$u},nn.toISOString=function(){return this.toDate().toISOString()},nn.toString=function(){return this.toDate().toUTCString()};var on=nn.toDate;nn.toDate=function(pn){return pn==="s"&&this.$offset?Q(this.format("YYYY-MM-DD HH:mm:ss:SSS")).toDate():on.call(this)};var cn=nn.diff;nn.diff=function(pn,ln,un){if(pn&&this.$u===pn.$u)return cn.call(this,pn,ln,un);var rn=this.local(),vn=Q(pn).local();return cn.call(rn,vn,ln,un)}}})})(ye);var be=st;V$1.extend(ve),V$1.extend(be),V$1.extend($e);const ot=(d,R)=>{if(d){if(V$1(d instanceof Date?d:P$1(d)?d.trim():d).isValid()){const z=R?V$1(d).tz(R):V$1(d),j=z.year(),Z=z.month()+1,X=z.date(),Q=z.hour(),nn=z.minute(),sn=z.second(),en=z.millisecond(),tn=Q===0&&nn===0&&sn===0&&en===0;return{value:z.toDate(),info:{year:j,month:Z,day:X,...tn?{}:{hour:Q,minute:nn,second:sn}},type:tn?"date":"full"}}const N=/(?:(\d{2,4})[/-](\d{1,2})[/-](\d{1,2}))?\s*(?:(\d{1,2}):(\d{1,2})(?::(\d{1,2}))?)?/u.exec(d.trim());if(N){const[,z,j,Z,X,Q,nn]=N,sn=ln=>typeof ln>"u"?void 0:Number(ln),en=ln=>ln&&ln<100?ln+2e3:ln,tn=ln=>X&&Q&&!nn?0:ln,an={year:en(sn(z)),month:sn(j),day:sn(Z),hour:sn(X),minute:sn(Q),second:tn(sn(nn))},on=z===void 0&&j===void 0&&Z===void 0,cn=X===void 0&&Q===void 0&&nn===void 0,pn=V$1({...an,month:an.month-1}).toDate();return{value:on?void 0:pn,info:cn?{year:an.year,month:an.month,day:an.day}:on?{hour:an.hour,minute:an.minute,second:an.second}:an,type:on?"time":cn?"date":"full"}}}return null},_t=(d,R)=>P$1(d)&&d.startsWith(R),Oe=(d,R)=>P$1(d)&&d.endsWith(R),Tt=Object.entries,at=Object.keys,ut=(d,...R)=>{if(R.length===0)return d;const N=R.shift()||null;return N&&Tt(N).forEach(([z,j])=>{z==="__proto__"||z==="constructor"||(J$1(d[z])&&J$1(j)?ut(d[z],j):et(j)?d[z]=[...j]:J$1(j)?d[z]={...j}:d[z]=N[z])}),ut(d,...R)},Ct=d=>J$1(d)&&P$1(d.name),De=(d,R=!1)=>d?et(d)?d.map(N=>P$1(N)?{name:N}:Ct(N)?N:null).filter(N=>N!==null):P$1(d)?[{name:d}]:Ct(d)?[d]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${R?"":"| false"} | undefined\`, but got`,d),[]):[],ct=(d,R)=>{if(d){if(et(d)&&d.every(P$1))return d;if(P$1(d))return[d];console.error(`Expect ${R||"value"} to be \`string[] | string | undefined\`, but got`,d)}return[]},xe=d=>ct(d,"category"),Ie=d=>ct(d,"tag"),_e=d=>_t(d,"/");class Te{constructor(){this.messageElements={};const R="message-container",N=document.getElementById(R);N?this.containerElement=N:(this.containerElement=document.createElement("div"),this.containerElement.id=R,document.body.appendChild(this.containerElement))}pop(R,N=2e3){const z=document.createElement("div"),j=Date.now();return z.className="message move-in",z.innerHTML=R,this.containerElement.appendChild(z),this.messageElements[j]=z,N>0&&setTimeout(()=>{this.close(j)},N),j}close(R){if(R){const N=this.messageElements[R];N.classList.remove("move-in"),N.classList.add("move-out"),N.addEventListener("animationend",()=>{N.remove(),delete this.messageElements[R]})}else at(this.messageElements).forEach(N=>this.close(Number(N)))}destroy(){document.body.removeChild(this.containerElement)}}const zt=/#.*$/u,kt=d=>{const R=zt.exec(d);return R?R[0]:""},lt=d=>decodeURI(d).replace(zt,"").replace(/(index)?\.(md|html)$/,""),Ce=(d,R)=>{if(R===void 0)return!1;const N=lt(d.path),z=lt(R),j=kt(R);return j?j===d.hash&&(!z||N===z):N===z},He=d=>{const R=atob(d);return strFromU8(unzlibSync(strToU8(R,!0)))},Le=d=>Ot(d)?d:`https://github.com/${d}`,Ne=d=>!Ot(d)||/github\.com/.test(d)?"GitHub":/bitbucket\.org/.test(d)?"Bitbucket":/gitlab\.com/.test(d)?"GitLab":/gitee\.com/.test(d)?"Gitee":null,Ht=(d,...R)=>{const N=d.resolve(...R),z=N.matched[N.matched.length-1];if(!(z!=null&&z.redirect))return N;const{redirect:j}=z,Z=Gt(j)?j(N):j,X=P$1(Z)?{path:Z}:Z;return Ht(d,{hash:N.hash,query:N.query,params:N.params,...X})};var _a;const isClient=typeof window<"u",isFunction=d=>typeof d=="function",isString=d=>typeof d=="string",noop=()=>{},isIOS=isClient&&((_a=window==null?void 0:window.navigator)==null?void 0:_a.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function resolveUnref(d){return typeof d=="function"?d():unref(d)}function createFilterWrapper(d,R){function N(...z){return new Promise((j,Z)=>{Promise.resolve(d(()=>R.apply(this,z),{fn:R,thisArg:this,args:z})).then(j).catch(Z)})}return N}const bypassFilter=d=>d();function debounceFilter(d,R={}){let N,z,j=noop;const Z=Q=>{clearTimeout(Q),j(),j=noop};return Q=>{const nn=resolveUnref(d),sn=resolveUnref(R.maxWait);return N&&Z(N),nn<=0||sn!==void 0&&sn<=0?(z&&(Z(z),z=null),Promise.resolve(Q())):new Promise((en,tn)=>{j=R.rejectOnCancel?tn:en,sn&&!z&&(z=setTimeout(()=>{N&&Z(N),z=null,en(Q())},sn)),N=setTimeout(()=>{z&&Z(z),z=null,en(Q())},nn)})}}function throttleFilter(d,R=!0,N=!0,z=!1){let j=0,Z,X=!0,Q=noop,nn;const sn=()=>{Z&&(clearTimeout(Z),Z=void 0,Q(),Q=noop)};return tn=>{const an=resolveUnref(d),on=Date.now()-j,cn=()=>nn=tn();return sn(),an<=0?(j=Date.now(),cn()):(on>an&&(N||!X)?(j=Date.now(),cn()):R&&(nn=new Promise((pn,ln)=>{Q=z?ln:pn,Z=setTimeout(()=>{j=Date.now(),X=!0,pn(cn()),sn()},Math.max(0,an-on))})),!N&&!Z&&(Z=setTimeout(()=>X=!0,an)),X=!1,nn)}}function pausableFilter(d=bypassFilter){const R=ref(!0);function N(){R.value=!1}function z(){R.value=!0}const j=(...Z)=>{R.value&&d(...Z)};return{isActive:readonly(R),pause:N,resume:z,eventFilter:j}}function identity(d){return d}function tryOnScopeDispose(d){return getCurrentScope()?(onScopeDispose(d),!0):!1}function useDebounceFn(d,R=200,N={}){return createFilterWrapper(debounceFilter(R,N),d)}function useThrottleFn(d,R=200,N=!1,z=!0,j=!1){return createFilterWrapper(throttleFilter(R,N,z,j),d)}function resolveRef(d){return typeof d=="function"?computed(d):ref(d)}function tryOnMounted(d,R=!0){getCurrentInstance()?onMounted(d):R?d():nextTick(d)}function useTimeoutFn(d,R,N={}){const{immediate:z=!0}=N,j=ref(!1);let Z=null;function X(){Z&&(clearTimeout(Z),Z=null)}function Q(){j.value=!1,X()}function nn(...sn){X(),j.value=!0,Z=setTimeout(()=>{j.value=!1,Z=null,d(...sn)},resolveUnref(R))}return z&&(j.value=!0,isClient&&nn()),tryOnScopeDispose(Q),{isPending:readonly(j),start:nn,stop:Q}}function useToggle(d=!1,R={}){const{truthyValue:N=!0,falsyValue:z=!1}=R,j=isRef(d),Z=ref(d);function X(Q){if(arguments.length)return Z.value=Q,Z.value;{const nn=resolveUnref(N);return Z.value=Z.value===nn?resolveUnref(z):nn,Z.value}}return j?X:[Z,X]}var __getOwnPropSymbols$6=Object.getOwnPropertySymbols,__hasOwnProp$6=Object.prototype.hasOwnProperty,__propIsEnum$6=Object.prototype.propertyIsEnumerable,__objRest$5=(d,R)=>{var N={};for(var z in d)__hasOwnProp$6.call(d,z)&&R.indexOf(z)<0&&(N[z]=d[z]);if(d!=null&&__getOwnPropSymbols$6)for(var z of __getOwnPropSymbols$6(d))R.indexOf(z)<0&&__propIsEnum$6.call(d,z)&&(N[z]=d[z]);return N};function watchWithFilter(d,R,N={}){const z=N,{eventFilter:j=bypassFilter}=z,Z=__objRest$5(z,["eventFilter"]);return watch(d,createFilterWrapper(j,R),Z)}var __defProp$2=Object.defineProperty,__defProps$2=Object.defineProperties,__getOwnPropDescs$2=Object.getOwnPropertyDescriptors,__getOwnPropSymbols$2=Object.getOwnPropertySymbols,__hasOwnProp$2=Object.prototype.hasOwnProperty,__propIsEnum$2=Object.prototype.propertyIsEnumerable,__defNormalProp$2=(d,R,N)=>R in d?__defProp$2(d,R,{enumerable:!0,configurable:!0,writable:!0,value:N}):d[R]=N,__spreadValues$2=(d,R)=>{for(var N in R||(R={}))__hasOwnProp$2.call(R,N)&&__defNormalProp$2(d,N,R[N]);if(__getOwnPropSymbols$2)for(var N of __getOwnPropSymbols$2(R))__propIsEnum$2.call(R,N)&&__defNormalProp$2(d,N,R[N]);return d},__spreadProps$2=(d,R)=>__defProps$2(d,__getOwnPropDescs$2(R)),__objRest$1$1=(d,R)=>{var N={};for(var z in d)__hasOwnProp$2.call(d,z)&&R.indexOf(z)<0&&(N[z]=d[z]);if(d!=null&&__getOwnPropSymbols$2)for(var z of __getOwnPropSymbols$2(d))R.indexOf(z)<0&&__propIsEnum$2.call(d,z)&&(N[z]=d[z]);return N};function watchPausable(d,R,N={}){const z=N,{eventFilter:j}=z,Z=__objRest$1$1(z,["eventFilter"]),{eventFilter:X,pause:Q,resume:nn,isActive:sn}=pausableFilter(j);return{stop:watchWithFilter(d,R,__spreadProps$2(__spreadValues$2({},Z),{eventFilter:X})),pause:Q,resume:nn,isActive:sn}}function unrefElement(d){var R;const N=resolveUnref(d);return(R=N==null?void 0:N.$el)!=null?R:N}const defaultWindow=isClient?window:void 0,defaultDocument=isClient?window.document:void 0,defaultNavigator=isClient?window.navigator:void 0;function useEventListener(...d){let R,N,z,j;if(isString(d[0])||Array.isArray(d[0])?([N,z,j]=d,R=defaultWindow):[R,N,z,j]=d,!R)return noop;Array.isArray(N)||(N=[N]),Array.isArray(z)||(z=[z]);const Z=[],X=()=>{Z.forEach(en=>en()),Z.length=0},Q=(en,tn,an,on)=>(en.addEventListener(tn,an,on),()=>en.removeEventListener(tn,an,on)),nn=watch(()=>[unrefElement(R),resolveUnref(j)],([en,tn])=>{X(),en&&Z.push(...N.flatMap(an=>z.map(on=>Q(en,an,on,tn))))},{immediate:!0,flush:"post"}),sn=()=>{nn(),X()};return tryOnScopeDispose(sn),sn}let _iOSWorkaround=!1;function onClickOutside(d,R,N={}){const{window:z=defaultWindow,ignore:j=[],capture:Z=!0,detectIframe:X=!1}=N;if(!z)return;isIOS&&!_iOSWorkaround&&(_iOSWorkaround=!0,Array.from(z.document.body.children).forEach(an=>an.addEventListener("click",noop)));let Q=!0;const nn=an=>j.some(on=>{if(typeof on=="string")return Array.from(z.document.querySelectorAll(on)).some(cn=>cn===an.target||an.composedPath().includes(cn));{const cn=unrefElement(on);return cn&&(an.target===cn||an.composedPath().includes(cn))}}),en=[useEventListener(z,"click",an=>{const on=unrefElement(d);if(!(!on||on===an.target||an.composedPath().includes(on))){if(an.detail===0&&(Q=!nn(an)),!Q){Q=!0;return}R(an)}},{passive:!0,capture:Z}),useEventListener(z,"pointerdown",an=>{const on=unrefElement(d);on&&(Q=!an.composedPath().includes(on)&&!nn(an))},{passive:!0}),X&&useEventListener(z,"blur",an=>{var on;const cn=unrefElement(d);((on=z.document.activeElement)==null?void 0:on.tagName)==="IFRAME"&&!(cn!=null&&cn.contains(z.document.activeElement))&&R(an)})].filter(Boolean);return()=>en.forEach(an=>an())}function useSupported(d,R=!1){const N=ref(),z=()=>N.value=Boolean(d());return z(),tryOnMounted(z,R),N}function useMediaQuery(d,R={}){const{window:N=defaultWindow}=R,z=useSupported(()=>N&&"matchMedia"in N&&typeof N.matchMedia=="function");let j;const Z=ref(!1),X=()=>{j&&("removeEventListener"in j?j.removeEventListener("change",Q):j.removeListener(Q))},Q=()=>{z.value&&(X(),j=N.matchMedia(resolveRef(d).value),Z.value=j.matches,"addEventListener"in j?j.addEventListener("change",Q):j.addListener(Q))};return watchEffect(Q),tryOnScopeDispose(()=>X()),Z}function useClipboard(d={}){const{navigator:R=defaultNavigator,read:N=!1,source:z,copiedDuring:j=1500,legacy:Z=!1}=d,X=["copy","cut"],Q=useSupported(()=>R&&"clipboard"in R),nn=computed(()=>Q.value||Z),sn=ref(""),en=ref(!1),tn=useTimeoutFn(()=>en.value=!1,j);function an(){Q.value?R.clipboard.readText().then(ln=>{sn.value=ln}):sn.value=pn()}if(nn.value&&N)for(const ln of X)useEventListener(ln,an);async function on(ln=resolveUnref(z)){nn.value&&ln!=null&&(Q.value?await R.clipboard.writeText(ln):cn(ln),sn.value=ln,en.value=!0,tn.start())}function cn(ln){const un=document.createElement("textarea");un.value=ln??"",un.style.position="absolute",un.style.opacity="0",document.body.appendChild(un),un.select(),document.execCommand("copy"),un.remove()}function pn(){var ln,un,rn;return(rn=(un=(ln=document==null?void 0:document.getSelection)==null?void 0:ln.call(document))==null?void 0:un.toString())!=null?rn:""}return{isSupported:nn,text:sn,copied:en,copy:on}}const _global=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},globalKey="__vueuse_ssr_handlers__";_global[globalKey]=_global[globalKey]||{};const handlers=_global[globalKey];function getSSRHandler(d,R){return handlers[d]||R}function guessSerializerType(d){return d==null?"any":d instanceof Set?"set":d instanceof Map?"map":d instanceof Date?"date":typeof d=="boolean"?"boolean":typeof d=="string"?"string":typeof d=="object"?"object":Number.isNaN(d)?"any":"number"}var __defProp$k=Object.defineProperty,__getOwnPropSymbols$m=Object.getOwnPropertySymbols,__hasOwnProp$m=Object.prototype.hasOwnProperty,__propIsEnum$m=Object.prototype.propertyIsEnumerable,__defNormalProp$k=(d,R,N)=>R in d?__defProp$k(d,R,{enumerable:!0,configurable:!0,writable:!0,value:N}):d[R]=N,__spreadValues$k=(d,R)=>{for(var N in R||(R={}))__hasOwnProp$m.call(R,N)&&__defNormalProp$k(d,N,R[N]);if(__getOwnPropSymbols$m)for(var N of __getOwnPropSymbols$m(R))__propIsEnum$m.call(R,N)&&__defNormalProp$k(d,N,R[N]);return d};const StorageSerializers={boolean:{read:d=>d==="true",write:d=>String(d)},object:{read:d=>JSON.parse(d),write:d=>JSON.stringify(d)},number:{read:d=>Number.parseFloat(d),write:d=>String(d)},any:{read:d=>d,write:d=>String(d)},string:{read:d=>d,write:d=>String(d)},map:{read:d=>new Map(JSON.parse(d)),write:d=>JSON.stringify(Array.from(d.entries()))},set:{read:d=>new Set(JSON.parse(d)),write:d=>JSON.stringify(Array.from(d))},date:{read:d=>new Date(d),write:d=>d.toISOString()}},customStorageEventName="vueuse-storage";function useStorage(d,R,N,z={}){var j;const{flush:Z="pre",deep:X=!0,listenToStorageChanges:Q=!0,writeDefaults:nn=!0,mergeDefaults:sn=!1,shallow:en,window:tn=defaultWindow,eventFilter:an,onError:on=mn=>{console.error(mn)}}=z,cn=(en?shallowRef:ref)(R);if(!N)try{N=getSSRHandler("getDefaultStorage",()=>{var mn;return(mn=defaultWindow)==null?void 0:mn.localStorage})()}catch(mn){on(mn)}if(!N)return cn;const pn=resolveUnref(R),ln=guessSerializerType(pn),un=(j=z.serializer)!=null?j:StorageSerializers[ln],{pause:rn,resume:vn}=watchPausable(cn,()=>bn(cn.value),{flush:Z,deep:X,eventFilter:an});return tn&&Q&&(useEventListener(tn,"storage",Pn),useEventListener(tn,customStorageEventName,In)),Pn(),cn;function bn(mn){try{if(mn==null)N.removeItem(d);else{const dn=un.write(mn),yn=N.getItem(d);yn!==dn&&(N.setItem(d,dn),tn&&tn.dispatchEvent(new CustomEvent(customStorageEventName,{detail:{key:d,oldValue:yn,newValue:dn,storageArea:N}})))}}catch(dn){on(dn)}}function _n(mn){const dn=mn?mn.newValue:N.getItem(d);if(dn==null)return nn&&pn!==null&&N.setItem(d,un.write(pn)),pn;if(!mn&&sn){const yn=un.read(dn);return isFunction(sn)?sn(yn,pn):ln==="object"&&!Array.isArray(yn)?__spreadValues$k(__spreadValues$k({},pn),yn):yn}else return typeof dn!="string"?dn:un.read(dn)}function In(mn){Pn(mn.detail)}function Pn(mn){if(!(mn&&mn.storageArea!==N)){if(mn&&mn.key==null){cn.value=pn;return}if(!(mn&&mn.key!==d)){rn();try{cn.value=_n(mn)}catch(dn){on(dn)}finally{mn?nextTick(vn):vn()}}}}}function usePreferredDark(d){return useMediaQuery("(prefers-color-scheme: dark)",d)}const functionsMap=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]];function useFullscreen(d,R={}){const{document:N=defaultDocument,autoExit:z=!1}=R,j=d||(N==null?void 0:N.querySelector("html")),Z=ref(!1);let X=functionsMap[0];const Q=useSupported(()=>{if(N){for(const pn of functionsMap)if(pn[1]in N)return X=pn,!0}else return!1;return!1}),[nn,sn,en,,tn]=X;async function an(){Q.value&&(N!=null&&N[en]&&await N[sn](),Z.value=!1)}async function on(){if(!Q.value)return;await an();const pn=unrefElement(j);pn&&(await pn[nn](),Z.value=!0)}async function cn(){Z.value?await an():await on()}return N&&useEventListener(N,tn,()=>{Z.value=!!(N!=null&&N[en])},!1),z&&tryOnScopeDispose(an),{isSupported:Q,isFullscreen:Z,enter:on,exit:an,toggle:cn}}var __getOwnPropSymbols$8=Object.getOwnPropertySymbols,__hasOwnProp$8=Object.prototype.hasOwnProperty,__propIsEnum$8=Object.prototype.propertyIsEnumerable,__objRest$1=(d,R)=>{var N={};for(var z in d)__hasOwnProp$8.call(d,z)&&R.indexOf(z)<0&&(N[z]=d[z]);if(d!=null&&__getOwnPropSymbols$8)for(var z of __getOwnPropSymbols$8(d))R.indexOf(z)<0&&__propIsEnum$8.call(d,z)&&(N[z]=d[z]);return N};function useMutationObserver(d,R,N={}){const z=N,{window:j=defaultWindow}=z,Z=__objRest$1(z,["window"]);let X;const Q=useSupported(()=>j&&"MutationObserver"in j),nn=()=>{X&&(X.disconnect(),X=void 0)},sn=watch(()=>unrefElement(d),tn=>{nn(),Q.value&&j&&tn&&(X=new MutationObserver(R),X.observe(tn,Z))},{immediate:!0}),en=()=>{nn(),sn()};return tryOnScopeDispose(en),{isSupported:Q,stop:en}}var SwipeDirection;(function(d){d.UP="UP",d.RIGHT="RIGHT",d.DOWN="DOWN",d.LEFT="LEFT",d.NONE="NONE"})(SwipeDirection||(SwipeDirection={}));function checkOverflowScroll(d){const R=window.getComputedStyle(d);if(R.overflowX==="scroll"||R.overflowY==="scroll"||R.overflowX==="auto"&&d.clientHeight<d.scrollHeight||R.overflowY==="auto"&&d.clientWidth<d.scrollWidth)return!0;{const N=d.parentNode;return!N||N.tagName==="BODY"?!1:checkOverflowScroll(N)}}function preventDefault(d){const R=d||window.event,N=R.target;return checkOverflowScroll(N)?!1:R.touches.length>1?!0:(R.preventDefault&&R.preventDefault(),!1)}function useScrollLock(d,R=!1){const N=ref(R);let z=null,j;watch(resolveRef(d),Q=>{if(Q){const nn=Q;j=nn.style.overflow,N.value&&(nn.style.overflow="hidden")}},{immediate:!0});const Z=()=>{const Q=resolveUnref(d);!Q||N.value||(isIOS&&(z=useEventListener(Q,"touchmove",nn=>{preventDefault(nn)},{passive:!1})),Q.style.overflow="hidden",N.value=!0)},X=()=>{const Q=resolveUnref(d);!Q||!N.value||(isIOS&&(z==null||z()),Q.style.overflow=j,N.value=!1)};return tryOnScopeDispose(X),computed({get(){return N.value},set(Q){Q?Z():X()}})}function useSessionStorage(d,R,N={}){const{window:z=defaultWindow}=N;return useStorage(d,R,z==null?void 0:z.sessionStorage,N)}let _id=0;function useStyleTag(d,R={}){const N=ref(!1),{document:z=defaultDocument,immediate:j=!0,manual:Z=!1,id:X=`vueuse_styletag_${++_id}`}=R,Q=ref(d);let nn=()=>{};const sn=()=>{if(!z)return;const tn=z.getElementById(X)||z.createElement("style");tn.isConnected||(tn.type="text/css",tn.id=X,R.media&&(tn.media=R.media),z.head.appendChild(tn)),!N.value&&(nn=watch(Q,an=>{tn.textContent=an},{immediate:!0}),N.value=!0)},en=()=>{!z||!N.value||(nn(),z.head.removeChild(z.getElementById(X)),N.value=!1)};return j&&!Z&&tryOnMounted(sn),Z||tryOnScopeDispose(en),{id:X,css:Q,unload:en,load:sn,isLoaded:readonly(N)}}var __defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(d,R,N)=>R in d?__defProp(d,R,{enumerable:!0,configurable:!0,writable:!0,value:N}):d[R]=N,__spreadValues=(d,R)=>{for(var N in R||(R={}))__hasOwnProp.call(R,N)&&__defNormalProp(d,N,R[N]);if(__getOwnPropSymbols)for(var N of __getOwnPropSymbols(R))__propIsEnum.call(R,N)&&__defNormalProp(d,N,R[N]);return d};const _TransitionPresets={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};__spreadValues({linear:identity},_TransitionPresets);function useWindowScroll({window:d=defaultWindow}={}){if(!d)return{x:ref(0),y:ref(0)};const R=ref(d.scrollX),N=ref(d.scrollY);return useEventListener(d,"scroll",()=>{R.value=d.scrollX,N.value=d.scrollY},{capture:!1,passive:!0}),{x:R,y:N}}const badge="",t$2=({type:d="info",text:R="",vertical:N="top",color:z},{slots:j})=>{var Z;return h$1("span",{class:["badge",d,{diy:z}],style:{verticalAlign:N,...z?{backgroundColor:z}:{}}},R||((Z=j.default)==null?void 0:Z.call(j)))};t$2.displayName="Badge";const fontIcon="";var m$3=defineComponent({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(d){const R=computed(()=>{const z=["font-icon icon"],j=`iconfont icon-${d.icon}`;return z.push(j),z}),N=computed(()=>{const z={};return d.color&&(z.color=d.color),d.size&&(z["font-size"]=Number.isNaN(Number(d.size))?d.size:`${d.size}px`),at(z).length?z:null});return()=>d.icon?h$1("span",{key:d.icon,class:R.value,style:N.value}):null}});const l$3=()=>h$1(G$1,{name:"back-to-top"},()=>[h$1("path",{d:"M512 843.2c-36.2 0-66.4-13.6-85.8-21.8-10.8-4.6-22.6 3.6-21.8 15.2l7 102c.4 6.2 7.6 9.4 12.6 5.6l29-22c3.6-2.8 9-1.8 11.4 2l41 64.2c3 4.8 10.2 4.8 13.2 0l41-64.2c2.4-3.8 7.8-4.8 11.4-2l29 22c5 3.8 12.2.6 12.6-5.6l7-102c.8-11.6-11-20-21.8-15.2-19.6 8.2-49.6 21.8-85.8 21.8z"}),h$1("path",{d:"m795.4 586.2-96-98.2C699.4 172 513 32 513 32S324.8 172 324.8 488l-96 98.2c-3.6 3.6-5.2 9-4.4 14.2L261.2 824c1.8 11.4 14.2 17 23.6 10.8L419 744s41.4 40 94.2 40c52.8 0 92.2-40 92.2-40l134.2 90.8c9.2 6.2 21.6.6 23.6-10.8l37-223.8c.4-5.2-1.2-10.4-4.8-14zM513 384c-34 0-61.4-28.6-61.4-64s27.6-64 61.4-64c34 0 61.4 28.6 61.4 64S547 384 513 384z"})]);l$3.displayName="BackToTopIcon";const balloon="",backToTop="";var T$3=defineComponent({name:"BackToTop",props:{threshold:{type:Number,default:300}},setup(d){const R=usePageFrontmatter(),N=ne({"/":{backToTop:"返回顶部"}}),{y:z}=useWindowScroll(),j=computed(()=>R.value.backToTop!==!1&&z.value>d.threshold);return()=>h$1(Transition,{name:"fade"},()=>j.value?h$1("button",{class:"back-to-top","aria-label":N.value.backToTop,"data-balloon-pos":"left",onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},h$1(l$3)):null)}});const srOnly="",clientConfig1=defineClientConfig({enhance:({app:d})=>{Vt("Badge")||d.component("Badge",t$2),Vt("FontIcon")||d.component("FontIcon",m$3)},setup:()=>{useStyleTag(`  @import url("//at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");
  `)},rootComponents:[()=>h$1(T$3,{threshold:300})]});function r$2(d,R,N){var z,j,Z;R===void 0&&(R=50),N===void 0&&(N={});var X=(z=N.isImmediate)!=null&&z,Q=(j=N.callback)!=null&&j,nn=N.maxWait,sn=Date.now(),en=[];function tn(){if(nn!==void 0){var on=Date.now()-sn;if(on+R>=nn)return nn-on}return R}var an=function(){var on=[].slice.call(arguments),cn=this;return new Promise(function(pn,ln){var un=X&&Z===void 0;if(Z!==void 0&&clearTimeout(Z),Z=setTimeout(function(){if(Z=void 0,sn=Date.now(),!X){var vn=d.apply(cn,on);Q&&Q(vn),en.forEach(function(bn){return(0,bn.resolve)(vn)}),en=[]}},tn()),un){var rn=d.apply(cn,on);return Q&&Q(rn),pn(rn)}en.push({resolve:pn,reject:ln})})};return an.cancel=function(on){Z!==void 0&&clearTimeout(Z),en.forEach(function(cn){return(0,cn.reject)(on)}),en=[]},an}const useActiveHeaderLinks=({headerLinkSelector:d,headerAnchorSelector:R,delay:N,offset:z=5})=>{const j=useRouter(),X=r$2(()=>{var pn,ln;const Q=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(Q-0)<z){updateHash(j,"");return}const sn=window.innerHeight+Q,en=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),tn=Math.abs(en-sn)<z,an=Array.from(document.querySelectorAll(d)),cn=Array.from(document.querySelectorAll(R)).filter(un=>an.some(rn=>rn.hash===un.hash));for(let un=0;un<cn.length;un++){const rn=cn[un],vn=cn[un+1],bn=Q>=(((pn=rn.parentElement)==null?void 0:pn.offsetTop)??0)-z,_n=!vn||Q<(((ln=vn.parentElement)==null?void 0:ln.offsetTop)??0)-z;if(!(bn&&_n))continue;const Pn=decodeURIComponent(j.currentRoute.value.hash),mn=decodeURIComponent(rn.hash);if(Pn===mn)return;if(tn){for(let dn=un+1;dn<cn.length;dn++)if(Pn===decodeURIComponent(cn[dn].hash))return}updateHash(j,mn);return}},N);onMounted(()=>{window.addEventListener("scroll",X)}),onBeforeUnmount(()=>{window.removeEventListener("scroll",X)})},updateHash=async(d,R)=>{const{scrollBehavior:N}=d.options;d.options.scrollBehavior=void 0,await d.replace({query:d.currentRoute.value.query,hash:R,force:!0}).finally(()=>d.options.scrollBehavior=N)},headerLinkSelector=".sidebar-link, .toc-link",headerAnchorSelector=".header-anchor",delay=200,offset=5,clientConfig2=defineClientConfig({setup(){useActiveHeaderLinks({headerLinkSelector,headerAnchorSelector,delay,offset})}}),autoCatalog="";var D=defineComponent({name:"AutoCatalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean},setup(d,{slots:R}){const N=ne({"/":{title:"目录"}}),z=usePageData(),j=useRouter(),Z=useSiteData(),X=sn=>{const en=sn.I;return typeof en>"u"||en},Q=()=>{const sn=d.base||z.value.path.replace(/\/[^/]+$/,"/"),en=j.getRoutes(),tn=[];return en.filter(({meta:an,path:on})=>{if(!_t(on,sn)||on===sn)return!1;if(sn==="/"){const cn=at(Z.value.locales).filter(pn=>pn!=="/");if(on==="/404.html"||cn.some(pn=>_t(on,pn)))return!1}return(Oe(on,".html")&&!Oe(on,"/index.html")||Oe(on,"/"))&&X(an)}).map(({path:an,meta:on})=>{const cn=an.substring(sn.length).split("/").length;return{title:on.t||"",icon:on.i,base:an.replace(/\/[^/]+\/?$/,"/"),order:on.O||null,level:Oe(an,"/")?cn-1:cn,path:an}}).filter(({title:an,level:on})=>typeof an=="string"&&an&&on<=d.level).sort(({title:an,level:on,path:cn,order:pn},{title:ln,level:un,path:rn,order:vn})=>on-un||(Oe(cn,"/index.html")?-1:Oe(rn,"/index.html")?1:pn===null?vn===null?an.localeCompare(ln):vn:vn===null?pn:pn>0?vn>0?pn-vn:-1:vn<0?pn-vn:1)).forEach(an=>{var on;const{base:cn,level:pn}=an;switch(pn){case 1:tn.push(an);break;case 2:{const ln=tn.find(un=>un.path===cn);ln&&(ln.children??(ln.children=[])).push(an);break}default:{const ln=tn.find(un=>un.path===cn.replace(/\/[^/]+\/$/,"/"));if(ln){const un=(on=ln.children)==null?void 0:on.find(rn=>rn.path===cn);un&&(un.children??(un.children=[])).push(an)}}}}),tn},nn=computed(()=>Q());return()=>h$1("div",{class:"auto-catalog-wrapper"},[h$1("h2",{class:"main-title"},N.value.title),...nn.value.map(({children:sn=[],icon:en,path:tn,title:an},on)=>[h$1("h3",{id:an,class:["child-title",{"has-children":sn.length}]},[h$1("a",{href:`#${an}`,class:"header-anchor"},"#"),h$1(RouterLink,{class:"catalog-title",to:tn},()=>[d.index?`${on+1}.`:null,en&&R.icon?R.icon({icon:en}):null,an||"Unknown"])]),sn.length?h$1("ul",{class:"child-catalog-wrapper"},sn.map(({children:cn=[],icon:pn,path:ln,title:un},rn)=>h$1("li",{class:"child-catalog-item"},[h$1("div",{class:["sub-title",{"has-children":cn.length}]},[h$1("a",{href:`#${un}`,class:"header-anchor"},"#"),h$1(RouterLink,{class:"catalog-title",to:ln},()=>[d.index?`${on+1}.${rn+1}`:null,pn&&R.icon?R.icon({icon:pn}):null,un||"Unknown"])]),cn.length?h$1("div",{class:"sub-catalog-wrapper"},cn.map(({icon:vn,path:bn,title:_n},In)=>h$1(RouterLink,{class:"sub-catalog-item",to:bn},()=>[d.index?`${on+1}.${rn+1}.${In+1}`:null,vn&&R.icon?R.icon({icon:vn}):null,_n||"Unknown"]))):null]))):null])])}}),K$1=defineClientConfig({enhance:({app:d})=>{Vt("AutoCatalog",d)||d.component("AutoCatalog",R=>h$1(D,R,{icon:({icon:N})=>h$1(resolveComponent("HopeIcon"),{icon:N})}))}});const vars$1="",externalLinkIcon="",svg=h$1("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[h$1("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),h$1("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),ExternalLinkIcon=defineComponent({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(d){const R=useRouteLocale(),N=computed(()=>d.locales[R.value]??{openInNewWindow:"open in new window"});return()=>h$1("span",[svg,h$1("span",{class:"external-link-icon-sr-only"},N.value.openInNewWindow)])}}),locales={},clientConfig4=defineClientConfig({enhance({app:d}){d.component("ExternalLinkIcon",h$1(ExternalLinkIcon,{locales}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const nprogress$1={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:d=>{const R=nprogress$1.isStarted();d=clamp(d,nprogress$1.settings.minimum,1),nprogress$1.status=d===1?null:d;const N=nprogress$1.render(!R),z=N.querySelector(nprogress$1.settings.barSelector),j=nprogress$1.settings.speed,Z=nprogress$1.settings.easing;return N.offsetWidth,queue(X=>{css(z,{transform:"translate3d("+toBarPerc(d)+"%,0,0)",transition:"all "+j+"ms "+Z}),d===1?(css(N,{transition:"none",opacity:"1"}),N.offsetWidth,setTimeout(function(){css(N,{transition:"all "+j+"ms linear",opacity:"0"}),setTimeout(function(){nprogress$1.remove(),X()},j)},j)):setTimeout(()=>X(),j)}),nprogress$1},isStarted:()=>typeof nprogress$1.status=="number",start:()=>{nprogress$1.status||nprogress$1.set(0);const d=()=>{setTimeout(()=>{nprogress$1.status&&(nprogress$1.trickle(),d())},nprogress$1.settings.trickleSpeed)};return nprogress$1.settings.trickle&&d(),nprogress$1},done:d=>!d&&!nprogress$1.status?nprogress$1:nprogress$1.inc(.3+.5*Math.random()).set(1),inc:d=>{let R=nprogress$1.status;return R?(typeof d!="number"&&(d=(1-R)*clamp(Math.random()*R,.1,.95)),R=clamp(R+d,0,.994),nprogress$1.set(R)):nprogress$1.start()},trickle:()=>nprogress$1.inc(Math.random()*nprogress$1.settings.trickleRate),render:d=>{if(nprogress$1.isRendered())return document.getElementById("nprogress");addClass(document.documentElement,"nprogress-busy");const R=document.createElement("div");R.id="nprogress",R.innerHTML=nprogress$1.settings.template;const N=R.querySelector(nprogress$1.settings.barSelector),z=d?"-100":toBarPerc(nprogress$1.status||0),j=document.querySelector(nprogress$1.settings.parent);return css(N,{transition:"all 0 linear",transform:"translate3d("+z+"%,0,0)"}),j!==document.body&&addClass(j,"nprogress-custom-parent"),j==null||j.appendChild(R),R},remove:()=>{removeClass(document.documentElement,"nprogress-busy"),removeClass(document.querySelector(nprogress$1.settings.parent),"nprogress-custom-parent");const d=document.getElementById("nprogress");d&&removeElement(d)},isRendered:()=>!!document.getElementById("nprogress")},clamp=(d,R,N)=>d<R?R:d>N?N:d,toBarPerc=d=>(-1+d)*100,queue=function(){const d=[];function R(){const N=d.shift();N&&N(R)}return function(N){d.push(N),d.length===1&&R()}}(),css=function(){const d=["Webkit","O","Moz","ms"],R={};function N(X){return X.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(Q,nn){return nn.toUpperCase()})}function z(X){const Q=document.body.style;if(X in Q)return X;let nn=d.length;const sn=X.charAt(0).toUpperCase()+X.slice(1);let en;for(;nn--;)if(en=d[nn]+sn,en in Q)return en;return X}function j(X){return X=N(X),R[X]||(R[X]=z(X))}function Z(X,Q,nn){Q=j(Q),X.style[Q]=nn}return function(X,Q){for(const nn in Q){const sn=Q[nn];sn!==void 0&&Object.prototype.hasOwnProperty.call(Q,nn)&&Z(X,nn,sn)}}}(),hasClass=(d,R)=>(typeof d=="string"?d:classList(d)).indexOf(" "+R+" ")>=0,addClass=(d,R)=>{const N=classList(d),z=N+R;hasClass(N,R)||(d.className=z.substring(1))},removeClass=(d,R)=>{const N=classList(d);if(!hasClass(d,R))return;const z=N.replace(" "+R+" "," ");d.className=z.substring(1,z.length-1)},classList=d=>(" "+(d.className||"")+" ").replace(/\s+/gi," "),removeElement=d=>{d&&d.parentNode&&d.parentNode.removeChild(d)},vars="",nprogress="",useNprogress=()=>{onMounted(()=>{const d=useRouter(),R=new Set;R.add(d.currentRoute.value.path),d.beforeEach(N=>{R.has(N.path)||nprogress$1.start()}),d.afterEach(N=>{R.add(N.path),nprogress$1.done()})})},clientConfig5=defineClientConfig({setup(){useNprogress()}}),themeData$1=JSON.parse('{"encrypt":{"config":{"/root/面试.html":["$2a$10$4/K8bRQCH7SpK6IShppVoOLh5xthZXoSF5YbtP1DVCV7.fucS9IBu"]}},"themeColor":{"blue":"#2196f3","red":"#f26d6d","green":"#3eaf7c","orange":"#fb9b5f"},"fullscreen":true,"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"Edit this page on GitHub","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"收藏"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"author":{"name":"rz","url":"https://github.com/xyz3282836/monodoc"},"logo":"/hero.png","repo":"xyz3282836/monodoc","docsDir":"packages/note/src","docsBranch":"master","navbar":["/",{"text":"Go","icon":"","link":"/go/"},{"text":"Liunx","icon":"","link":"/linux/"},{"text":"Unix环境高级编程","icon":"","link":"/apue/"},{"text":"源码解读","icon":"","link":"/source-code/"}],"sidebar":{"/":["","go/","source-code",{"text":"Unix环境高级编程","prefix":"apue/","children":"structure","collapsible":true},{"text":"Liunx","prefix":"linux/","children":"structure","collapsible":true},{"text":"算法","prefix":"algorithms/","children":"structure","collapsible":true},{"text":"数据结构","prefix":"data-structure/","children":"structure","collapsible":true},{"text":"操作系统","prefix":"opreating-system/","children":"structure","collapsible":true},{"text":"技术","prefix":"tech/","children":"structure","collapsible":true},{"text":"领域设计","prefix":"ddd/","children":"structure","collapsible":true},{"text":"术语","prefix":"technical-term/","children":"structure","collapsible":true},{"text":"性能之巅","prefix":"systemc-performance/","children":"structure","collapsible":true},{"text":"其他","prefix":"other/","children":"structure","collapsible":true},{"text":"待办","prefix":"todo/","children":"structure","collapsible":true}],"/go/":"structure","/source-code/":"structure"},"footer":"默认页脚","displayFooter":true}}}'),themeData=ref(themeData$1),useThemeData$1=()=>themeData,themeLocaleDataSymbol=Symbol(""),useThemeLocaleData$1=()=>{const d=inject(themeLocaleDataSymbol);if(!d)throw new Error("useThemeLocaleData() is called without provider.");return d},resolveThemeLocaleData=(d,R)=>{var N;return{...d,...(N=d.locales)==null?void 0:N[R]}},clientConfig6=defineClientConfig({enhance({app:d}){const R=useThemeData$1(),N=d._context.provides[routeLocaleSymbol],z=computed(()=>resolveThemeLocaleData(R.value,N.value));d.provide(themeLocaleDataSymbol,z),Object.defineProperties(d.config.globalProperties,{$theme:{get(){return R.value}},$themeLocale:{get(){return z.value}}})}}),button="",M=800,u$1=2e3,S$3={"/":{copy:"复制代码",copied:"已复制",hint:"复制成功"}},n$1=!1,P=['.theme-hope-content div[class*="language-"] pre'],m$2=!1,l$2=new Map,T$2=()=>{const{copy:d}=useClipboard({legacy:!0}),R=ne(S$3),N=usePageData(),z=ee(),j=Q=>{if(!Q.hasAttribute("copy-code-registered")){const nn=document.createElement("button");nn.classList.add("copy-code-button"),nn.innerHTML='<div class="copy-icon" />',nn.setAttribute("aria-label",R.value.copy),nn.setAttribute("data-copied",R.value.copied),Q.parentElement&&Q.parentElement.insertBefore(nn,Q),Q.setAttribute("copy-code-registered","")}},Z=()=>nextTick().then(()=>new Promise(Q=>{setTimeout(()=>{P.forEach(nn=>{document.querySelectorAll(nn).forEach(j)}),Q()},M)})),X=(Q,nn,sn)=>{let{innerText:en=""}=nn;/language-(shellscript|shell|bash|sh|zsh)/.test(Q.classList.toString())&&(en=en.replace(/^ *(\$|>) /gm,"")),d(en).then(()=>{sn.classList.add("copied"),clearTimeout(l$2.get(sn));const tn=setTimeout(()=>{sn.classList.remove("copied"),sn.blur(),l$2.delete(sn)},u$1);l$2.set(sn,tn)})};onMounted(()=>{(!z.value||m$2)&&Z(),useEventListener("click",Q=>{const nn=Q.target;if(nn.matches('div[class*="language-"] > button.copy')){const sn=nn.parentElement,en=nn.nextElementSibling;en&&X(sn,en,nn)}else if(nn.matches('div[class*="language-"] div.copy-icon')){const sn=nn.parentElement,en=sn.parentElement,tn=sn.nextElementSibling;tn&&X(en,tn,sn)}}),watch(()=>N.value.path,()=>{(!z.value||m$2)&&Z()})})};var Y$1=defineClientConfig({setup:()=>{T$2()}});const chart="",parseChartConfig=(config,type)=>{if(type==="json")return JSON.parse(config);const exports={},module={exports};return eval(config),module.exports};var ChartJS=defineComponent({name:"ChartJS",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(d){const R=ref(),N=ref(),z=ref(!0);return onMounted(async()=>{const[{default:j}]=await Promise.all([__vitePreload(()=>import("./auto-ba5ecab5.js"),[]),new Promise(Q=>setTimeout(Q,800))]);j.defaults.maintainAspectRatio=!1;const Z=parseChartConfig(He(d.config),d.type),X=N.value.getContext("2d");new j(X,Z),z.value=!1}),()=>[d.title?h$1("div",{class:"chart-title"},decodeURIComponent(d.title)):null,z.value?h$1(vt,{class:"chart-loading",height:192}):null,h$1("div",{ref:R,class:"chart-wrapper",id:d.id,style:{display:z.value?"none":"block"}},h$1("canvas",{ref:N,height:400}))]}});const codeTabs="",o$3=useStorage("VUEPRESS_CODE_TAB_STORE",{});var S$2=defineComponent({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(d,{slots:R}){const N=ref(d.active),z=ref([]),j=()=>{if(d.tabId){const{title:sn,id:en=sn}=d.data[N.value];o$3.value[d.tabId]=en}},Z=(sn=N.value)=>{N.value=sn<z.value.length-1?sn+1:0,z.value[N.value].focus()},X=(sn=N.value)=>{N.value=sn>0?sn-1:z.value.length-1,z.value[N.value].focus()},Q=(sn,en)=>{if(sn.key===" "||sn.key==="Enter"?(sn.preventDefault(),N.value=en):sn.key==="ArrowRight"?(sn.preventDefault(),Z()):sn.key==="ArrowLeft"&&(sn.preventDefault(),X()),d.tabId){const{title:tn,id:an=tn}=d.data[N.value];o$3.value[d.tabId]=an}},nn=()=>{if(d.tabId){const sn=d.data.findIndex(({title:en,id:tn=en})=>o$3.value[d.tabId]===tn);if(sn!==-1)return sn}return d.active};return onMounted(()=>{N.value=nn(),watch(()=>o$3.value[d.tabId],(sn,en)=>{if(d.tabId&&sn!==en){const tn=d.data.findIndex(({title:an,id:on=an})=>on===sn);tn!==-1&&(N.value=tn)}})}),()=>d.data.length?h$1("div",{class:"code-tabs"},[h$1("div",{class:"code-tabs-nav",role:"tablist"},d.data.map(({title:sn},en)=>{const tn=en===N.value;return h$1("button",{ref:an=>{an&&(z.value[en]=an)},class:["code-tabs-nav-tab",{active:tn}],role:"tab","aria-controls":`codetab-${d.id}-${en}`,"aria-selected":tn,onClick:()=>{N.value=en,j()},onKeydown:an=>Q(an,en)},sn)})),d.data.map(({title:sn,id:en=sn},tn)=>{var an;const on=tn===N.value;return h$1("div",{class:["code-tab",{active:on}],id:`codetab-${d.id}-${tn}`,role:"tabpanel","aria-expanded":on},(an=R[`tab${tn}`])==null?void 0:an.call(R,{title:sn,value:en,isActive:on}))})]):null}});const codeGroup="",c$3=({active:d=!1},{slots:R})=>{var N;return h$1("div",{class:["code-group-item",{active:d}],"aria-selected":d},(N=R.default)==null?void 0:N.call(R))};c$3.displayName="CodeGroupItem";const y$1=defineComponent({name:"CodeGroup",setup(d,{slots:R}){const N=ref(-1),z=ref([]),j=(Q=N.value)=>{N.value=Q<z.value.length-1?Q+1:0,z.value[N.value].focus()},Z=(Q=N.value)=>{N.value=Q>0?Q-1:z.value.length-1,z.value[N.value].focus()},X=(Q,nn)=>{Q.key===" "||Q.key==="Enter"?(Q.preventDefault(),N.value=nn):Q.key==="ArrowRight"?(Q.preventDefault(),j(nn)):Q.key==="ArrowLeft"&&(Q.preventDefault(),Z(nn))};return()=>{var Q;const nn=(((Q=R.default)==null?void 0:Q.call(R))||[]).filter(sn=>sn.type.name==="CodeGroupItem").map(sn=>(sn.props===null&&(sn.props={}),sn));return nn.length===0?null:(N.value<0||N.value>nn.length-1?(N.value=nn.findIndex(sn=>"active"in sn.props),N.value===-1&&(N.value=0)):nn.forEach((sn,en)=>{sn.props.active=en===N.value}),h$1("div",{class:"code-group"},[h$1("div",{class:"code-group-nav"},nn.map((sn,en)=>{const tn=en===N.value;return h$1("button",{ref:an=>{an&&(z.value[en]=an)},class:["code-group-nav-tab",{active:tn}],"aria-pressed":tn,"aria-expanded":tn,onClick:()=>{N.value=en},onKeydown:an=>X(an,en)},sn.props.title)})),nn]))}}}),index$2="",q$1=()=>h$1(G$1,{name:"back"},()=>h$1("path",{d:"M1014.749 449.156v125.688H260.626l345.64 345.64-89.239 89.237L19.307 512l497.72-497.721 89.238 89.238-345.64 345.64h754.124z"})),a$1=()=>h$1(G$1,{name:"home"},()=>h$1("path",{d:"M780.106 420.978L506.994 147.866 233.882 420.978h.045v455.11H780.06v-455.11h.046zm90.977 90.976V876.09a91.022 91.022 0 01-91.023 91.022H233.927a91.022 91.022 0 01-91.022-91.022V511.954l-67.22 67.175-64.307-64.307 431.309-431.31c35.498-35.498 93.115-35.498 128.614 0l431.309 431.31-64.307 64.307L871.083 512z"})),o$2='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',v$3='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',l$1='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>',codeDemo="",L={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"},E={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},B=(d,R,N)=>{const z=document.createElement(d);return isPlainObject(R)&&at(R).forEach(j=>{if(j.indexOf("data"))z[j]=R[j];else{const Z=j.replace("data","");z.dataset[Z]=R[j]}}),N&&N.forEach(j=>{z.appendChild(j)}),z},w=d=>({...L,...d,jsLib:Array.from(new Set([...L.jsLib||[],...d.jsLib||[]])),cssLib:Array.from(new Set([...L.cssLib||[],...d.cssLib||[]]))}),m$1=(d,R)=>{if(d[R]!==void 0)return d[R];const N=new Promise(z=>{var j;const Z=document.createElement("script");Z.src=R,(j=document.querySelector("body"))==null||j.appendChild(Z),Z.onload=()=>{z()}});return d[R]=N,N},k$1=(d,R)=>{if(R.css&&Array.from(d.childNodes).every(N=>N.nodeName!=="STYLE")){const N=B("style",{innerHTML:R.css});d.appendChild(N)}},V=(d,R,N)=>{const z=N.getScript();if(z&&Array.from(R.childNodes).every(j=>j.nodeName!=="SCRIPT")){const j=document.createElement("script");j.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${d} .code-demo-container').shadowRoot;
${z}}`)),R.appendChild(j)}},H$1=d=>{const R=at(d),N={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(z=>{const j=R.filter(Z=>E[z].types.includes(Z));if(j.length){const Z=j[0];N[z]=[d[Z].replace(/^\n|\n$/g,""),E[z].map[Z]||Z]}}),N.isLegal=(!N.html.length||N.html[1]==="none")&&(!N.js.length||N.js[1]==="none")&&(!N.css.length||N.css[1]==="none"),N},$=d=>d.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),x$1=d=>`<div id="app">
${$(d)}
</div>`,I$1=d=>`${d.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,J=d=>d.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),O$1=d=>`(function(exports){var module={};module.exports=exports;${d};return module.exports.__esModule?module.exports.default:module.exports;})({})`,q=(d,R)=>{const N=w(R),z=d.js[0]||"";return{...N,html:$(d.html[0]||""),js:z,css:d.css[0]||"",isLegal:d.isLegal,getScript:()=>{var j;return N.useBabel?((j=window.Babel.transform(z,{presets:["es2015"]}))==null?void 0:j.code)||"":z}}},F$1=(d,R)=>{const N=w(R),z=d.html[0]||"",j=/<template>([\s\S]+)<\/template>/u.exec(z),Z=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u.exec(z),X=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u.exec(z),Q=j?j[1].replace(/^\n|\n$/g,""):"",[nn="",sn=""]=Z?[Z[4].replace(/^\n|\n$/g,""),Z[3]]:[],[en="",tn=""]=X?[X[4].replace(/^\n|\n$/g,""),X[3]]:[],an=sn===""&&(tn===""||tn==="css");return{...N,html:x$1(Q),js:J(nn),css:en,isLegal:an,jsLib:[N.vue,...N.jsLib],getScript:()=>{var on,cn;const pn=R.useBabel?((cn=(on=window.Babel)==null?void 0:on.transform(nn,{presets:["es2015"]}))==null?void 0:cn.code)||"":nn.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${O$1(pn)};appOptions.template=\`${Q.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},G=(d,R)=>{const N=w(R);return{...N,html:x$1(""),js:I$1(d.js[0]||""),css:d.css[0]||(d.js[0]?d.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:d.isLegal,jsLib:[N.react,N.reactDOM,...N.jsLib],jsx:!0,getScript:()=>{var z,j;const Z=((j=(z=window.Babel)==null?void 0:z.transform(d.js[0]||"",{presets:["es2015","react"]}))==null?void 0:j.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${O$1(Z)}))`}}},v$2={},Y=d=>Promise.all([m$1(v$2,d.babel),m$1(v$2,d.react),m$1(v$2,d.reactDOM)]),K=d=>{const R=[m$1(v$2,d.vue)];return d.useBabel&&R.push(m$1(v$2,d.babel)),Promise.all(R)},U=d=>d.useBabel?m$1(v$2,d.babel):Promise.resolve();var W=defineComponent({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},setup(d,{slots:R}){const[N,z]=useToggle(!1),j=ref(),Z=ref(),X=ref("0"),Q=ref(!1),nn=computed(()=>JSON.parse(d.config?He(d.config):"{}")),sn=computed(()=>{const cn=JSON.parse(He(d.code));return H$1(cn)}),en=computed(()=>d.type==="react"?G(sn.value,nn.value):d.type==="vue"?F$1(sn.value,nn.value):q(sn.value,nn.value)),tn=computed(()=>en.value.isLegal),an=(cn=!1)=>{const pn=j.value.attachShadow({mode:"open"}),ln=document.createElement("div");ln.classList.add("code-demo-app"),pn.appendChild(ln),tn.value?(cn&&(ln.innerHTML=en.value.html),k$1(pn,en.value),V(d.id,pn,en.value),X.value="0"):X.value="auto",Q.value=!0},on=()=>{switch(d.type){case"react":return Y(en.value).then(()=>an());case"vue":return K(en.value).then(()=>an());default:return U(en.value).then(()=>an(!0))}};return onMounted(()=>{setTimeout(()=>{on()},800)}),()=>{var cn;return h$1("div",{class:"code-demo-wrapper",id:d.id},[h$1("div",{class:"code-demo-header"},[en.value.isLegal?h$1("button",{class:["toggle-button",N.value?"down":"end"],onClick:()=>{X.value=N.value?"0":`${Z.value.clientHeight+13.8}px`,z()}}):null,d.title?h$1("span",{class:"title"},decodeURIComponent(d.title)):null,en.value.isLegal&&en.value.jsfiddle!==!1?h$1("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h$1("input",{type:"hidden",name:"html",value:en.value.html}),h$1("input",{type:"hidden",name:"js",value:en.value.js}),h$1("input",{type:"hidden",name:"css",value:en.value.css}),h$1("input",{type:"hidden",name:"wrap",value:"1"}),h$1("input",{type:"hidden",name:"panel_js",value:"3"}),h$1("input",{type:"hidden",name:"resources",value:[...en.value.cssLib,...en.value.jsLib].join(",")}),h$1("button",{type:"submit",class:"jsfiddle-button",innerHTML:v$3,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!en.value.isLegal||en.value.codepen!==!1?h$1("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h$1("input",{type:"hidden",name:"data",value:JSON.stringify({html:en.value.html,js:en.value.js,css:en.value.css,js_external:en.value.jsLib.join(";"),css_external:en.value.cssLib.join(";"),layout:en.value.codepenLayout,html_pre_processor:sn.value?sn.value.html[1]:"none",js_pre_processor:sn.value?sn.value.js[1]:en.value.jsx?"babel":"none",css_pre_processor:sn.value?sn.value.css[1]:"none",editors:en.value.codepenEditors})}),h$1("button",{type:"submit",innerHTML:o$2,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),Q.value?null:h$1(vt,{class:"code-demo-loading"}),h$1("div",{ref:j,class:"code-demo-container",style:{display:tn.value&&Q.value?"block":"none"}}),h$1("div",{class:"code-demo-code-wrapper",style:{height:X.value}},h$1("div",{ref:Z,class:"code-demo-codes"},(cn=R.default)==null?void 0:cn.call(R)))])}}});const echarts="",parseEChartsConfig=(config,type)=>{if(type==="js"){const exports={},module={exports};return eval(config),module.exports}return JSON.parse(config)};var ECharts=defineComponent({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(d){const R=ref();let N;const z=ref(!0);return useEventListener("resize",useDebounceFn(()=>N==null?void 0:N.resize(),100)),onMounted(()=>{Promise.all([__vitePreload(()=>import("./index-8764208e.js"),[]),new Promise(j=>setTimeout(j,800))]).then(([j])=>{const Z=parseEChartsConfig(He(d.config),d.type);N=j.init(R.value),N.setOption(Z),z.value=!1})}),onUnmounted(()=>{N==null||N.dispose()}),()=>[d.title?h$1("div",{class:"echarts-title"},decodeURIComponent(d.title)):null,h$1("div",{class:"echarts-wrapper"},[h$1("div",{ref:R,class:"echarts-container",id:d.id}),z.value?h$1(vt,{class:"echarts-loading",height:360}):null])]}});const figure="",flowchart="";var f$1={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},F={...f$1,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}},b$1={...f$1,"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"}}},y={...f$1,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}},s$1={ant:F,vue:y,pie:b$1},g$1=defineComponent({name:"FlowChart",props:{code:{type:String,required:!0},id:{type:String,required:!0},preset:{type:String,default:"vue"}},setup(d){let R=null;const N=ref(),z=ref(!0),j=ref(1),Z=computed(()=>s$1[d.preset]||(console.warn(`[md-enhance:flowchart] Unknown preset: ${d.preset}`),s$1.vue)),X=Q=>Q<419?.8:Q>1280?1:.9;return onMounted(()=>{Promise.all([__vitePreload(()=>import("./flowchart-35969cab.js"),[]),new Promise(Q=>setTimeout(Q,800))]).then(([{parse:Q}])=>{R=Q(He(d.code)),j.value=X(window.innerWidth),z.value=!1,R.draw(d.id,{...Z.value,scale:j.value})}),useEventListener("resize",useDebounceFn(()=>{if(R){const Q=X(window.innerWidth);j.value!==Q&&(j.value=Q,R.draw(d.id,{...Z.value,scale:Q}))}},100))}),()=>[z.value?h$1(vt,{class:"flowchart-loading",height:192}):null,h$1("div",{ref:N,class:["flowchart-wrapper",d.preset],id:d.id,style:{display:z.value?"none":"block"}})]}});const footnote="",imageMark="",mermaid="",b=d=>({dark:d,background:d?"#1e1e1e":"#fff",primaryColor:d?"#389d70":"#4abf8a",primaryBorderColor:d?"#389d70":"#4abf8a",primaryTextColor:"#fff",secondaryColor:"#ffb500",secondaryBorderColor:d?"#fff":"#000",secondaryTextColor:d?"#ddd":"#333",tertiaryColor:d?"#282828":"#efeef4",tertiaryBorderColor:d?"#bbb":"#242424",tertiaryTextColor:d?"#ddd":"#333",noteBkgColor:d?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:d?"#f6d365":"#333",lineColor:d?"#d3d3d3":"#333",textColor:d?"#fff":"#242424",mainBkg:d?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:d?"#389d70":"#4abf8a",nodeTextColor:d?"#fff":"#242424",signalTextColor:d?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",fillType0:d?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var T$1=defineComponent({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0}},setup(d){const R=ref(),N=ref(""),z=ref(!1),j=computed(()=>He(d.code)),Z=async()=>Promise.all([__vitePreload(()=>import("./mermaid.core-d9c32575.js").then(X=>X.aK),[]),new Promise(X=>setTimeout(X,800))]).then(async([{default:X}])=>{const Q={useMaxWidth:!1};X.initialize({theme:"base",themeVariables:b(z.value),flowchart:Q,sequence:Q,journey:Q,gantt:Q,er:Q,pie:Q,startOnLoad:!1}),N.value=(await X.render(d.id,j.value)).svg});return onMounted(()=>{const X=document.documentElement,Q=()=>X.classList.contains("dark")||X.getAttribute("data-theme")==="dark";z.value=Q(),Z(),useMutationObserver(X,()=>{z.value=Q()},{attributeFilter:["class","data-theme"],attributes:!0}),watch(z,()=>Z())}),()=>h$1("div",{ref:R,class:"mermaid-wrapper"},N.value?h$1("div",{class:"mermaid-content",innerHTML:N.value}):h$1(vt,{class:"mermaid-loading",height:96}))}});const o$1=()=>__vitePreload(()=>import("./highlight.esm-a794bb63.js"),[]),t$1=()=>__vitePreload(()=>import("./markdown.esm-d92a2fc9.js"),[]),e$1=()=>__vitePreload(()=>import("./math.esm-70a288c8.js"),[]),r$1=()=>__vitePreload(()=>import("./notes.esm-224f94d9.js"),[]),a=()=>__vitePreload(()=>import("./reveal.esm-e5069ce0.js"),[]),i$2=()=>__vitePreload(()=>import("./search.esm-2c3fba7d.js"),[]),c$2=()=>__vitePreload(()=>import("./zoom.esm-b83b91d0.js"),[]),useReveal=()=>[a(),t$1(),o$1(),e$1(),i$2(),r$1(),c$2()],index$1="",leagueGothic="",sourceSansPro="";var S$1=defineComponent({name:"Presentation",props:{id:{type:String,required:!0},code:{type:String,required:!0},theme:{type:String,default:"auto"}},setup(d){const R=usePageFrontmatter(),N=ref(""),z=ref(!0),j=ref();let Z=null;const X=async Q=>{const nn=[new Promise(an=>setTimeout(an,800)),...useReveal()],[,sn,...en]=await Promise.all(nn),tn=new sn.default(Q,{plugins:en.map(({default:an})=>an)});return await tn.initialize({backgroundTransition:"slide",hash:R.value.layout==="Slide",mouseWheel:R.value.layout==="Slide",transition:"slide",slideNumber:!0,...R.value.reveal||{},embedded:R.value.layout!=="Slide"}),tn.configure({backgroundTransition:"slide"}),tn};return onMounted(async()=>{const Q=j.value;Q&&(N.value=He(d.code),Q.setAttribute("id",d.id),Q.setAttribute("data-theme",d.theme),Z=await X(Q),z.value=!1)}),onUnmounted(()=>{Z==null||Z.destroy()}),()=>h$1("div",{class:"presentation-wrapper"},[h$1("div",{ref:j,class:["reveal","reveal-viewport"]},h$1("div",{class:"slides",innerHTML:`<section data-markdown data-separator="^\\r?\\n---\\r?\\n$" data-separator-vertical="^\\r?\\n--\\r?\\n$"><script type="text/template">${N.value}<\/script></section>`})),z.value?h$1(vt,{class:"reveal-loading",height:400}):null])}});const playground="";var i$1=defineComponent({name:"Playground",props:{title:{type:String,default:""},link:{type:String,required:!0}},setup(d){return()=>[h$1("div",{class:"playground-wrapper"},[h$1("div",{class:"title-wrapper"},[d.title?h$1("div",{class:"title"},decodeURIComponent(d.title)):null,h$1("div",{class:"actions"},[h$1("a",{class:"action",href:decodeURIComponent(d.link),target:"_blank",innerHTML:l$1})])]),h$1("div",{class:"playground-container"},h$1("iframe",{src:decodeURIComponent(d.link)}))])]}});const tabs="",v$1=useStorage("VUEPRESS_TAB_STORE",{});var S=defineComponent({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(d,{slots:R}){const N=ref(d.active),z=ref([]),j=()=>{if(d.tabId){const{title:sn,id:en=sn}=d.data[N.value];v$1.value[d.tabId]=en}},Z=(sn=N.value)=>{N.value=sn<z.value.length-1?sn+1:0,z.value[N.value].focus()},X=(sn=N.value)=>{N.value=sn>0?sn-1:z.value.length-1,z.value[N.value].focus()},Q=(sn,en)=>{sn.key===" "||sn.key==="Enter"?(sn.preventDefault(),N.value=en):sn.key==="ArrowRight"?(sn.preventDefault(),Z()):sn.key==="ArrowLeft"&&(sn.preventDefault(),X()),j()},nn=()=>{if(d.tabId){const sn=d.data.findIndex(({title:en,id:tn=en})=>v$1.value[d.tabId]===tn);if(sn!==-1)return sn}return d.active};return onMounted(()=>{N.value=nn(),watch(()=>v$1.value[d.tabId],(sn,en)=>{if(d.tabId&&sn!==en){const tn=d.data.findIndex(({title:an,id:on=an})=>on===sn);tn!==-1&&(N.value=tn)}})}),()=>d.data.length?h$1("div",{class:"tab-list"},[h$1("div",{class:"tab-list-nav",role:"tablist"},d.data.map(({title:sn},en)=>{const tn=en===N.value;return h$1("button",{ref:an=>{an&&(z.value[en]=an)},class:["tab-list-nav-item",{active:tn}],role:"tab","aria-controls":`tab-${d.id}-${en}`,"aria-selected":tn,onClick:()=>{N.value=en,j()},onKeydown:an=>Q(an,en)},sn)})),d.data.map(({title:sn,id:en=sn},tn)=>{var an;const on=tn===N.value;return h$1("div",{class:["tab-item",{active:on}],id:`tab-${d.id}-${tn}`,role:"tabpanel","aria-expanded":on},(an=R[`tab${tn}`])==null?void 0:an.call(R,{title:sn,value:en,isActive:on}))})]):null}});const tasklist="",katex="",clientConfig8=defineClientConfig({enhance:({app:d})=>{d.component("ChartJS",ChartJS),d.component("CodeTabs",S$2),Vt("CodeGroup",d)||d.component("CodeGroup",y$1),Vt("CodeGroupItem",d)||d.component("CodeGroupItem",c$3),d.component("CodeDemo",W),d.component("ECharts",ECharts),d.component("FlowChart",g$1),d.component("Mermaid",T$1),d.component("Presentation",S$1),d.component("Playground",i$1),d.component("Tabs",S),d.component("VuePlayground",defineAsyncComponent(()=>__vitePreload(()=>import("./VuePlayground-1836d057.js"),["assets/VuePlayground-1836d057.js","assets/framework-7d39e0da.js"])))}}),photoswipe="",photoSwipe="",T=".theme-hope-content :not(a) > img:not([no-view])",C$1={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},O=800,x={},A=d=>isString$1(d)?Array.from(document.querySelectorAll(d)):d.map(R=>Array.from(document.querySelectorAll(R))).flat(),p$1=d=>new Promise((R,N)=>{d.complete?R({src:d.src,width:d.naturalWidth,height:d.naturalHeight,alt:d.alt}):(d.onload=()=>R(p$1(d)),d.onerror=z=>N(z))}),H=()=>{const{isSupported:d,toggle:R}=useFullscreen(),N=ne(C$1),z=usePageData(),j=()=>Promise.all([__vitePreload(()=>import("./photoswipe.esm-6e6cbe40.js"),[]),nextTick().then(()=>new Promise(Z=>setTimeout(Z,O)).then(()=>A(T)))]).then(([{default:Z},X])=>{const Q='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>';X.forEach((nn,sn)=>{const en=()=>{const tn=Array(X.length).fill({html:Q}),an=new Z({dataSource:tn,preloaderDelay:0,...N.value,...x,index:sn});an.on("uiRegister",()=>{d&&an.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{R()}}),an.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(on,cn)=>{on.setAttribute("download",""),on.setAttribute("target","_blank"),on.setAttribute("rel","noopener"),cn.on("change",()=>{on.href=cn.currSlide.data.src})}})}),an.init(),X.forEach((on,cn)=>{p$1(on).then(pn=>{tn.splice(cn,1,pn),an.refreshSlideContent(cn)})})};nn.style.cursor="zoom-in",nn.addEventListener("click",()=>{en()}),nn.addEventListener("keypress",({key:tn})=>{tn==="Enter"&&en()})})});onMounted(()=>{j(),watch(()=>z.value.path,()=>j())})};var I=defineClientConfig({setup:()=>{H()}});const HopeIcon=d=>{const{icon:R=""}=d;return isLinkHttp(R)?h$1("img",{class:"icon",src:R,"no-view":""}):_e(R)?h$1("img",{class:"icon",src:withBase(R),"no-view":""}):h$1(resolveComponent("FontIcon"),d)};HopeIcon.displayName="HopeIcon";const useAutoLink=(d,R=!1)=>{const N=useRouter(),{fullPath:z,meta:j,name:Z}=Ht(N,encodeURI(d));return{text:!R&&j.s?j.s:j.t||d,link:Z==="404"?d:z,...j.i?{icon:j.i}:{}}},useThemeData=()=>useThemeData$1(),useThemeLocaleData=()=>useThemeLocaleData$1(),usePure=()=>computed(()=>Boolean(useThemeData().value.pure)),useWindowSize=()=>{const d=useThemeData(),R=ref(!1),N=ref(!1),z=()=>{R.value=window.innerWidth<=(d.value.mobileBreakPoint||719),N.value=window.innerWidth>=(d.value.wideBreakPoint||1440)};return onMounted(()=>{z(),useEventListener("resize",z,!1),useEventListener("orientationchange",z,!1)}),{isMobile:R,isWide:N}},useNavigate=()=>{const d=useRouter(),R=useRoute();return N=>{if(N)if(_e(N))R.path!==N&&d.push(N);else if(isLinkHttp(N)||isLinkMailto(N))window&&window.open(N);else{const z=R.path.slice(0,R.path.lastIndexOf("/"));d.push(`${z}/${encodeURI(N)}`)}}},usePageAuthor=()=>{const d=useThemeLocaleData(),R=usePageFrontmatter();return computed(()=>{const{author:N}=R.value;return N?De(N):N===!1?[]:De(d.value.author,!1)})},usePageCategory=()=>{const d=usePageFrontmatter();return computed(()=>xe(d.value.category).map(R=>{var N,z;return{name:R,path:((z=(N=inject(Symbol.for("categoryMap")))==null?void 0:N.value.map[R])==null?void 0:z.path)||""}}))},usePageTag=()=>{const d=usePageFrontmatter();return computed(()=>Ie(d.value.tag).map(R=>{var N,z;return{name:R,path:((z=(N=inject(Symbol.for("tagMap")))==null?void 0:N.value.map[R])==null?void 0:z.path)||""}}))},usePageDate=()=>{const d=usePageFrontmatter(),R=usePageData();return computed(()=>{const{date:N}=d.value;if(N)return ot(N);const{createdTime:z}=R.value.git||{};return z?ot(new Date(z)):null})},usePageInfo=()=>{const d=useThemeLocaleData(),R=usePageData(),N=usePageFrontmatter(),z=usePageAuthor(),j=usePageCategory(),Z=usePageTag(),X=usePageDate(),Q=computed(()=>({author:z.value,category:j.value,date:X.value,localizedDate:R.value.localizedDate,tag:Z.value,isOriginal:N.value.isOriginal||!1,readingTime:R.value.readingTime||null,pageview:"pageview"in N.value?N.value.pageview:!0})),nn=computed(()=>"pageInfo"in N.value?N.value.pageInfo:"pageInfo"in d.value?d.value.pageInfo:null);return{info:Q,items:nn}};let promise=null,promiseResolve=null;const scrollPromise={wait:()=>promise,pending:()=>{promise=new Promise(d=>promiseResolve=d)},resolve:()=>{promiseResolve==null||promiseResolve(),promise=null,promiseResolve=null}},useScrollPromise=()=>scrollPromise,footer="",PageFooter=defineComponent({name:"PageFooter",setup(){const d=usePageFrontmatter(),R=useThemeLocaleData(),N=usePageAuthor(),z=computed(()=>{const{copyright:X,footer:Q}=d.value;return Q!==!1&&Boolean(X||Q||R.value.displayFooter)}),j=computed(()=>{const{footer:X}=d.value;return X===!1?!1:isString$1(X)?X:R.value.footer||""}),Z=computed(()=>"copyright"in d.value?d.value.copyright:"copyright"in R.value?R.value.copyright:N.value.length?`Copyright © ${new Date().getFullYear()} ${N.value[0].name}`:!1);return()=>z.value?h$1("footer",{class:"footer-wrapper"},[j.value?h$1("div",{class:"footer",innerHTML:j.value}):null,Z.value?h$1("div",{class:"copyright",innerHTML:Z.value}):null]):null}}),AutoLink=defineComponent({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],setup(d,{attrs:R,emit:N,slots:z}){const j=useRoute(),Z=useSiteData(),X=toRef(d,"config"),Q=computed(()=>isLinkHttp(X.value.link)),nn=computed(()=>isLinkMailto(X.value.link)||isLinkTel(X.value.link)),sn=computed(()=>nn.value?void 0:X.value.target||(Q.value?"_blank":void 0)),en=computed(()=>sn.value==="_blank"),tn=computed(()=>!Q.value&&!nn.value&&!en.value),an=computed(()=>nn.value?void 0:X.value.rel||(en.value?"noopener noreferrer":void 0)),on=computed(()=>X.value.ariaLabel||X.value.text),cn=computed(()=>{if(d.exact)return!1;const ln=at(Z.value.locales);return ln.length?ln.every(un=>un!==X.value.link):X.value.link!=="/"}),pn=computed(()=>tn.value?X.value.activeMatch?new RegExp(X.value.activeMatch).test(j.path):cn.value?_t(j.path,X.value.link):j.path===X.value.link:!1);return()=>{var vn,bn,_n;const{text:ln,icon:un,link:rn}=X.value;return tn.value?h$1(RouterLink,{to:rn,"aria-label":on.value,...R,class:["nav-link",{active:pn.value},R.class],onFocusout:()=>N("focusout")},()=>{var In,Pn,mn;return((In=z.default)==null?void 0:In.call(z))||[((Pn=z.before)==null?void 0:Pn.call(z))||h$1(HopeIcon,{icon:un}),ln,(mn=z.after)==null?void 0:mn.call(z)]}):h$1("a",{href:rn,rel:an.value,target:sn.value,"aria-label":on.value,...R,class:["nav-link",R.class],onFocusout:()=>N("focusout")},((vn=z.default)==null?void 0:vn.call(z))||[((bn=z.before)==null?void 0:bn.call(z))||h$1(HopeIcon,{icon:un}),ln,d.noExternalLinkIcon?null:h$1(ExternalLinkIcon),(_n=z.after)==null?void 0:_n.call(z)])}}}),dropdownLink="",DropdownLink=defineComponent({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},setup(d,{slots:R}){const N=usePageData(),z=toRef(d,"config"),j=computed(()=>z.value.ariaLabel||z.value.text),Z=ref(!1);watch(()=>N.value.path,()=>{Z.value=!1});const X=Q=>{Q.detail===0&&(Z.value=!Z.value)};return()=>{var Q;return h$1("div",{class:["dropdown-wrapper",{open:Z.value}]},[h$1("button",{class:"dropdown-title",type:"button","aria-label":j.value,onClick:X},[((Q=R.title)==null?void 0:Q.call(R))||h$1("span",{class:"title"},[h$1(HopeIcon,{icon:z.value.icon}),d.config.text]),h$1("span",{class:"arrow"}),h$1("ul",{class:"nav-dropdown"},z.value.children.map((nn,sn)=>{const en=sn===z.value.children.length-1;return h$1("li",{class:"dropdown-item"},"children"in nn?[h$1("h4",{class:"dropdown-subtitle"},nn.link?h$1(AutoLink,{config:nn,onFocusout:()=>{nn.children.length===0&&en&&(Z.value=!1)}}):h$1("span",nn.text)),h$1("ul",{class:"dropdown-subitem-wrapper"},nn.children.map((tn,an)=>h$1("li",{class:"dropdown-subitem"},h$1(AutoLink,{config:tn,onFocusout:()=>{an===nn.children.length-1&&en&&(Z.value=!1)}}))))]:h$1(AutoLink,{config:nn,onFocusout:()=>{en&&(Z.value=!1)}}))}))])])}}}),I18nIcon=()=>h$1(G$1,{name:"i18n"},()=>[h$1("path",{d:"M379.392 460.8 494.08 575.488l-42.496 102.4L307.2 532.48 138.24 701.44l-71.68-72.704L234.496 460.8l-45.056-45.056c-27.136-27.136-51.2-66.56-66.56-108.544h112.64c7.68 14.336 16.896 27.136 26.112 35.84l45.568 46.08 45.056-45.056C382.976 312.32 409.6 247.808 409.6 204.8H0V102.4h256V0h102.4v102.4h256v102.4H512c0 70.144-37.888 161.28-87.04 210.944L378.88 460.8zM576 870.4 512 1024H409.6l256-614.4H768l256 614.4H921.6l-64-153.6H576zM618.496 768h196.608L716.8 532.48 618.496 768z"})]);I18nIcon.displayName="I18nIcon";const resolveNavbarItem=(d,R="")=>isString$1(d)?useAutoLink(`${R}${d}`):"children"in d?{...d,...d.link&&!isLinkExternal(d.link)?useAutoLink(`${R}${d.link}`):{},children:d.children.map(N=>resolveNavbarItem(N,`${R}${d.prefix||""}`))}:{...d,link:isLinkExternal(d.link)?d.link:useAutoLink(`${R}${d.link}`).link},useNavbarConfig=()=>computed(()=>(useThemeLocaleData().value.navbar||[]).map(d=>resolveNavbarItem(d))),useNavbarLanguageDropdown=()=>{const d=useRouter(),R=useRouteLocale(),N=useSiteLocaleData(),z=useThemeData(),j=useThemeLocaleData();return computed(()=>{const Z=at(N.value.locales);if(Z.length<2)return null;const{path:X,fullPath:Q}=d.currentRoute.value,{navbarLocales:nn}=j.value;return{text:"",ariaLabel:nn==null?void 0:nn.selectLangAriaLabel,children:Z.map(en=>{var ln,un,rn;const tn=((ln=N.value.locales)==null?void 0:ln[en])??{},an=((un=z.value.locales)==null?void 0:un[en])??{},on=tn.lang||"",cn=((rn=an.navbarLocales)==null?void 0:rn.langName)??on;let pn;if(on===N.value.lang)pn=X;else{const vn=X.replace(R.value,en);pn=d.getRoutes().some(bn=>bn.path===vn)?Q.replace(X,vn):an.home??en}return{text:cn,link:pn}})}})},useNavbarRepo=()=>{const d=useThemeLocaleData(),R=computed(()=>d.value.repo||null),N=computed(()=>R.value?Le(R.value):null),z=computed(()=>R.value?Ne(R.value):null),j=computed(()=>N.value?d.value.repoLabel??(z.value===null?"Source":z.value):null);return computed(()=>!N.value||!j.value||d.value.repoDisplay===!1?null:{type:z.value||"Source",label:j.value,link:N.value})};defineComponent({name:"LanguageDropdown",setup(){const d=useNavbarLanguageDropdown();return()=>d.value?h$1("div",{class:"nav-item"},h$1(DropdownLink,{class:"i18n-dropdown",config:d.value},{title:()=>{var R;return h$1(I18nIcon,{"aria-label":(R=d.value)==null?void 0:R.ariaLabel,style:{width:"1rem",height:"1rem",verticalAlign:"middle"}})}})):null}});const navScreenDropdown="",NavScreenDropdown=defineComponent({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(d){const R=usePageData(),N=toRef(d,"config"),z=computed(()=>N.value.ariaLabel||N.value.text),j=ref(!1);watch(()=>R.value.path,()=>{j.value=!1});const Z=(X,Q)=>Q[Q.length-1]===X;return()=>[h$1("button",{class:["nav-screen-dropdown-title",{active:j.value}],type:"button","aria-label":z.value,onClick:()=>{j.value=!j.value}},[h$1("span",{class:"title"},[h$1(HopeIcon,{icon:N.value.icon}),d.config.text]),h$1("span",{class:["arrow",j.value?"down":"end"]})]),h$1("ul",{class:["nav-screen-dropdown",{hide:!j.value}]},N.value.children.map(X=>h$1("li",{class:"dropdown-item"},"children"in X?[h$1("h4",{class:"dropdown-subtitle"},X.link?h$1(AutoLink,{config:X,onFocusout:()=>{Z(X,N.value.children)&&X.children.length===0&&(j.value=!1)}}):h$1("span",X.text)),h$1("ul",{class:"dropdown-subitem-wrapper"},X.children.map(Q=>h$1("li",{class:"dropdown-subitem"},h$1(AutoLink,{config:Q,onFocusout:()=>{Z(Q,X.children)&&Z(X,N.value.children)&&(j.value=!1)}}))))]:h$1(AutoLink,{config:X,onFocusout:()=>{Z(X,N.value.children)&&(j.value=!1)}}))))]}}),navScreenLinks="",NavScreenLinks=defineComponent({name:"NavScreenLinks",setup(){const d=useNavbarConfig();return()=>d.value.length?h$1("nav",{class:"nav-screen-links"},d.value.map(R=>h$1("div",{class:"navbar-links-item"},"children"in R?h$1(NavScreenDropdown,{config:R}):h$1(AutoLink,{config:R})))):null}}),DarkIcon=()=>h$1(G$1,{name:"dark"},()=>h$1("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));DarkIcon.displayName="DarkIcon";const LightIcon=()=>h$1(G$1,{name:"light"},()=>h$1("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));LightIcon.displayName="LightIcon";const AutoIcon=()=>h$1(G$1,{name:"auto"},()=>h$1("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));AutoIcon.displayName="AutoIcon";const EnterFullScreenIcon=()=>h$1(G$1,{name:"enter-fullscreen"},()=>h$1("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));EnterFullScreenIcon.displayName="EnterFullScreenIcon";const CancelFullScreenIcon=()=>h$1(G$1,{name:"cancel-fullscreen"},()=>h$1("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));CancelFullScreenIcon.displayName="CancelFullScreenIcon";const OutlookIcon=()=>h$1(G$1,{name:"outlook"},()=>[h$1("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);OutlookIcon.displayName="OutlookIcon";const darkModeSymbol=Symbol.for("darkMode"),useDarkmode=()=>{const d=inject(darkModeSymbol);if(!d)throw new Error("useDarkmode() is called without provider.");return d},injectDarkmode=d=>{const R=useThemeData(),N=usePreferredDark(),z=useStorage("vuepress-theme-hope-scheme","auto"),j=computed(()=>R.value.darkmode||"switch"),Z=computed(()=>{const Q=j.value;return Q==="disable"?!1:Q==="enable"?!0:Q==="auto"?N.value:Q==="toggle"?z.value==="dark":z.value==="dark"||z.value==="auto"&&N.value}),X=computed(()=>{const Q=j.value;return Q==="switch"||Q==="toggle"});d.provide(darkModeSymbol,{canToggle:X,config:j,isDarkmode:Z,status:z}),Object.defineProperties(d.config.globalProperties,{$isDarkmode:{get:()=>Z.value}})},setupDarkmode=()=>{const{isDarkmode:d}=useDarkmode(),R=(N=d.value)=>document.documentElement.setAttribute("data-theme",N?"dark":"light");onMounted(()=>{watch(d,R,{immediate:!0})})},appearanceSwitch="",AppearanceSwitch=defineComponent({name:"AppearanceSwitch",setup(){const{config:d,status:R}=useDarkmode(),N=()=>{d.value==="switch"?R.value={light:"dark",dark:"auto",auto:"light"}[R.value]:R.value=R.value==="light"?"dark":"light"};return()=>h$1("button",{id:"appearance-switch",onClick:()=>N()},[h$1(AutoIcon,{style:{display:R.value==="auto"?"block":"none"}}),h$1(DarkIcon,{style:{display:R.value==="dark"?"block":"none"}}),h$1(LightIcon,{style:{display:R.value==="light"?"block":"none"}})])}}),AppearanceMode=defineComponent({name:"AppearanceMode",setup(){const d=useThemeLocaleData(),{canToggle:R}=useDarkmode(),N=computed(()=>d.value.outlookLocales.darkmode);return()=>R.value?h$1("div",{class:"appearance-wrapper"},[h$1("label",{class:"appearance-title",for:"appearance-switch"},N.value),h$1(AppearanceSwitch)]):null}}),themeColorPicker="",ThemeColorPicker=defineComponent({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(d){const R=(N="")=>{const z=document.documentElement.classList,j=at(d.themeColor).map(Z=>`theme-${Z}`);if(!N){localStorage.removeItem("theme"),z.remove(...j);return}z.remove(...j.filter(Z=>Z!==`theme-${N}`)),z.add(`theme-${N}`),localStorage.setItem("theme",N)};return onMounted(()=>{const N=localStorage.getItem("theme");N&&R(N)}),()=>h$1("ul",{id:"theme-color-picker"},[h$1("li",h$1("span",{class:"theme-color",onClick:()=>R()})),...Tt(d.themeColor).map(([N,z])=>h$1("li",h$1("span",{style:{background:z},onClick:()=>R(N)})))])}}),ThemeColor=defineComponent({name:"ThemeColor",setup(){const d=useThemeData(),R=useThemeLocaleData(),N=computed(()=>R.value.outlookLocales.themeColor),z=computed(()=>{const{themeColor:j}=d.value;return j===!1?null:j});return()=>z.value?h$1("div",{class:"theme-color-wrapper"},[h$1("label",{class:"theme-color-title",for:"theme-color-picker"},N.value),h$1(ThemeColorPicker,{themeColor:z.value})]):null}}),toggleFullScreenButton="",ToggleFullScreenButton=defineComponent({name:"ToggleFullScreenButton",setup(){const d=useThemeLocaleData(),{isSupported:R,isFullscreen:N,toggle:z}=useFullscreen(),j=computed(()=>d.value.outlookLocales.fullscreen);return()=>R?h$1("div",{class:"full-screen-wrapper"},[h$1("label",{class:"full-screen-title",for:"full-screen-switch"},j.value),h$1("button",{class:"full-screen",id:"full-screen-switch",ariaPressed:N.value,onClick:()=>z()},N.value?h$1(CancelFullScreenIcon):h$1(EnterFullScreenIcon))]):null}}),OutlookSettings=defineComponent({name:"OutlookSettings",setup(){const d=useThemeData(),R=usePure(),N=computed(()=>!R.value&&Boolean(d.value.themeColor)),z=computed(()=>!R.value&&d.value.fullscreen);return()=>h$1(ClientOnly,()=>[N.value?h$1(ThemeColor):null,h$1(AppearanceMode),z.value?h$1(ToggleFullScreenButton):null])}}),navScreen="",NavScreen=defineComponent({name:"NavScreen",props:{show:Boolean},emits:["close"],setup(d,{emit:R,slots:N}){const z=usePageData(),{isMobile:j}=useWindowSize(),Z=ref(),X=useScrollLock(Z);return onMounted(()=>{Z.value=document.body,watch(j,Q=>{!Q&&d.show&&(X.value=!1,R("close"))}),watch(()=>z.value.path,()=>{X.value=!1,R("close")})}),onUnmounted(()=>{X.value=!1}),()=>h$1(Transition,{name:"fade",onEnter:()=>{X.value=!0},onAfterLeave:()=>{X.value=!1}},()=>{var Q,nn;return d.show?h$1("div",{id:"nav-screen"},h$1("div",{class:"container"},[(Q=N.before)==null?void 0:Q.call(N),h$1(NavScreenLinks),h$1("div",{class:"outlook-wrapper"},h$1(OutlookSettings)),(nn=N.after)==null?void 0:nn.call(N)])):null})}}),navbarBrand="",NavbarBrand=defineComponent({name:"NavbarBrand",setup(){const d=useRouteLocale(),R=useSiteLocaleData(),N=useThemeLocaleData(),z=computed(()=>N.value.home||d.value),j=computed(()=>R.value.title),Z=computed(()=>N.value.logo?withBase(N.value.logo):null),X=computed(()=>N.value.logoDark?withBase(N.value.logoDark):null);return()=>h$1(RouterLink,{to:z.value,class:"brand"},()=>[Z.value?h$1("img",{class:["logo",{light:Boolean(X.value)}],src:Z.value,alt:j.value}):null,X.value?h$1("img",{class:["logo dark"],src:X.value,alt:j.value}):null,j.value?h$1("span",{class:["site-name",{"hide-in-pad":Z.value&&N.value.hideSiteNameOnMobile!==!1}]},j.value):null])}}),navbarLinks="",NavbarLinks=defineComponent({name:"NavbarLinks",setup(){const d=useNavbarConfig();return()=>d.value.length?h$1("nav",{class:"nav-links"},[...d.value.map(R=>h$1("div",{class:"nav-item hide-in-mobile"},"children"in R?h$1(DropdownLink,{config:R}):h$1(AutoLink,{config:R})))]):null}}),repoLink="",RepoLink=defineComponent({name:"RepoLink",components:{BitbucketIcon:bt,GiteeIcon:yt,GitHubIcon:gt,GitlabIcon:$t,SourceIcon:wt},setup(){const d=useNavbarRepo();return()=>d.value?h$1("div",{class:"nav-item"},h$1("a",{class:"repo-link",href:d.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":d.value.label},h$1(resolveComponent(`${d.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}}),toggleNavbarButton="",ToggleNavbarButton=({active:d=!1},{emit:R})=>h$1("button",{class:["toggle-navbar-button",{"is-active":d}],"aria-label":"Toggle Navbar","aria-expanded":d,"aria-controls":"nav-screen",onClick:()=>R("toggle")},h$1("span",{class:"button-container"},[h$1("span",{class:"button-top"}),h$1("span",{class:"button-middle"}),h$1("span",{class:"button-bottom"})]));ToggleNavbarButton.displayName="ToggleNavbarButton";const toggleSidebarButton="",ToggleSidebarButton=(d,{emit:R})=>h$1("button",{class:"toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>R("toggle")},h$1("span",{class:"icon"}));ToggleSidebarButton.displayName="ToggleSidebarButton";ToggleSidebarButton.emits=["toggle"];const outlookButton="",OutlookButton=defineComponent({name:"OutlookButton",setup(){const{isSupported:d}=useFullscreen(),R=useThemeData(),N=usePure(),z=usePageData(),{canToggle:j}=useDarkmode(),Z=ref(!1),X=computed(()=>!N.value&&Boolean(R.value.themeColor)),Q=computed(()=>!N.value&&R.value.fullscreen&&d);return watch(()=>z.value.path,()=>{Z.value=!1}),()=>j.value||Q.value||X.value?h$1("div",{class:"nav-item hide-in-mobile"},j.value&&!Q.value&&!X.value?h$1(AppearanceSwitch):Q.value&&!j.value&&!X.value?h$1(ToggleFullScreenButton):h$1("button",{class:["outlook-button",{open:Z.value}],tabindex:"-1",ariaHidden:!0},[h$1(OutlookIcon),h$1("div",{class:"outlook-dropdown"},h$1(OutlookSettings))])):null}}),navbar="",Navbar=defineComponent({name:"NavBar",emits:["toggleSidebar"],setup(d,{emit:R,slots:N}){const z=useThemeLocaleData(),{isMobile:j}=useWindowSize(),Z=ref(!1),X=computed(()=>{const{navbarAutoHide:nn="mobile"}=z.value;return nn!=="none"&&(nn==="always"||j.value)}),Q=computed(()=>z.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]});return()=>{var sn,en,tn,an,on,cn;const nn={Brand:h$1(NavbarBrand),Language:null,Links:h$1(NavbarLinks),Repo:h$1(RepoLink),Outlook:h$1(OutlookButton),Search:Vt("Docsearch")?h$1(resolveComponent("Docsearch")):Vt("SearchBox")?h$1(resolveComponent("SearchBox")):Vt("SearchBox")?h$1(resolveComponent("SearchBox")):null};return[h$1("header",{class:["navbar",{"auto-hide":X.value,"hide-icon":z.value.navbarIcon===!1}],id:"navbar"},[h$1("div",{class:"navbar-start"},[h$1(ToggleSidebarButton,{onToggle:()=>{Z.value&&(Z.value=!1),R("toggleSidebar")}}),(sn=N.startBefore)==null?void 0:sn.call(N),...(Q.value.start||[]).map(pn=>nn[pn]),(en=N.startAfter)==null?void 0:en.call(N)]),h$1("div",{class:"navbar-center"},[(tn=N.centerBefore)==null?void 0:tn.call(N),...(Q.value.center||[]).map(pn=>nn[pn]),(an=N.centerAfter)==null?void 0:an.call(N)]),h$1("div",{class:"navbar-end"},[(on=N.endBefore)==null?void 0:on.call(N),...(Q.value.end||[]).map(pn=>nn[pn]),(cn=N.endAfter)==null?void 0:cn.call(N),h$1(ToggleNavbarButton,{active:Z.value,onToggle:()=>{Z.value=!Z.value}})])]),h$1(NavScreen,{show:Z.value,onClose:()=>{Z.value=!1}},{before:()=>{var pn;return(pn=N.screenTop)==null?void 0:pn.call(N)},after:()=>{var pn;return(pn=N.screenBottom)==null?void 0:pn.call(N)}})]}}}),isActiveSidebarItem=(d,R,N=!1)=>"activeMatch"in R?new RegExp(R.activeMatch).test(d.path):Ce(d,R.link)?!0:R.children&&!N?R.children.some(z=>isActiveSidebarItem(d,z)):!1,isMatchedSidebarItem=(d,R)=>R.type==="group"?R.children.some(N=>N.type==="group"?isMatchedSidebarItem(d,N):N.type==="page"&&isActiveSidebarItem(d,N,!0))||"prefix"in R&&Ce(d,R.prefix):!1,renderItem=(d,R)=>d.link?h$1(AutoLink,{...R,config:d}):h$1("p",R,[h$1(HopeIcon,{icon:d.icon}),d.text]),renderChildren$1=d=>{const R=useRoute();return d?h$1("ul",{class:"sidebar-sub-headers"},d.map(N=>{const z=isActiveSidebarItem(R,N,!0);return h$1("li",{class:"sidebar-sub-header"},[renderItem(N,{class:["sidebar-link","heading",{active:z}]}),renderChildren$1(N.children)])})):null},sidebarData={"/apue/":["存储器","第八章 进程控制","第二十一章 网络打印机通信","第二章","第九章 进程关系","第六章 系统数据文件和信息","第七章 进程环境","第三章 文件IO","第十八章 终端IO","第十二章 线程控制","第十六章 网络IPC 套接字","第十七章 高级进程间通信","第十三章 守护进程","第十四章 高级IO","第十五章 进程间通信","第十一章 线程","第十章 信号","第四章 文件目录","第五章 标准IO","第一章","二叉树","IPC","守护进程","套接字","网络模型","执行shell的三种方式","apue","c语言指针数组","c primary","openssl-ca","CRLF","gcc","git","http code","K8s","Linux初级指令","make-apue","mysql字符集","nginx配置","signal","stdio","umask","unix历史和标准"],"/linux/":["内存耗用","reuseport","find","linux命令杂项","coredump",{text:"Malloc",prefix:"malloc/",collapsible:!0,children:["tcmalloc"]},{text:"Mem",prefix:"mem/",collapsible:!0,children:["cgroup"]},"swap","tcpdump",{text:"Tcpip",prefix:"tcpip/",collapsible:!0,children:["协议栈","tcp协议滑动窗口"]},{text:"Ubuntu",prefix:"ubuntu/",collapsible:!0,children:["时区"]},"vim"],"/algorithms/":["常见算法"],"/data-structure/":["大纲"],"/opreating-system/":["操作系统"],"/tech/":[{text:"Artificial Intelligence",prefix:"artificial-intelligence/",collapsible:!0,children:["卡尔曼滤波"]},{text:"Bilibili",prefix:"bilibili/",collapsible:!0,children:["服务发现","日志",{text:"Kv",prefix:"kv/",collapsible:!0,children:["B站搜推kv分享","lsm-tree"]}]},{text:"Database",prefix:"database/",collapsible:!0,children:["数据库原理","lock","mysql"]},{text:"Docker",prefix:"docker/",collapsible:!0,children:["docker","iptables","kubelet","linux隧道","linux-namespace"]},{text:"Es",prefix:"es/",collapsible:!0,children:["es搜索"]},{text:"Nginx",prefix:"nginx/",collapsible:!0,children:["nginx"]},{text:"Protocol",prefix:"protocol/",collapsible:!0,children:["gossip"]},{text:"Windows",prefix:"windows/",collapsible:!0,children:["wsl"]}],"/ddd/":["DDD"],"/technical-term/":["概念","杂记"],"/systemc-performance/":[],"/other/":["正则",{text:"Interview",prefix:"interview/",collapsible:!0,children:["面试"]},"testpic"],"/todo/":["毛老师推荐","todo","feature"],"/go/":["版本升级","闭包","调度","基础","概念","毛剑","相关命令","杂项",{text:"Asm",prefix:"asm/",collapsible:!0,children:["基础","monkey patch","plan9"]},"gc","gc 性能优化","go tool compile","gpm","mod",{text:"Profiles",prefix:"profiles/",collapsible:!0,children:["dlv 案例","dlv 命令","block profiling","go profiling tracing observability","goroutine profiling","pprof tool and format","stack traces"]},"protoc","test"],"/source-code/":["",{text:"Bilibili Kratos",prefix:"bilibili-kratos/",collapsible:!0,children:["cache",{text:"Context",prefix:"context/",collapsible:!0,children:["ctx-kv","ctx-time"]},{text:"Grpc",prefix:"grpc/",collapsible:!0,children:["服务发现","拦截器","grpc"]},"io",{text:"Library",prefix:"library/",collapsible:!0,children:[{text:"Cache",prefix:"cache/",collapsible:!0,children:[{text:"Memcache",prefix:"memcache/",collapsible:!0,children:["ascii_conn","conn","mc","memcache","pool_conn"]},"redis"]},{text:"Container",prefix:"container/",collapsible:!0,children:["group"]},{text:"Net",prefix:"net/",collapsible:!0,children:[{text:"Http",prefix:"http/",collapsible:!0,children:["blademaster"]},{text:"Netutil",prefix:"netutil/",collapsible:!0,children:["breaker"]}]},{text:"Rate",prefix:"rate/",collapsible:!0,children:[{text:"Limit",prefix:"limit/",collapsible:!0,children:["bbr","token bucket"]}]}]},"protoc"]},{text:"Go Standard Lib",prefix:"go-standard-lib/",collapsible:!0,children:["bytes",{text:"Channel",prefix:"channel/",collapsible:!0,children:["chan"]},"container",{text:"Context",prefix:"context/",collapsible:!0,children:["ctx"]},{text:"Io",prefix:"io/",collapsible:!0,children:["buffer","bufio","io","ioutil"]},"net.http","sort","strconv","strings",{text:"Sync",prefix:"sync/",collapsible:!0,children:["pool"]}]},{text:"go-grpc",prefix:"grpc/",collapsible:!0,children:["","grpc库"]}]},resolvePrefix=(d="",R="")=>_e(R)?R:`${ensureEndingSlash(d)}${R}`,headerToSidebarItem=(d,R)=>{const N=usePageData();return{type:"heading",text:d.title,link:`${N.value.path}#${d.slug}`,children:headersToSidebarItemChildren(d.children,R)}},headersToSidebarItemChildren=(d,R)=>R>0?d.map(N=>headerToSidebarItem(N,R-1)):[],resolveHeadingSidebarItems=d=>{const R=usePageData();return headersToSidebarItemChildren(R.value.headers,d)},resolveArraySidebarItems=(d,R,N="")=>{const z=usePageData(),j=(Z,X=N)=>{var nn;const Q=isString$1(Z)?useAutoLink(resolvePrefix(X,Z)):Z.link?{...Z,...isLinkExternal(Z.link)?{}:{link:useAutoLink(resolvePrefix(X,Z.link)).link}}:Z;if("children"in Q){const sn=resolvePrefix(X,Q.prefix),en=Q.children==="structure"?sidebarData[sn]:Q.children;return{type:"group",...Q,prefix:sn,children:en.map(tn=>j(tn,sn))}}return{type:"page",...Q,children:Q.link===z.value.path?headersToSidebarItemChildren(((nn=z.value.headers[0])==null?void 0:nn.level)===1?z.value.headers[0].children:z.value.headers,R):[]}};return d.map(Z=>j(Z))},resolveMultiSidebarItems=(d,R)=>{const N=usePageData(),z=at(d).sort((j,Z)=>Z.length-j.length);for(const j of z)if(_t(decodeURI(N.value.path),j)){const Z=d[j];return Z?resolveArraySidebarItems(Z==="structure"?sidebarData[j]:Z==="heading"?resolveHeadingSidebarItems(R):Z,R,j):[]}return console.warn(`${N.value.path} is missing sidebar config.`),[]},resolveSidebarItems=()=>{const d=useRouteLocale(),R=usePageFrontmatter(),N=useThemeLocaleData(),z=R.value.home?!1:R.value.sidebar??N.value.sidebar??"structure",j=R.value.headerDepth??N.value.headerDepth??2;return z===!1?[]:z==="heading"?resolveHeadingSidebarItems(j):z==="structure"?resolveArraySidebarItems(sidebarData[d.value],j,d.value):isArray(z)?resolveArraySidebarItems(z,j):isPlainObject(z)?resolveMultiSidebarItems(z,j):[]},sidebarItemsSymbol=Symbol.for("sidebarItems"),setupSidebarItems=()=>{const d=computed(()=>resolveSidebarItems());provide(sidebarItemsSymbol,d)},useSidebarItems=()=>{const d=inject(sidebarItemsSymbol);if(!d)throw new Error("useSidebarItems() is called without provider.");return d},sidebarChild="",SidebarChild=defineComponent({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(d){const R=useRoute();return()=>[renderItem(d.config,{class:["sidebar-link",`sidebar-${d.config.type}`,{active:isActiveSidebarItem(R,d.config,!0)}],exact:!0}),renderChildren$1(d.config.children)]}}),sidebarGroup="",SidebarGroup=defineComponent({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(d,{emit:R}){const N=useRoute(),z=computed(()=>isActiveSidebarItem(N,d.config)),j=computed(()=>isActiveSidebarItem(N,d.config,!0));return()=>{const{collapsible:Z,children:X=[],icon:Q,prefix:nn,link:sn,text:en}=d.config;return h$1("section",{class:"sidebar-group"},[h$1(Z?"button":"p",{class:["sidebar-heading",{clickable:Z||sn,exact:j.value,active:z.value}],...Z?{onClick:()=>R("toggle"),onKeydown:tn=>{tn.key==="Enter"&&R("toggle")}}:{}},[h$1(HopeIcon,{icon:Q}),sn?h$1(RouterLink,{to:sn,class:"title"},()=>en):h$1("span",{class:"title"},en),Z?h$1("span",{class:["arrow",d.open?"down":"end"]}):null]),d.open||!Z?h$1(SidebarLinks,{key:nn,config:X}):null])}}}),sidebarLinks="",SidebarLinks=defineComponent({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(d){const R=useRoute(),N=ref(-1),z=j=>{N.value=j===N.value?-1:j};return watch(()=>R.path,()=>{const j=d.config.findIndex(Z=>isMatchedSidebarItem(R,Z));N.value=j},{immediate:!0,flush:"post"}),()=>h$1("ul",{class:"sidebar-links"},d.config.map((j,Z)=>h$1("li",j.type==="group"?h$1(SidebarGroup,{config:j,open:Z===N.value,onToggle:()=>z(Z)}):h$1(SidebarChild,{config:j}))))}}),sidebar="",Sidebar=defineComponent({name:"SideBar",setup(d,{slots:R}){const N=useRoute(),z=useThemeLocaleData(),j=useSidebarItems(),Z=ref();return onMounted(()=>{watch(()=>N.hash,X=>{const Q=document.querySelector(`.sidebar a.sidebar-link[href="${N.path}${X}"]`);if(!Q)return;const{top:nn,height:sn}=Z.value.getBoundingClientRect(),{top:en,height:tn}=Q.getBoundingClientRect();en<nn?Q.scrollIntoView(!0):en+tn>nn+sn&&Q.scrollIntoView(!1)})}),()=>{var X,Q,nn;return h$1("aside",{class:["sidebar",{"hide-icon":z.value.sidebarIcon===!1}],id:"sidebar",ref:Z},[(X=R.top)==null?void 0:X.call(R),((Q=R.default)==null?void 0:Q.call(R))||h$1(SidebarLinks,{config:j.value}),(nn=R.bottom)==null?void 0:nn.call(R)])}}}),common="",CommonWrapper=defineComponent({name:"CommonWrapper",props:{noNavbar:Boolean,noSidebar:Boolean},setup(d,{slots:R}){const N=useRouter(),z=usePageData(),j=usePageFrontmatter(),Z=useThemeLocaleData(),{isMobile:X,isWide:Q}=useWindowSize(),[nn,sn]=useToggle(!1),[en,tn]=useToggle(!1),an=useSidebarItems(),on=ref(),cn=useScrollLock(on),pn=ref(!1),ln=computed(()=>d.noNavbar||j.value.navbar===!1||Z.value.navbar===!1?!1:Boolean(z.value.title||Z.value.logo||Z.value.repo||Z.value.navbar)),un=computed(()=>d.noSidebar?!1:j.value.sidebar!==!1&&an.value.length!==0&&!j.value.home),rn={x:0,y:0},vn=mn=>{rn.x=mn.changedTouches[0].clientX,rn.y=mn.changedTouches[0].clientY},bn=mn=>{const dn=mn.changedTouches[0].clientX-rn.x,yn=mn.changedTouches[0].clientY-rn.y;Math.abs(dn)>Math.abs(yn)*1.5&&Math.abs(dn)>40&&(dn>0&&rn.x<=80?sn(!0):sn(!1))},_n=computed(()=>j.value.home?!1:j.value.toc||Z.value.toc!==!1&&j.value.toc!==!1),In=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let Pn=0;return useEventListener("scroll",useThrottleFn(()=>{const mn=In();mn<=58||mn<Pn?pn.value=!1:Pn+200<mn&&!nn.value&&(pn.value=!0),Pn=mn},300,!0)),watch(nn,mn=>{cn.value=mn}),watch(X,mn=>{mn||sn(!1)}),onMounted(()=>{on.value=document.body;const mn=N.afterEach(()=>{sn(!1)});onUnmounted(()=>{mn()})}),()=>h$1(Vt("GlobalEncrypt")?resolveComponent("GlobalEncrypt"):Rt,()=>{var mn;return h$1("div",{class:["theme-container",{"no-navbar":!ln.value,"no-sidebar":!un.value&&!(R.sidebar||R.sidebarTop||R.sidebarBottom),"has-toc":_n.value,"hide-navbar":pn.value,"sidebar-collapsed":!X.value&&!Q.value&&en.value,"sidebar-open":X.value&&nn.value},j.value.containerClass||""],onTouchStart:vn,onTouchEnd:bn},[ln.value?h$1(Navbar,{onToggleSidebar:()=>sn()},{startBefore:()=>{var dn;return(dn=R.navbarStartBefore)==null?void 0:dn.call(R)},startAfter:()=>{var dn;return(dn=R.navbarStartAfter)==null?void 0:dn.call(R)},centerBefore:()=>{var dn;return(dn=R.navbarCenterBefore)==null?void 0:dn.call(R)},centerAfter:()=>{var dn;return(dn=R.navbarCenterAfter)==null?void 0:dn.call(R)},endBefore:()=>{var dn;return(dn=R.navbarEndBefore)==null?void 0:dn.call(R)},endAfter:()=>{var dn;return(dn=R.navbarEndAfter)==null?void 0:dn.call(R)},screenTop:()=>{var dn;return(dn=R.navScreenTop)==null?void 0:dn.call(R)},screenBottom:()=>{var dn;return(dn=R.navScreenBottom)==null?void 0:dn.call(R)}}):null,h$1(Transition,{name:"fade"},()=>nn.value?h$1("div",{class:"sidebar-mask",onClick:()=>sn(!1)}):null),h$1(Transition,{name:"fade"},()=>X.value?null:h$1("div",{class:"toggle-sidebar-wrapper",onClick:()=>tn()},h$1("span",{class:["arrow",en.value?"end":"start"]}))),h$1(Sidebar,{},{...R.sidebar?{default:()=>{var dn;return(dn=R.sidebar)==null?void 0:dn.call(R)}}:{},top:()=>{var dn;return(dn=R.sidebarTop)==null?void 0:dn.call(R)},bottom:()=>{var dn;return(dn=R.sidebarBottom)==null?void 0:dn.call(R)}}),(mn=R.default)==null?void 0:mn.call(R),h$1(PageFooter)])})}}),featurePanel="",FeaturePanel=defineComponent({name:"FeaturePanel",props:{items:{type:Object,default:()=>[]},header:{type:String,default:""}},setup(d){return()=>h$1("div",{class:"feature-panel"},[d.header?h$1("h2",{class:"feature-header"},d.header):null,d.items.length?h$1("div",{class:"feature-wrapper"},d.items.map(R=>{const N=[h$1("h3",[h$1(HopeIcon,{icon:R.icon}),h$1("span",{innerHTML:R.title})]),h$1("p",{innerHTML:R.details})];return R.link?isLinkExternal(R.link)?h$1("a",{class:"feature-item link",href:R.link,role:"navigation","aria-label":R.title,target:"_blank"},N):h$1(RouterLink,{class:"feature-item link",to:R.link,role:"navigation","aria-label":R.title},()=>N):h$1("div",{class:"feature-item"},N)})):null])}}),DropTransition=defineComponent({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},setup(d,{slots:R}){const N=j=>{j.style.transition=`transform ${d.duration}s ease-in-out ${d.delay}s, opacity ${d.duration}s ease-in-out ${d.delay}s`,j.style.transform="translateY(-20px)",j.style.opacity="0"},z=j=>{j.style.transform="translateY(0)",j.style.opacity="1"};return()=>h$1(d.type==="single"?Transition:TransitionGroup,{name:"drop",appear:d.appear,onAppear:N,onAfterAppear:z,onEnter:N,onAfterEnter:z,onBeforeLeave:N},()=>{var j;return(j=R.default)==null?void 0:j.call(R)})}}),heroInfo="",HeroInfo=defineComponent({name:"HeroInfo",setup(d,{slots:R}){const N=usePageFrontmatter(),z=useSiteLocaleData(),j=computed(()=>N.value.heroText===!1?!1:N.value.heroText||z.value.title||"Hello"),Z=computed(()=>N.value.tagline===!1?!1:N.value.tagline||z.value.description||"Welcome to your VuePress site"),X=computed(()=>N.value.heroImage?withBase(N.value.heroImage):null),Q=computed(()=>N.value.heroImageDark?withBase(N.value.heroImageDark):null),nn=computed(()=>N.value.heroAlt||j.value||"hero"),sn=computed(()=>N.value.actions??[]);return()=>{var en,tn;return h$1("header",{class:"hero-info-wrapper"},[((en=R.heroImage)==null?void 0:en.call(R))||h$1(DropTransition,{appear:!0,type:"group"},()=>[X.value?h$1("img",{key:"light",class:{light:Q.value},src:X.value,alt:nn.value}):null,Q.value?h$1("img",{key:"dark",class:"dark",src:Q.value,alt:nn.value}):null]),((tn=R.heroInfo)==null?void 0:tn.call(R))||h$1("div",{class:"hero-info"},[j.value?h$1(DropTransition,{appear:!0,delay:.04},()=>h$1("h1",{id:"main-title"},j.value)):null,Z.value?h$1(DropTransition,{appear:!0,delay:.08},()=>h$1("p",{class:"description"},Z.value)):null,sn.value.length?h$1(DropTransition,{appear:!0,delay:.12},()=>h$1("p",{class:"actions"},sn.value.map(an=>h$1(AutoLink,{class:["action-button",an.type||"default"],config:an,noExternalLinkIcon:!0})))):null])])}}}),MarkdownContent=({custom:d})=>h$1(Content,{class:["theme-hope-content",{custom:d}]});MarkdownContent.displayName="MarkdownContent";MarkdownContent.props={custom:Boolean};const homePage="",HomePage=defineComponent({name:"HopePage",setup(d,{slots:R}){const N=usePure(),z=usePageFrontmatter(),j=computed(()=>{const{features:Z}=z.value;return isArray(Z)?Z.some(X=>!("items"in X))?[{items:Z}]:Z:[]});return()=>{var Z,X,Q;return h$1("main",{class:["home project",{pure:N.value}],id:"main-content","aria-labelledby":z.value.heroText===null?void 0:"main-title"},[(Z=R.top)==null?void 0:Z.call(R),h$1(HeroInfo),j.value.map(({header:nn="",items:sn},en)=>h$1(DropTransition,{appear:!0,delay:.16+en*.08},()=>h$1(FeaturePanel,{header:nn,items:sn}))),(X=R.center)==null?void 0:X.call(R),h$1(DropTransition,{appear:!0,delay:.16+j.value.length*.08},()=>h$1(MarkdownContent)),(Q=R.bottom)==null?void 0:Q.call(R)])}}}),getAncestorLinks=(d,R)=>{const N=d.replace(R,"/").split("/"),z=[];let j=removeEndingSlash(R);return N.forEach((Z,X)=>{X!==N.length-1?(j+=`${Z}/`,z.push(j)):Z!==""&&(j+=Z,z.push(j))}),z},breadcrumb="",BreadCrumb=defineComponent({name:"BreadCrumb",setup(){const d=useRouter(),R=usePageData(),N=useRouteLocale(),z=usePageFrontmatter(),j=useThemeLocaleData(),Z=ref([]),X=computed(()=>(z.value.breadcrumb||z.value.breadcrumb!==!1&&j.value.breadcrumb!==!1)&&Z.value.length>1),Q=computed(()=>z.value.breadcrumbIcon||z.value.breadcrumbIcon!==!1&&j.value.breadcrumbIcon!==!1),nn=()=>{const sn=d.getRoutes(),en=getAncestorLinks(R.value.path,N.value).map(tn=>{const an=sn.find(on=>on.path===tn);if(an){const{meta:on,path:cn}=Ht(d,an.path),pn=on.s||on.t;if(pn)return{title:pn,icon:on.i,path:cn}}return null}).filter(tn=>tn!==null);en.length>1&&(Z.value=en)};return onMounted(()=>{nn(),watch(()=>R.value.path,nn)}),()=>h$1("nav",{class:["breadcrumb",{disable:!X.value}]},X.value?h$1("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},Z.value.map((sn,en)=>h$1("li",{class:{"is-active":Z.value.length-1===en},property:"itemListElement",typeof:"ListItem"},[h$1(RouterLink,{to:sn.path,property:"item",typeof:"WebPage"},()=>[Q.value?h$1(HopeIcon,{icon:sn.icon}):null,h$1("span",{property:"name"},sn.title||"Unknown")]),h$1("meta",{property:"position",content:en+1})]))):[])}}),pageNav="",resolveFromFrontmatterConfig=d=>d===!1?!1:isString$1(d)?useAutoLink(d,!0):isPlainObject(d)?d:null,resolveFromSidebarItems=(d,R,N)=>{const z=d.findIndex(j=>j.link===R);if(z!==-1){const j=d[z+N];return j!=null&&j.link?j:null}for(const j of d)if(j.children){const Z=resolveFromSidebarItems(j.children,R,N);if(Z)return Z}return null},PageNav=defineComponent({name:"PageNav",setup(){const d=useThemeLocaleData(),R=usePageFrontmatter(),N=useSidebarItems(),z=usePageData(),j=useNavigate(),Z=computed(()=>{const Q=resolveFromFrontmatterConfig(R.value.prev);return Q===!1?null:Q||(d.value.prevLink===!1?null:resolveFromSidebarItems(N.value,z.value.path,-1))}),X=computed(()=>{const Q=resolveFromFrontmatterConfig(R.value.next);return Q===!1?null:Q||(d.value.nextLink===!1?null:resolveFromSidebarItems(N.value,z.value.path,1))});return useEventListener("keydown",Q=>{Q.altKey&&(Q.key==="ArrowRight"?X.value&&(j(X.value.link),Q.preventDefault()):Q.key==="ArrowLeft"&&Z.value&&(j(Z.value.link),Q.preventDefault()))}),()=>Z.value||X.value?h$1("nav",{class:"page-nav"},[Z.value?h$1(AutoLink,{class:"prev",config:Z.value},()=>{var Q,nn;return[h$1("div",{class:"hint"},[h$1("span",{class:"arrow start"}),d.value.metaLocales.prev]),h$1("div",{class:"link"},[h$1(HopeIcon,{icon:(Q=Z.value)==null?void 0:Q.icon}),(nn=Z.value)==null?void 0:nn.text])]}):null,X.value?h$1(AutoLink,{class:"next",config:X.value},()=>{var Q,nn;return[h$1("div",{class:"hint"},[d.value.metaLocales.next,h$1("span",{class:"arrow end"})]),h$1("div",{class:"link"},[(Q=X.value)==null?void 0:Q.text,h$1(HopeIcon,{icon:(nn=X.value)==null?void 0:nn.icon})])]}):null]):null}}),AuthorIcon=()=>h$1(G$1,{name:"author"},()=>h$1("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));AuthorIcon.displayName="AuthorIcon";const CalendarIcon=()=>h$1(G$1,{name:"calendar"},()=>h$1("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));CalendarIcon.displayName="CalendarIcon";const CategoryIcon$1=()=>h$1(G$1,{name:"category"},()=>h$1("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));CategoryIcon$1.displayName="CategoryIcon";const EyeIcon=()=>h$1(G$1,{name:"eye"},()=>h$1("path",{d:"M992 512.096c0-5.76-.992-10.592-1.28-11.136-.192-2.88-1.152-8.064-2.08-10.816-.256-.672-.544-1.376-.832-2.08-.48-1.568-1.024-3.104-1.6-4.32C897.664 290.112 707.104 160 512 160c-195.072 0-385.632 130.016-473.76 322.592-1.056 2.112-1.792 4.096-2.272 5.856a55.512 55.512 0 00-.64 1.6c-1.76 5.088-1.792 8.64-1.632 7.744-.832 3.744-1.568 11.168-1.568 11.168-.224 2.272-.224 4.032.032 6.304 0 0 .736 6.464 1.088 7.808.128 1.824.576 4.512 1.12 6.976h-.032c.448 2.08 1.12 4.096 1.984 6.08.48 1.536.992 2.976 1.472 4.032C126.432 733.856 316.992 864 512 864c195.136 0 385.696-130.048 473.216-321.696 1.376-2.496 2.24-4.832 2.848-6.912.256-.608.48-1.184.672-1.728 1.536-4.48 1.856-8.32 1.728-8.32l-.032.032c.608-3.104 1.568-7.744 1.568-13.28zM512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160z"}));EyeIcon.displayName="EyeIcon";const FireIcon=()=>h$1(G$1,{name:"fire"},()=>h$1("path",{d:"M726.4 201.6c-12.8-9.6-28.8-6.4-38.4 0-9.6 9.6-16 25.6-9.6 38.4 6.4 12.8 9.6 28.8 12.8 44.8C604.8 83.2 460.8 38.4 454.4 35.2c-9.6-3.2-22.4 0-28.8 6.4-9.6 6.4-12.8 19.2-9.6 28.8 12.8 86.4-25.6 188.8-115.2 310.4-6.4-25.6-16-51.2-32-80-9.6-9.6-22.4-16-35.2-12.8-16 3.2-25.6 12.8-25.6 28.8-3.2 48-25.6 92.8-51.2 140.8C134.4 499.2 112 544 102.4 592c-32 150.4 99.2 329.6 233.6 380.8 9.6 3.2 19.2 6.4 32 9.6-25.6-19.2-41.6-51.2-48-96C294.4 691.2 505.6 640 515.2 460.8c153.6 105.6 224 336 137.6 505.6 3.2 0 6.4-3.2 9.6-3.2 0 0 3.2 0 3.2-3.2 163.2-89.6 252.8-208 259.2-345.6 16-211.2-163.2-390.4-198.4-412.8z"}));FireIcon.displayName="FireIcon";const PrintIcon=()=>h$1(G$1,{name:"print"},()=>h$1("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));PrintIcon.displayName="PrintIcon";const TagIcon$1=()=>h$1(G$1,{name:"tag"},()=>h$1("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));TagIcon$1.displayName="TagIcon";const TimerIcon=()=>h$1(G$1,{name:"timer"},()=>h$1("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));TimerIcon.displayName="TimerIcon";const WordIcon=()=>h$1(G$1,{name:"word"},()=>[h$1("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h$1("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);WordIcon.displayName="WordIcon";const useMetaLocale=()=>{const d=useThemeLocaleData();return computed(()=>d.value.metaLocales)},readingTimeLocales={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},editLinkPatterns={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},resolveEditLink=({docsRepo:d,docsBranch:R,docsDir:N,filePathRelative:z,editLinkPattern:j})=>{if(!z)return null;const Z=Ne(d);let X;return j?X=j:Z!==null&&(X=editLinkPatterns[Z]),X?X.replace(/:repo/,isLinkHttp(d)?d:`https://github.com/${d}`).replace(/:branch/,R).replace(/:path/,removeLeadingSlash(`${removeEndingSlash(N)}/${z}`)):null},useEditLink=()=>{const d=useThemeLocaleData(),R=usePageData(),N=usePageFrontmatter();return computed(()=>{const{repo:z,docsRepo:j=z,docsBranch:Z="main",docsDir:X="",editLink:Q,editLinkPattern:nn=""}=d.value;if(!(N.value.editLink??Q??!0)||!j)return null;const en=resolveEditLink({docsRepo:j,docsBranch:Z,docsDir:X,editLinkPattern:nn,filePathRelative:R.value.filePathRelative});return en?{text:d.value.metaLocales.editLink,link:en}:null})},useUpdateTime=()=>{const d=useSiteLocaleData(),R=useThemeLocaleData(),N=usePageData(),z=usePageFrontmatter();return computed(()=>{var X,Q;return!(z.value.lastUpdated??R.value.lastUpdated??!0)||!((X=N.value.git)!=null&&X.updatedTime)?null:new Date((Q=N.value.git)==null?void 0:Q.updatedTime).toLocaleString(d.value.lang)})},useContributors=()=>{const d=useThemeLocaleData(),R=usePageData(),N=usePageFrontmatter();return computed(()=>{var j;return N.value.contributors??d.value.contributors??!0?((j=R.value.git)==null?void 0:j.contributors)??null:null})},authorInfo="",AuthorInfo=defineComponent({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(d){const R=useMetaLocale();return()=>d.author.length?h$1("span",{class:"page-author-info","aria-label":`${R.value.author}${d.pure?"":"🖊"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(AuthorIcon),h$1("span",d.author.map(N=>N.url?h$1("a",{class:"page-author-item",href:N.url,target:"_blank",rel:"noopener noreferrer"},N.name):h$1("span",{class:"page-author-item"},N.name))),h$1("span",{property:"author",content:d.author.map(N=>N.name).join(", ")})]):null}}),categoryInfo="",CategoryInfo=defineComponent({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(d){const R=useRouter(),N=usePageData(),z=useMetaLocale(),j=(Z,X="")=>{X&&N.value.path!==X&&(Z.preventDefault(),R.push(X))};return()=>d.category.length?h$1("span",{class:"page-category-info","aria-label":`${z.value.category}${d.pure?"":"🌈"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(CategoryIcon$1),...d.category.map(({name:Z,path:X})=>h$1("span",{class:["page-category-item",{[`category${fe(Z,9)}`]:!d.pure,clickable:X}],role:X?"navigation":"",onClick:Q=>j(Q,X)},Z)),h$1("meta",{property:"articleSection",content:d.category.map(({name:Z})=>Z).join(",")})]):null}}),DateInfo=defineComponent({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(d){const R=usePageLang(),N=useMetaLocale();return()=>{var z,j;return d.date?h$1("span",{class:"page-date-info","aria-label":`${N.value.date}${d.pure?"":"📅"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(CalendarIcon),h$1("span",h$1(ClientOnly,()=>{var Z;return d.localizedDate||((Z=d.date.value)==null?void 0:Z.toLocaleDateString(R.value))})),h$1("meta",{property:"datePublished",content:((j=(z=d.date)==null?void 0:z.value)==null?void 0:j.toISOString())||""})]):null}}}),originalInfo="",OriginalInfo=defineComponent({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(d){const R=useMetaLocale();return()=>d.isOriginal?h$1("span",{class:"page-original-info"},R.value.origin):null}});defineComponent({name:"PageViewInfo",inheritAttrs:!1,props:{pageview:{type:[Boolean,String],default:!1},pure:Boolean},setup(d){const R=useRoute(),N=useMetaLocale(),z=ref(),j=ref(0);return useMutationObserver(z,()=>{const Z=z.value.textContent;Z&&!isNaN(Number(Z))&&(j.value=Number(Z))},{childList:!0}),()=>d.pageview?h$1("span",{class:"page-pageview-info","aria-label":`${N.value.views}${d.pure?"":"🔢"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(j.value<1e3?EyeIcon:FireIcon),h$1("span",{ref:z,class:"waline-pageview-count",id:"ArtalkPV","data-path":isString$1(d.pageview)?d.pageview:withBase(R.path)},"...")]):null}});const ReadingTimeInfo=defineComponent({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(d){const R=useMetaLocale(),N=ne(readingTimeLocales),z=computed(()=>{if(!d.readingTime)return null;const{minutes:j}=d.readingTime;return j<1?{text:N.value.less1Minute,time:"PT1M"}:{text:N.value.time.replace("$time",Math.round(j).toString()),time:`PT${Math.round(j)}M`}});return()=>z.value?h$1("span",{class:"page-reading-time-info","aria-label":`${R.value.readingTime}${d.pure?"":"⌛"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(TimerIcon),h$1("span",z.value.text),h$1("meta",{property:"timeRequired",content:z.value.time})]):null}}),tagInfo="",TagInfo=defineComponent({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(d){const R=useRouter(),N=usePageData(),z=useMetaLocale(),j=(Z,X="")=>{X&&N.value.path!==X&&(Z.preventDefault(),R.push(X))};return()=>d.tag.length?h$1("span",{class:"page-tag-info","aria-label":`${z.value.tag}${d.pure?"":"🏷"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(TagIcon$1),...d.tag.map(({name:Z,path:X})=>h$1("span",{class:["page-tag-item",{[`tag${fe(Z,9)}`]:!d.pure,clickable:X}],role:X?"navigation":"",onClick:Q=>j(Q,X)},Z)),h$1("meta",{property:"keywords",content:d.tag.map(({name:Z})=>Z).join(",")})]):null}}),WordInfo=defineComponent({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},pure:Boolean},setup(d){const R=useMetaLocale(),N=ne(readingTimeLocales),z=computed(()=>{var Z;return(Z=d.readingTime)==null?void 0:Z.words.toString()}),j=computed(()=>N.value.word.replace("$word",z.value||""));return()=>z.value?h$1("span",{class:"page-word-info","aria-label":`${R.value.words}${d.pure?"":"🔠"}`,...d.pure?{}:{"data-balloon-pos":"down"}},[h$1(WordIcon),h$1("span",j.value),h$1("meta",{property:"wordCount",content:z.value})]):null}}),pageInfo="",PageInfo=defineComponent({name:"PageInfo",components:{AuthorInfo,CategoryInfo,DateInfo,OriginalInfo,PageViewInfo:()=>null,ReadingTimeInfo,TagInfo,WordInfo},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(d){const R=usePure();return()=>d.items?h$1("div",{class:"page-info"},d.items.map(N=>h$1(resolveComponent(`${N}Info`),{...d.info,pure:R.value}))):null}}),pageTitle="",PageTitle=defineComponent({name:"PageTitle",setup(){const d=usePageData(),R=usePageFrontmatter(),N=useThemeLocaleData(),{info:z,items:j}=usePageInfo();return()=>h$1("div",{class:"page-title"},[h$1("h1",[N.value.titleIcon===!1?null:h$1(HopeIcon,{icon:R.value.icon}),d.value.title]),h$1(PageInfo,{info:z.value,...j.value===null?{}:{items:j.value}}),h$1("hr")])}}),EditIcon=()=>h$1(G$1,{name:"edit"},()=>[h$1("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h$1("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);EditIcon.displayName="EditIcon";const pageMeta="",PageMeta=defineComponent({name:"PageMeta",setup(){const d=useThemeLocaleData(),R=useEditLink(),N=useUpdateTime(),z=useContributors();return()=>{const{metaLocales:j}=d.value;return h$1("footer",{class:"page-meta"},[R.value?h$1("div",{class:"meta-item edit-link"},h$1(AutoLink,{class:"label",config:R.value},{before:()=>h$1(EditIcon)})):null,h$1("div",{class:"meta-item git-info"},[N.value?h$1("div",{class:"update-time"},[h$1("span",{class:"label"},`${j.lastUpdated}: `),h$1(ClientOnly,()=>h$1("span",{class:"info"},N.value))]):null,z.value&&z.value.length?h$1("div",{class:"contributors"},[h$1("span",{class:"label"},`${j.contributors}: `),z.value.map(({email:Z,name:X},Q)=>[h$1("span",{class:"contributor",title:`email: ${Z}`},X),Q!==z.value.length-1?",":""])]):null])])}}}),printButton="",PrintButton=defineComponent({name:"PrintButton",setup(){const d=useThemeData(),R=useThemeLocaleData();return()=>d.value.print===!1?null:h$1("button",{class:"print-button",title:R.value.metaLocales.print,onClick:()=>{window.print()}},h$1(PrintIcon))}}),toc="",renderHeader=({title:d,level:R,slug:N})=>h$1(RouterLink,{to:`#${N}`,class:["toc-link",`level${R}`]},()=>d),renderChildren=(d,R)=>{const N=useRoute();return d.length&&R>0?h$1("ul",{class:"toc-list"},d.map(z=>[h$1("li",{class:["toc-item",{active:Ce(N,`#${z.slug}`)}]},renderHeader(z)),renderChildren(z.children,R-1)])):null},TOC=defineComponent({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},setup(d,{slots:R}){const N=useRoute(),z=usePageData(),j=useMetaLocale(),Z=ref(),X=Q=>{var nn;(nn=Z.value)==null||nn.scrollTo({top:Q,behavior:"smooth"})};return onMounted(()=>{watch(()=>N.hash,Q=>{if(Z.value){const nn=document.querySelector(`#toc a.toc-link[href$="${Q}"]`);if(!nn)return;const{top:sn,height:en}=Z.value.getBoundingClientRect(),{top:tn,height:an}=nn.getBoundingClientRect();tn<sn?X(Z.value.scrollTop+tn-sn):tn+an>sn+en&&X(Z.value.scrollTop+tn+an-sn-en)}})}),()=>{var nn,sn;const Q=d.items.length?renderChildren(d.items,d.headerDepth):z.value.headers?renderChildren(z.value.headers,d.headerDepth):null;return Q?h$1("div",{class:"toc-place-holder"},[h$1("aside",{id:"toc"},[(nn=R.before)==null?void 0:nn.call(R),h$1("div",{class:"toc-header"},[j.value.toc,h$1(PrintButton)]),h$1("div",{class:"toc-wrapper",ref:Z},Q),(sn=R.after)==null?void 0:sn.call(R)])]):null}}}),page$1="",NormalPage=defineComponent({name:"NormalPage",setup(d,{slots:R}){const N=usePageFrontmatter(),{isDarkmode:z}=useDarkmode(),j=useThemeLocaleData(),Z=computed(()=>N.value.toc||N.value.toc!==!1&&j.value.toc!==!1);return()=>h$1("main",{class:"page",id:"main-content"},h$1(Vt("LocalEncrypt")?resolveComponent("LocalEncrypt"):Rt,()=>{var X,Q,nn,sn;return[(X=R.top)==null?void 0:X.call(R),h$1(BreadCrumb),h$1(PageTitle),Z.value?h$1(TOC,{headerDepth:N.value.headerDepth??j.value.headerDepth??2},{before:()=>{var en;return(en=R.tocBefore)==null?void 0:en.call(R)},after:()=>{var en;return(en=R.tocAfter)==null?void 0:en.call(R)}}):null,(Q=R.contentBefore)==null?void 0:Q.call(R),h$1(MarkdownContent),(nn=R.contentAfter)==null?void 0:nn.call(R),h$1(PageMeta),h$1(PageNav),Vt("CommentService")?h$1(resolveComponent("CommentService"),{darkmode:z.value}):null,(sn=R.bottom)==null?void 0:sn.call(R)]}))}}),skipLink="",SkipLink=defineComponent({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(d){const R=usePageData(),N=useThemeLocaleData(),z=ref(),j=({target:Z})=>{const X=document.querySelector(Z.hash);if(X){const Q=()=>{X.removeAttribute("tabindex"),X.removeEventListener("blur",Q)};X.setAttribute("tabindex","-1"),X.addEventListener("blur",Q),X.focus(),window.scrollTo(0,0)}};return onMounted(()=>{watch(()=>R.value.path,()=>z.value.focus())}),()=>[h$1("span",{ref:z,tabindex:"-1"}),h$1("a",{href:`#${d.content}`,class:"skip-link sr-only",onClick:j},N.value.routeLocales.skipToContent)]}}),fadeSlideY="",FadeSlideY=defineComponent({name:"FadeSlideY",setup(d,{slots:R}){const{resolve:N,pending:z}=useScrollPromise();return()=>h$1(Transition,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:N,onBeforeLeave:z},()=>{var j;return(j=R.default)==null?void 0:j.call(R)})}}),Layout=defineComponent({name:"Layout",setup(){const d=useThemeData(),R=useThemeLocaleData(),N=usePageData(),z=usePageFrontmatter(),{isMobile:j}=useWindowSize(),Z=computed(()=>{var X,Q;return((X=R.value.blog)==null?void 0:X.sidebarDisplay)||((Q=d.value.blog)==null?void 0:Q.sidebarDisplay)||"mobile"});return()=>[h$1(SkipLink),h$1(CommonWrapper,{},{default:()=>z.value.home?h$1(HomePage):h$1(FadeSlideY,()=>h$1(NormalPage,{key:N.value.path})),...Z.value!=="none"?{navScreenBottom:()=>h$1(resolveComponent("BloggerInfo"))}:{},...!j.value&&Z.value==="always"?{sidebar:()=>h$1(resolveComponent("BloggerInfo"))}:{}})]}}),notFoundHint="",NotFoundHint=defineComponent({name:"NotFoundHint",setup(){const d=useThemeLocaleData(),R=()=>{const N=d.value.routeLocales.notFoundMsg;return N[Math.floor(Math.random()*N.length)]};return()=>h$1("div",{class:"not-found-hint"},[h$1("p",{class:"error-code"},"404"),h$1("h1",{class:"error-title"},d.value.routeLocales.notFoundTitle),h$1("p",{class:"error-hint"},R())])}}),notFound="",NotFound=defineComponent({name:"NotFound",setup(d,{slots:R}){const N=useRouteLocale(),z=useThemeLocaleData(),{navigate:j}=useLink({to:z.value.home??N.value});return()=>[h$1(SkipLink),h$1(CommonWrapper,{noSidebar:!0},()=>{var Z;return h$1("main",{class:"page not-found",id:"main-content"},((Z=R.default)==null?void 0:Z.call(R))||[h$1(NotFoundHint),h$1("div",{class:"actions"},[h$1("button",{class:"action-button",onClick:()=>{window.history.go(-1)}},z.value.routeLocales.back),h$1("button",{class:"action-button",onClick:()=>j()},z.value.routeLocales.home)])])})]}}),index="",icons={},categoryMap={category:{"/":{path:"/category/",map:{源码:{path:"/category/%E6%BA%90%E7%A0%81/",keys:["v-473d3848"]}}}},tag:{"/":{path:"/tag/",map:{grpc:{path:"/tag/grpc/",keys:["v-473d3848"]}}}}},typeMap={article:{"/":{path:"/article/",keys:["v-c2338974","v-5c7f1620","v-d0470fda","v-15f7cb44","v-69eb1ee5","v-41143382","v-095ab845","v-75e42678","v-311d1129","v-626d1f23","v-8577f6a2","v-04f4c8f0","v-aac4eefa","v-473d3848","v-65d94903","v-e14f7a38","v-24d24a4f","v-91c031d6","v-41db700c","v-378b0cea","v-0a5aa9da","v-5ea5124a","v-daf1ed44","v-5704a85a","v-85e42c34","v-3f2de73e","v-5ea1901d","v-05242fd8","v-0938a9d3","v-4b5c10d5","v-37e97163","v-c225c592","v-14679d9e","v-0f76b6d9","v-f54f2f0e","v-540b3114","v-ffbecaec","v-54a85011","v-80f3353a","v-08d2adae","v-3dca5d6e","v-b7c0262e","v-02f09a04","v-05ab0988","v-52b41d92","v-7a0becb0","v-2883b3a5","v-31fb3d4e","v-4cd385cc","v-08db3ce7","v-93d304e2","v-d2a192d8","v-2330770e","v-69328bde","v-5a7808b6","v-9dc54574","v-55113402","v-454dcd6a","v-d0483b36","v-3413ac34","v-3918c409","v-125f3036","v-4c90b958","v-15658a77","v-5022612b","v-79f0a4fd","v-63dc7a8e","v-1912efa4","v-5351d5c2","v-09bdfe36","v-0cfae4ee","v-29de861a","v-45ad708e","v-9354be2a","v-05e9d15d","v-296a96ce","v-376f89aa","v-76c5059c","v-20d4074c","v-1987e354","v-9b6fd810","v-8931789c","v-32db7ed0","v-86c1b21a","v-5d186e13","v-69f10f0f","v-20236824","v-27a7113a","v-1731abc5","v-5dba4a60","v-5bd11c99","v-3780fdb0","v-45b37b7c","v-9f6d3fce","v-ae077b66","v-1e82a95c","v-5a02890e","v-cb60c1de","v-00fa2137","v-737a2942","v-ca57f694","v-0d3d58f3","v-0995ed03","v-9fdd33a2","v-9c77694e","v-66e1220e","v-7db669ff","v-cb41d22a","v-5fe9137f","v-d8c21a80","v-6f1b987a","v-7cf0bcd1","v-cc77d808","v-0114a559","v-20e7896c","v-0d4f4684","v-02f9f3ee","v-96cc17a8","v-b2c63254","v-5962aca2","v-1052a15d","v-2d37c472","v-70f1ee16","v-315f1caf","v-09600dda","v-52dc23b1","v-624dff1f","v-0b9cd25e","v-79329100","v-e7cde7c6","v-36a869d0","v-a22d01e4","v-0c9a988b","v-65042868","v-2f208a26","v-0edd84b2","v-12c615d4","v-310bef1e","v-2ea49593","v-389e8c01","v-5a8b44d7","v-5539e700","v-6e55db14","v-ee0734ea","v-1b2fb878","v-105ea741","v-39f8f26a"]}},star:{"/":{path:"/star/",keys:[]}},timeline:{"/":{path:"/timeline/",keys:["v-c2338974","v-5c7f1620","v-d0470fda","v-15f7cb44","v-69eb1ee5","v-41143382","v-095ab845","v-75e42678","v-311d1129","v-626d1f23","v-8577f6a2","v-04f4c8f0","v-aac4eefa","v-473d3848","v-65d94903","v-e14f7a38","v-24d24a4f","v-91c031d6","v-41db700c","v-378b0cea","v-0a5aa9da","v-5ea5124a","v-daf1ed44","v-5704a85a","v-85e42c34","v-3f2de73e","v-5ea1901d","v-05242fd8","v-0938a9d3","v-4b5c10d5","v-37e97163","v-c225c592","v-14679d9e","v-0f76b6d9","v-f54f2f0e","v-540b3114","v-ffbecaec","v-54a85011","v-80f3353a","v-08d2adae","v-3dca5d6e","v-b7c0262e","v-02f09a04","v-05ab0988","v-52b41d92","v-7a0becb0","v-2883b3a5","v-31fb3d4e","v-4cd385cc","v-08db3ce7","v-93d304e2","v-d2a192d8","v-2330770e","v-69328bde","v-5a7808b6","v-9dc54574","v-55113402","v-454dcd6a","v-d0483b36","v-3413ac34","v-3918c409","v-125f3036","v-4c90b958","v-15658a77","v-5022612b","v-79f0a4fd","v-63dc7a8e","v-1912efa4","v-5351d5c2","v-09bdfe36","v-0cfae4ee","v-29de861a","v-45ad708e","v-9354be2a","v-05e9d15d","v-296a96ce","v-376f89aa","v-76c5059c","v-20d4074c","v-1987e354","v-9b6fd810","v-8931789c","v-32db7ed0","v-86c1b21a","v-5d186e13","v-69f10f0f","v-20236824","v-27a7113a","v-1731abc5","v-5dba4a60","v-5bd11c99","v-3780fdb0","v-45b37b7c","v-9f6d3fce","v-ae077b66","v-1e82a95c","v-5a02890e","v-cb60c1de","v-00fa2137","v-737a2942","v-ca57f694","v-0d3d58f3","v-0995ed03","v-9fdd33a2","v-9c77694e","v-66e1220e","v-7db669ff","v-cb41d22a","v-5fe9137f","v-d8c21a80","v-6f1b987a","v-7cf0bcd1","v-cc77d808","v-0114a559","v-20e7896c","v-0d4f4684","v-02f9f3ee","v-96cc17a8","v-b2c63254","v-5962aca2","v-1052a15d","v-2d37c472","v-70f1ee16","v-315f1caf","v-09600dda","v-52dc23b1","v-624dff1f","v-0b9cd25e","v-79329100","v-e7cde7c6","v-36a869d0","v-a22d01e4","v-0c9a988b","v-65042868","v-2f208a26","v-0edd84b2","v-12c615d4","v-310bef1e","v-2ea49593","v-389e8c01","v-5a8b44d7","v-5539e700","v-6e55db14","v-ee0734ea","v-1b2fb878","v-105ea741","v-39f8f26a"]}}},_=ref(categoryMap),k=(d="")=>{const R=usePageData(),N=useRouter(),z=useRouteLocale();return computed(()=>{var j;const Z=d||((j=usePageFrontmatter().value.blog)==null?void 0:j.key)||"";if(!Z)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const X=N.getRoutes();if(!_.value[Z])throw new Error(`useBlogCategory: key ${Z} is invalid`);const Q=_.value[Z][z.value],nn={path:Q.path,map:{}};for(const sn in Q.map){const en=Q.map[sn];nn.map[sn]={path:en.path,items:[]};for(const tn of en.keys){const an=X.find(({name:on})=>on===tn);if(an){const on=Ht(N,an.path);nn.map[sn].items.push({path:on.path,info:on.meta})}}R.value.path===en.path&&(nn.currentItems=nn.map[sn].items)}return nn})},c$1=ref(typeMap),C=(d="")=>{const R=useRouter(),N=useRouteLocale();return computed(()=>{var z;const j=d||((z=usePageFrontmatter().value.blog)==null?void 0:z.key)||"";if(!j)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!c$1.value[j])throw new Error(`useBlogType: key ${d} is invalid`);const Z=R.getRoutes(),X=c$1.value[j][N.value],Q={path:X.path,items:[]};for(const nn of X.keys){const sn=Z.find(({name:en})=>en===nn);if(sn){const en=Ht(R,sn.path);Q.items.push({path:en.path,info:en.meta})}}return Q})},categoryMapSymbol=Symbol.for("categoryMap"),useCategoryMap=()=>{const d=inject(categoryMapSymbol);if(!d)throw new Error("useCategoryMap() is called without provider.");return d},setupCategoryMap=()=>{const d=k("category");provide(categoryMapSymbol,d)},useBlogOptions=()=>{const d=useThemeData(),R=useThemeLocaleData();return computed(()=>({...d.value.blog,...R.value.blog}))},tagMapSymbol=Symbol.for("tagMap"),useTagMap=()=>{const d=inject(tagMapSymbol);if(!d)throw new Error("useTagMap() is called without provider.");return d},setupTagMap=()=>{const d=k("tag");provide(tagMapSymbol,d)},useArticleAuthor=d=>{const R=useThemeLocaleData();return computed(()=>{const{["a"]:N}=d.value;return N?De(N):N===!1?[]:De(R.value.author,!1)})},useArticleCategory=d=>{const R=useCategoryMap();return computed(()=>xe(d.value.c).map(N=>({name:N,path:R.value.map[N].path})))},useArticleTag=d=>{const R=useTagMap();return computed(()=>Ie(d.value.g).map(N=>({name:N,path:R.value.map[N].path})))},useArticleDate=d=>computed(()=>{const{["d"]:R}=d.value;return R?ot(R):null}),useArticleInfo=d=>{const R=toRef(d,"info"),N=useBlogOptions(),z=useArticleAuthor(R),j=useArticleCategory(R),Z=useArticleTag(R),X=useArticleDate(R),Q=computed(()=>({author:z.value,category:j.value,date:X.value,localizedDate:R.value.l||"",tag:Z.value,isOriginal:R.value.o||!1,readingTime:R.value.r||null,pageview:d.path})),nn=computed(()=>N.value.articleInfo);return{info:Q,items:nn}},articlesSymbol=Symbol.for("articles"),useArticles=()=>{const d=inject(articlesSymbol);if(!d)throw new Error("useArticles() is called without provider.");return d},setupArticles=()=>{const d=C("article");provide(articlesSymbol,d)},starsSymbol=Symbol.for("stars"),useStars=()=>{const d=inject(starsSymbol);if(!d)throw new Error("useStars() is called without provider.");return d},setupStars=()=>{const d=C("star");provide(starsSymbol,d)},timelinesSymbol=Symbol.for("timelines"),useTimelines=()=>{const d=inject(timelinesSymbol);if(!d)throw new Error("useTimelines() is called without provider.");return d},setupTimelines=()=>{const d=C("timeline"),R=computed(()=>{const N=[];return d.value.items.forEach(({info:z,path:j})=>{var nn;const{year:Z,month:X,day:Q}=((nn=ot(z.d))==null?void 0:nn.info)||{};Z&&X&&Q&&((!N[0]||N[0].year!==Z)&&N.unshift({year:Z,items:[]}),N[0].items.push({date:`${X}/${Q}`,info:z,path:j}))}),{...d.value,config:N.reverse()}});provide(timelinesSymbol,R)},setupBlog=()=>{setupArticles(),setupCategoryMap(),setupStars(),setupTagMap(),setupTimelines()},socialMedia="",SocialMedia=defineComponent({name:"SocialMedia",setup(){const d=useBlogOptions(),R=usePure(),N=computed(()=>{const z=d.value.medias;return z?Tt(z).map(([j,Z])=>({name:j,icon:icons[j],url:Z})):[]});return()=>N.value.length?h$1("div",{class:"social-media-wrapper"},N.value.map(({name:z,icon:j,url:Z})=>h$1("a",{class:"social-media",href:Z,rel:"noopener noreferrer",target:"_blank","aria-label":z,...R.value?{}:{"data-balloon-pos":"up"},innerHTML:j}))):null}}),bloggerInfo="",BloggerInfo=defineComponent({name:"BloggerInfo",setup(){const d=useBlogOptions(),R=useSiteLocaleData(),N=useThemeLocaleData(),z=useArticles(),j=useCategoryMap(),Z=useTagMap(),X=useTimelines(),Q=useNavigate(),nn=computed(()=>{var an;return d.value.name||((an=De(N.value.author)[0])==null?void 0:an.name)||R.value.title}),sn=computed(()=>d.value.avatar||N.value.logo),en=computed(()=>N.value.blogLocales),tn=computed(()=>d.value.intro);return()=>h$1("div",{class:"blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h$1("div",{class:"blogger",...tn.value?{style:{cursor:"pointer"},"aria-label":en.value.intro,"data-balloon-pos":"down",role:"navigation",onClick:()=>Q(tn.value)}:{}},[sn.value?h$1("img",{class:["blogger-avatar",{round:d.value.roundAvatar}],src:withBase(sn.value),property:"image",alt:"Blogger Avatar"}):null,nn.value?h$1("div",{class:"blogger-name",property:"name"},nn.value):null,d.value.description?h$1("div",{class:"blogger-description",innerHTML:d.value.description}):null,tn.value?h$1("meta",{property:"url",content:withBase(tn.value)}):null]),h$1("div",{class:"num-wrapper"},[h$1("div",{onClick:()=>Q(z.value.path)},[h$1("div",{class:"num"},z.value.items.length),h$1("div",en.value.article)]),h$1("div",{onClick:()=>Q(j.value.path)},[h$1("div",{class:"num"},at(j.value.map).length),h$1("div",en.value.category)]),h$1("div",{onClick:()=>Q(Z.value.path)},[h$1("div",{class:"num"},at(Z.value.map).length),h$1("div",en.value.tag)]),h$1("div",{onClick:()=>Q(X.value.path)},[h$1("div",{class:"num"},X.value.items.length),h$1("div",en.value.timeline)])]),h$1(SocialMedia)])}}),CategoryIcon=()=>h$1(G$1,{name:"category"},()=>h$1("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));CategoryIcon.displayName="CategoryIcon";const TagIcon=()=>h$1(G$1,{name:"tag"},()=>h$1("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));TagIcon.displayName="TagIcon";const TimelineIcon=()=>h$1(G$1,{name:"timeline"},()=>h$1("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));TimelineIcon.displayName="TimelineIcon";const SlideIcon=()=>h$1(G$1,{name:"slides"},()=>h$1("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));SlideIcon.displayName="SlideIcon";const StickyIcon=()=>h$1(G$1,{name:"sticky"},()=>[h$1("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);StickyIcon.displayName="StickyIcon";const ArticleIcon=()=>h$1(G$1,{name:"article"},()=>h$1("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));ArticleIcon.displayName="ArticleIcon";const BookIcon=()=>h$1(G$1,{name:"book"},()=>h$1("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));BookIcon.displayName="BookIcon";const LinkIcon=()=>h$1(G$1,{name:"link"},()=>h$1("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));LinkIcon.displayName="LinkIcon";const ProjectIcon=()=>h$1(G$1,{name:"project"},()=>h$1("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));ProjectIcon.displayName="ProjectIcon";const FriendIcon=()=>h$1(G$1,{name:"friend"},()=>h$1("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));FriendIcon.displayName="FriendIcon";const SlideDownIcon=()=>h$1(G$1,{name:"slide-down"},()=>h$1("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));SlideDownIcon.displayName="SlideDownIcon";const emptyIcon="",EmptyIcon=()=>h$1("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});EmptyIcon.displayName="EmptyIcon";const LockIcon=()=>h$1(G$1,{name:"lock"},()=>h$1("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));LockIcon.displayName="LockIcon";const articleItem="",ArticleItem=defineComponent({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},setup(d){const R=toRef(d,"info"),{info:N,items:z}=useArticleInfo(d);return()=>h$1("div",{class:"article-item"},h$1("article",{class:"article",vocab:"https://schema.org/",typeof:"Article"},[R.value.u?h$1(StickyIcon):null,h$1(RouterLink,{to:d.path},()=>[h$1("header",{class:"title"},[R.value.n?h$1(LockIcon):null,R.value.y==="s"?h$1(SlideIcon):null,h$1("span",{property:"headline"},R.value.t),R.value.v?h$1("meta",{property:"image",content:withBase(R.value.v)}):null])]),R.value.e?h$1("div",{class:"article-excerpt",innerHTML:R.value.e}):null,h$1("hr",{class:"hr"}),h$1(PageInfo,{info:N.value,...z.value?{items:z.value}:{}})]))}}),message="",pagination="",Pagination=defineComponent({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(d,{emit:R}){let N;const z=useThemeLocaleData(),j=ref(""),Z=computed(()=>z.value.paginationLocales),X=computed(()=>Math.ceil(d.total/d.perPage)),Q=computed(()=>Boolean(X.value)&&X.value!==1),nn=computed(()=>X.value<7?!1:d.current>4),sn=computed(()=>X.value<7?!1:d.current<X.value-3),en=computed(()=>{const{current:on}=d;let cn=1,pn=X.value;const ln=[];X.value>=7&&(on<=4&&on<X.value-3?(cn=1,pn=5):on>4&&on>=X.value-3?(pn=X.value,cn=X.value-4):X.value>7&&(cn=on-2,pn=on+2));for(let un=cn;un<=pn;un++)ln.push(un);return ln}),tn=on=>R("updateCurrentPage",on),an=on=>{const cn=parseInt(on);cn<=X.value&&cn>0?tn(cn):N.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${Z.value.errorText.replace(/\$page/g,X.value.toString())}`)};return onMounted(()=>{N=new Te}),()=>h$1("div",{class:"pagination-wrapper"},Q.value?h$1("div",{class:"pagination-list"},[h$1("div",{class:"page-number"},[d.current>1?h$1("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>tn(d.current-1)},Z.value.prev):null,...nn.value?[h$1("div",{role:"navigation",onClick:()=>tn(1)},1),h$1("div",{class:"ellipsis"},"...")]:[],...en.value.map(on=>h$1("div",{key:on,class:{active:d.current===on},role:"navigation",onClick:()=>tn(on)},on)),...sn.value?[h$1("div",{class:"ellipsis"},"..."),h$1("div",{role:"navigation",onClick:()=>tn(X.value)},X.value)]:[],d.current<X.value?h$1("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>tn(d.current+1)},Z.value.next):null]),h$1("div",{class:"navigate-wrapper"},[h$1("label",{for:"navigation-text"},`${Z.value.navigate}: `),h$1("input",{id:"navigation-text",value:j.value,onInput:({target:on})=>{j.value=on.value},onKeydown:on=>{on.key==="Enter"&&(on.preventDefault(),an(j.value))}}),h$1("button",{class:"navigate",role:"navigation",title:Z.value.action,onClick:()=>an(j.value)},Z.value.action)])]):[])}}),articleList="",ArticleList=defineComponent({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(d){const R=useRoute(),N=useRouter(),z=useBlogOptions(),j=ref(1),Z=computed(()=>z.value.articlePerPage||10),X=computed(()=>d.items.slice((j.value-1)*Z.value,j.value*Z.value)),Q=nn=>{j.value=nn;const sn={...R.query};sn.page===nn.toString()||nn===1&&!sn.page||(nn===1?delete sn.page:sn.page=nn.toString(),N.push({path:R.path,query:sn}))};return onMounted(()=>{const{page:nn}=R.query;Q(nn?Number(nn):1),watch(j,()=>{const sn=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,sn)},100)})}),()=>h$1("div",{id:"article-list",class:"article-wrapper"},X.value.length?[...X.value.map(({info:nn,path:sn},en)=>h$1(DropTransition,{appear:!0,delay:en*.04},()=>h$1(ArticleItem,{key:sn,info:nn,path:sn}))),h$1(Pagination,{current:j.value,perPage:Z.value,total:d.items.length,onUpdateCurrentPage:Q})]:h$1(EmptyIcon))}}),categoryList="",CategoryList=defineComponent({name:"CategoryList",setup(){const d=usePageData(),R=useCategoryMap();return()=>h$1("ul",{class:"category-list-wrapper"},Tt(R.value.map).map(([N,{path:z,items:j}])=>h$1("li",{class:["category",`category${fe(N,9)}`,{active:z===d.value.path}]},h$1(RouterLink,{to:z},()=>[N,h$1("span",{class:"category-num"},j.length)]))))}}),tagList="",TagList=defineComponent({name:"TagList",setup(){const d=usePageFrontmatter(),R=useTagMap(),N=z=>{var j;return z===((j=d.value.blog)==null?void 0:j.name)};return()=>h$1("ul",{class:"tag-list-wrapper"},Tt(R.value.map).map(([z,{path:j,items:Z}])=>h$1("li",{class:["tag",`tag${fe(z,9)}`,{active:N(z)}]},h$1(RouterLink,{to:j},()=>[z,h$1("span",{class:"tag-num"},Z.length)]))))}}),timelineList="",TimelineList=defineComponent({name:"TimelineList",setup(){const d=useThemeLocaleData(),R=useTimelines(),N=useNavigate(),z=computed(()=>d.value.blogLocales.timeline);return()=>h$1("div",{class:"timeline-list-wrapper"},[h$1("div",{class:"timeline-list-title",onClick:()=>N(R.value.path)},[h$1(TimelineIcon),h$1("span",{class:"num"},R.value.items.length),z.value]),h$1("hr"),h$1("div",{class:"timeline-content"},h$1("ul",{class:"timeline-list"},R.value.config.map(({year:j,items:Z},X)=>h$1(DropTransition,{appear:!0,delay:.08*(X+1)},()=>h$1("li",[h$1("h3",{class:"timeline-year"},j),h$1("ul",{class:"timeline-year-wrapper"},Z.map(({date:Q,info:nn,path:sn})=>h$1("li",{class:"timeline-item"},[h$1("span",{class:"timeline-date"},Q),h$1(RouterLink,{class:"timeline-title",to:sn},()=>nn.t)])))])))))])}}),infoList="",InfoList=defineComponent({name:"InfoList",setup(){const d=useThemeLocaleData(),R=useArticles(),N=useCategoryMap(),z=computed(()=>at(N.value.map).length),j=useStars(),Z=useTagMap(),X=computed(()=>at(Z.value.map).length),Q=useNavigate(),nn=ref("article"),sn=computed(()=>d.value.blogLocales),en=[["article",ArticleIcon],["category",CategoryIcon],["tag",TagIcon],["timeline",TimelineIcon]];return()=>h$1("div",{class:"blog-info-list"},[h$1("div",{class:"blog-type-wrapper"},en.map(([tn,an])=>h$1("button",{class:"blog-type-button",onClick:()=>{nn.value=tn}},h$1("div",{class:["icon-wrapper",{active:nn.value===tn}],"aria-label":sn.value[tn],"data-balloon-pos":"up"},h$1(an))))),h$1(DropTransition,()=>nn.value==="article"?h$1("div",{class:"sticky-article-wrapper"},[h$1("div",{class:"title",onClick:()=>Q(R.value.path)},[h$1(ArticleIcon),h$1("span",{class:"num"},R.value.items.length),sn.value.article]),h$1("hr"),h$1("ul",{class:"sticky-article-list"},j.value.items.map(({info:tn,path:an},on)=>h$1(DropTransition,{appear:!0,delay:.08*(on+1)},()=>h$1("li",{class:"sticky-article"},h$1(RouterLink,{to:an},()=>tn.t)))))]):nn.value==="category"?h$1("div",{class:"category-wrapper"},[z.value?h$1("div",{class:"title",onClick:()=>Q(N.value.path)},[h$1(CategoryIcon),h$1("span",{class:"num"},z.value),sn.value.category]):null,h$1("hr"),h$1(DropTransition,{delay:.04},()=>h$1(CategoryList))]):nn.value==="tag"?h$1("div",{class:"tag-wrapper"},[X.value?h$1("div",{class:"title",onClick:()=>Q(Z.value.path)},[h$1(TagIcon),h$1("span",{class:"num"},X.value),sn.value.tag]):null,h$1("hr"),h$1(DropTransition,{delay:.04},()=>h$1(TagList))]):h$1(DropTransition,()=>h$1(TimelineList)))])}}),page="",BlogWrapper=defineComponent({name:"BlogWrapper",setup(d,{slots:R}){const{isMobile:N}=useWindowSize();return()=>[h$1(SkipLink),h$1(CommonWrapper,{noSidebar:!0},{default:()=>{var z;return(z=R.default)==null?void 0:z.call(R)},navScreenBottom:()=>h$1(BloggerInfo),...N.value?{sidebar:()=>h$1(InfoList)}:{}})]}}),infoPanel="",InfoPanel=()=>h$1("aside",{class:"blog-info-wrapper"},[h$1(DropTransition,()=>h$1(BloggerInfo)),h$1(DropTransition,{delay:.04},()=>h$1(InfoList))]);InfoPanel.displayName="InfoPanel";const BlogCategory=defineComponent({name:"BlogPage",components:{CategoryList,TagList},setup(){const d=usePageData(),R=usePageFrontmatter(),N=useCategoryMap(),z=useTagMap(),j=computed(()=>R.value.blog||{}),Z=computed(()=>{const{key:Q=""}=j.value;return Q==="category"?"CategoryList":Q==="tag"?"TagList":null}),X=computed(()=>{const{name:Q="",key:nn=""}=j.value;return nn==="category"?Q?N.value.map[Q].items:[]:nn==="tag"?Q?z.value.map[Q].items:[]:[]});return()=>h$1(BlogWrapper,()=>h$1("div",{class:"page blog"},h$1("div",{class:"blog-page-wrapper"},[h$1("main",{class:"blog-main",id:"main-content"},[h$1(DropTransition,()=>Z.value?h$1(resolveComponent(Z.value)):null),j.value.name?h$1(DropTransition,{appear:!0,delay:.24},()=>h$1(ArticleList,{key:d.value.path,items:X.value})):null]),h$1(DropTransition,{delay:.16},()=>h$1(InfoPanel))])))}}),defaultHeroBgImagePath="/assets/hero-197a9d2d.jpg",blogHero="",BlogHero=defineComponent({name:"BlogHero",setup(){const d=usePageHeadTitle(),R=usePageFrontmatter(),N=ref(),z=computed(()=>R.value.heroImage||null),j=computed(()=>R.value.heroFullScreen||!1),Z=computed(()=>R.value.bgImage?withBase(R.value.bgImage):R.value.bgImage??defaultHeroBgImagePath);return()=>R.value.hero===!1?null:h$1("div",{ref:N,class:["blog-hero",{fullscreen:j.value,"no-bg":!Z.value}]},[Z.value?h$1("div",{class:"mask",style:{background:`url(${Z.value}) center/cover no-repeat`,...R.value.bgImageStyle}}):null,h$1(DropTransition,{appear:!0,delay:.04},()=>z.value?h$1("img",{class:"hero-image",style:R.value.heroImageStyle,src:withBase(z.value),alt:R.value.heroAlt||"hero image"}):null),h$1(DropTransition,{appear:!0,delay:.08},()=>R.value.heroText===!1?null:h$1("h1",R.value.heroText||d.value)),h$1(DropTransition,{appear:!0,delay:.12},()=>R.value.tagline?h$1("p",{class:"description",innerHTML:R.value.tagline}):null),j.value?h$1("button",{class:"slide-down-button",onClick:()=>{window.scrollTo({top:N.value.clientHeight,behavior:"smooth"})}},[h$1(SlideDownIcon),h$1(SlideDownIcon)]):null])}}),projectPanel="",AVAILABLE_PROJECT_TYPES=["link","article","book","project","friend"],ProjectPanel=defineComponent({name:"ProjectPanel",components:{ArticleIcon,BookIcon,FriendIcon,LinkIcon,ProjectIcon},setup(){const d=usePageFrontmatter(),R=usePure(),N=useNavigate(),z=(j="",Z="icon")=>AVAILABLE_PROJECT_TYPES.includes(j)?h$1(resolveComponent(`${j}-icon`)):isLinkHttp(j)?h$1("img",{src:j,alt:Z,class:"image"}):_e(j)?h$1("img",{src:withBase(j),alt:Z,class:"image"}):h$1(HopeIcon,{icon:j});return()=>{var j;return(j=d.value.projects)!=null&&j.length?h$1("div",{class:"project-panel"},d.value.projects.map(({icon:Z,link:X,name:Q,desc:nn},sn)=>h$1("div",{class:["project",{[`project${sn%9}`]:!R.value}],onClick:()=>N(X)},[z(Z,Q),h$1("div",{class:"name"},Q),h$1("div",{class:"desc"},nn)]))):null}}}),home="",BlogHome$1=defineComponent({name:"BlogHome",setup(){const d=useArticles();return()=>h$1("div",{class:"page blog"},[h$1(BlogHero),h$1("div",{class:"blog-page-wrapper"},[h$1("main",{class:"blog-home",id:"main-content"},[h$1(DropTransition,{appear:!0,delay:.16},()=>h$1(ProjectPanel)),h$1(DropTransition,{appear:!0,delay:.24},()=>h$1(ArticleList,{items:d.value.items}))]),h$1(DropTransition,{appear:!0,delay:.16},()=>h$1(InfoPanel))]),h$1(DropTransition,{appear:!0,delay:.28},()=>h$1(MarkdownContent))])}}),BlogHome=defineComponent({name:"BlogHome",setup(){return()=>h$1(BlogWrapper,()=>h$1(BlogHome$1))}}),articleType="",ArticleType=defineComponent({name:"ArticleType",setup(){const d=usePageData(),R=useRouteLocale(),N=useThemeLocaleData(),z=useArticles(),j=useStars(),Z=computed(()=>{const X=N.value.blogLocales;return[{text:X.all,path:z.value.path},{text:X.star,path:j.value.path},...[].map(({key:Q,path:nn})=>({text:X[Q],path:nn.replace(/^\//,R.value)}))]});return()=>h$1("ul",{class:"article-type-wrapper"},Z.value.map(X=>h$1("li",{class:["article-type",{active:X.path===d.value.path}]},h$1(RouterLink,{to:X.path},()=>X.text))))}}),BlogType=defineComponent({name:"BlogPage",setup(){const d=C(),R=usePageFrontmatter(),N=usePageData(),z=useArticles(),j=useStars(),Z=computed(()=>{const{key:X="",type:Q}=R.value.blog||{};return X==="star"?j.value.items:Q==="type"&&X?d.value.items:z.value.items});return()=>h$1(BlogWrapper,()=>h$1("div",{class:"page blog"},h$1("div",{class:"blog-page-wrapper"},[h$1("main",{class:"blog-main",id:"main-content"},[h$1(DropTransition,()=>h$1(ArticleType)),h$1(DropTransition,{appear:!0,delay:.24},()=>h$1(ArticleList,{key:N.value.path,items:Z.value}))]),h$1(DropTransition,{delay:.16},()=>h$1(InfoPanel))])))}}),timelineItems="",TimelineItems=defineComponent({name:"TimelineItems",setup(){const d=useBlogOptions(),R=useThemeLocaleData(),N=useTimelines(),z=computed(()=>d.value.timeline||R.value.blogLocales.timelineTitle),j=computed(()=>N.value.config.map(({year:Z})=>({title:Z.toString(),level:2,slug:Z.toString(),children:[]})));return()=>h$1("div",{class:"timeline-wrapper"},h$1("ul",{class:"timeline-content"},[h$1(DropTransition,()=>h$1("li",{class:"motto"},z.value)),h$1(TOC,{items:j.value}),...N.value.config.map(({year:Z,items:X},Q)=>h$1(DropTransition,{appear:!0,delay:.08*(Q+1),type:"group"},()=>[h$1("h3",{key:"title",id:Z,class:"timeline-year-title"},h$1("span",Z)),h$1("li",{key:"content",class:"timeline-year-list"},[h$1("ul",{class:"timeline-year-wrapper"},X.map(({date:nn,info:sn,path:en})=>h$1("li",{class:"timeline-item"},[h$1("span",{class:"timeline-date"},nn),h$1(RouterLink,{class:"timeline-title",to:en},()=>sn.t)])))])]))]))}}),Timeline=defineComponent({name:"Timeline",components:{ArticleType,CategoryList,TagList},setup(){return()=>h$1(BlogWrapper,()=>h$1("div",{class:"page blog"},h$1("div",{class:"blog-page-wrapper"},[h$1("main",{class:"blog-main",id:"main-content"},[h$1(DropTransition,{appear:!0,delay:.24},()=>h$1(TimelineItems))]),h$1(DropTransition,{delay:.16},()=>h$1(InfoPanel))])))}}),layout="",passwordModal="",PasswordModal=defineComponent({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(d,{emit:R}){const N=usePageFrontmatter(),z=useThemeLocaleData(),j=ref(""),Z=ref(!1),X=ref(!1),Q=computed(()=>z.value.encryptLocales);let nn=null;const sn=()=>{nn&&clearTimeout(nn),Z.value=!1,R("verify",j.value,X.value),nextTick().then(()=>{Z.value=!0,nn=setTimeout(()=>{Z.value=!1},1e3)})};return()=>h$1("div",{class:["password-layer",{expand:d.full||N.value.home}]},h$1("div",{class:"password-modal"},[h$1("div",{class:["hint",{tried:Z.value}]},Z.value?Q.value.errorHint:h$1(LockIcon,{"aria-label":Q.value.iconLabel})),h$1("div",{class:"password"},[h$1("input",{type:"password",value:j.value,placeholder:Q.value.placeholder,onInput:({target:en})=>{j.value=en.value},onKeydown:({key:en})=>{en==="Enter"&&sn()}})]),h$1("div",{class:"remember-password"},[h$1("input",{type:"checkbox",value:X.value,onChange:()=>X.value=!X.value}),Q.value.remember]),h$1("button",{class:"submit",onClick:()=>sn()},"OK")]))}}),r="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1],e=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],n=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],o=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],s=(d,R)=>{if(R<=0||R>d.length)throw Error(`Illegal len: ${R}`);let N,z,j=0;const Z=[];for(;j<R;){if(N=255&d[j++],Z.push(r[N>>2&63]),N=(3&N)<<4,j>=R){Z.push(r[63&N]);break}if(z=255&d[j++],N|=z>>4&15,Z.push(r[63&N]),N=(15&z)<<2,j>=R){Z.push(r[63&N]);break}z=255&d[j++],N|=z>>6&3,Z.push(r[63&N]),Z.push(r[63&z])}return Z.join("")},l=typeof process<"u"&&process&&typeof process.nextTick=="function"?typeof setImmediate=="function"?setImmediate:process.nextTick:setTimeout,f=(d,R,N,z)=>{let j,Z=d[R],X=d[R+1];return Z^=N[0],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[1],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[2],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[3],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[4],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[5],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[6],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[7],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[8],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[9],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[10],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[11],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[12],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[13],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[14],j=z[Z>>>24],j+=z[256|Z>>16&255],j^=z[512|Z>>8&255],j+=z[768|255&Z],X^=j^N[15],j=z[X>>>24],j+=z[256|X>>16&255],j^=z[512|X>>8&255],j+=z[768|255&X],Z^=j^N[16],d[R]=X^N[17],d[R+1]=Z,d},i=(d,R)=>{let N=0;for(let z=0;z<4;++z)N=N<<8|255&d[R],R=(R+1)%d.length;return{key:N,offp:R}},u=(d,R,N)=>{const z=R.length,j=N.length;let Z,X=0,Q=[0,0];for(let nn=0;nn<z;nn++)Z=i(d,X),X=Z.offp,R[nn]=R[nn]^Z.key;for(let nn=0;nn<z;nn+=2)Q=f(Q,0,R,N),R[nn]=Q[0],R[nn+1]=Q[1];for(let nn=0;nn<j;nn+=2)Q=f(Q,0,R,N),N[nn]=Q[0],N[nn+1]=Q[1]},h=(d,R,N,z,j)=>{const Z=o.slice(),X=Z.length;if(N<4||N>31){const an=new Error(`Illegal number of rounds (4-31): ${N}`);if(z===!1)return Promise.reject(an);throw an}if(R.length!==16){const an=new Error(`Illegal salt length: ${R.length} != 16`);if(z===!1)return Promise.reject(an);throw an}let Q,nn;N=1<<N>>>0;let sn,en=0;Int32Array?(Q=new Int32Array(e),nn=new Int32Array(n)):(Q=e.slice(),nn=n.slice()),((an,on,cn,pn)=>{const ln=cn.length,un=pn.length;let rn,vn=0,bn=[0,0];for(let _n=0;_n<ln;_n++)rn=i(on,vn),vn=rn.offp,cn[_n]=cn[_n]^rn.key;vn=0;for(let _n=0;_n<ln;_n+=2)rn=i(an,vn),vn=rn.offp,bn[0]^=rn.key,rn=i(an,vn),vn=rn.offp,bn[1]^=rn.key,bn=f(bn,0,cn,pn),cn[_n]=bn[0],cn[_n+1]=bn[1];for(let _n=0;_n<un;_n+=2)rn=i(an,vn),vn=rn.offp,bn[0]^=rn.key,rn=i(an,vn),vn=rn.offp,bn[1]^=rn.key,bn=f(bn,0,cn,pn),pn[_n]=bn[0],pn[_n+1]=bn[1]})(R,d,Q,nn);const tn=()=>{if(j&&j(en/N),!(en<N)){for(en=0;en<64;en++)for(sn=0;sn<X>>1;sn++)f(Z,sn<<1,Q,nn);const an=[];for(en=0;en<X;en++)an.push((Z[en]>>24&255)>>>0),an.push((Z[en]>>16&255)>>>0),an.push((Z[en]>>8&255)>>>0),an.push((255&Z[en])>>>0);return z===!1?Promise.resolve(an):an}{const an=Date.now();for(;en<N&&(en+=1,u(d,Q,nn),u(R,Q,nn),!(Date.now()-an>100)););}if(z===!1)return new Promise(an=>l(()=>{tn().then(an)}))};if(z===!1)return tn();{let an;for(;;)if((an=tn())!==void 0)return an||[]}},p=(d=10)=>{if(typeof d!="number")throw Error("Illegal arguments: "+typeof d);d<4?d=4:d>31&&(d=31);const R=[];return R.push("$2a$"),d<10&&R.push("0"),R.push(d.toString()),R.push("$"),R.push(s((N=>{try{let z;return(self.crypto||self.msCrypto).getRandomValues(z=new Uint32Array(N)),Array.prototype.slice.call(z)}catch{throw Error("WebCryptoAPI is not available")}})(16),16)),R.join("")};function g(d,R,N,z){if(typeof d!="string"||typeof R!="string"){const tn=new Error("Invalid string / salt: Not a string");if(N===!1)return Promise.reject(tn);throw tn}let j,Z;if(R.charAt(0)!=="$"||R.charAt(1)!=="2"){const tn=new Error("Invalid salt version: "+R.substring(0,2));if(N===!1)return Promise.reject(tn);throw tn}if(R.charAt(2)==="$")j=String.fromCharCode(0),Z=3;else{if(j=R.charAt(2),j!=="a"&&j!=="b"&&j!=="y"||R.charAt(3)!=="$"){const tn=Error("Invalid salt revision: "+R.substring(2,4));if(N===!1)return Promise.reject(tn);throw tn}Z=4}if(R.charAt(Z+2)>"$"){const tn=new Error("Missing salt rounds");if(N===!1)return Promise.reject(tn);throw tn}const X=10*parseInt(R.substring(Z,Z+1),10)+parseInt(R.substring(Z+1,Z+2),10),Q=R.substring(Z+3,Z+25),nn=(tn=>{const an=[];let on=0;var cn;return cn=pn=>{an.push(pn)},((pn,ln)=>{let un,rn=null;for(;(un=rn!==null?rn:pn())!==null;)un>=55296&&un<=57343&&(rn=pn())!==null&&rn>=56320&&rn<=57343?(ln(1024*(un-55296)+rn-56320+65536),rn=null):ln(un);rn!==null&&ln(rn)})(()=>on>=tn.length?null:tn.charCodeAt(on++),function(pn){((ln,un)=>{let rn=null;for(typeof ln=="number"&&(rn=ln,ln=()=>null);rn!==null||(rn=ln())!==null;)rn<128?un(127&rn):rn<2048?(un(rn>>6&31|192),un(63&rn|128)):rn<65536?(un(rn>>12&15|224),un(rn>>6&63|128),un(63&rn|128)):(un(rn>>18&7|240),un(rn>>12&63|128),un(rn>>6&63|128),un(63&rn|128)),rn=null})(pn,cn)}),an})(d+=j>="a"?"\0":""),sn=((tn,an)=>{if(an<=0)throw Error(`Illegal len: ${an}`);const on=tn.length;let cn,pn,ln,un,rn,vn,bn=0,_n=0;const In=[];for(;bn<on-1&&_n<an&&(vn=tn.charCodeAt(bn++),cn=vn<t.length?t[vn]:-1,vn=tn.charCodeAt(bn++),pn=vn<t.length?t[vn]:-1,cn!=-1&&pn!=-1)&&(rn=cn<<2>>>0,rn|=(48&pn)>>4,In.push(String.fromCharCode(rn)),!(++_n>=an||bn>=on))&&(vn=tn.charCodeAt(bn++),ln=vn<t.length?t[vn]:-1,ln!=-1)&&(rn=(15&pn)<<4>>>0,rn|=(60&ln)>>2,In.push(String.fromCharCode(rn)),!(++_n>=an||bn>=on));)vn=tn.charCodeAt(bn++),un=vn<t.length?t[vn]:-1,rn=(3&ln)<<6>>>0,rn|=un,In.push(String.fromCharCode(rn)),++_n;return In.map(Pn=>Pn.charCodeAt(0))})(Q,16),en=tn=>{const an=[];return an.push("$2"),j>="a"&&an.push(j),an.push("$"),X<10&&an.push("0"),an.push(X.toString()),an.push("$"),an.push(s(sn,sn.length)),an.push(s(tn,4*o.length-1)),an.join("")};return N===!1?h(nn,sn,X,!1,z).then(tn=>en(tn)):en(h(nn,sn,X,!0,z))}const c=(d,R=10)=>{if(typeof R=="number"&&(R=p(R)),typeof d!="string"||typeof R!="string")throw Error("Illegal arguments: "+typeof d+", "+typeof R);return g(d,R,!0)},m=(d,R)=>{if(typeof d!="string"||typeof R!="string")throw Error("Illegal arguments: "+typeof d+", "+typeof R);return R.length===60&&c(d,R.substring(0,R.length-31))===R},useEncryptData=()=>{const d=useThemeData();return computed(()=>d.value.encrypt||{})},STORAGE_KEY$1="VUEPRESS_HOPE_GLOBAL_TOKEN",useGlobalEncrypt=()=>{const d=useEncryptData(),R=useStorage(STORAGE_KEY$1,""),N=useSessionStorage(STORAGE_KEY$1,""),z=computed(()=>{const{global:X=!1,admin:Q=[]}=d.value;return X&&Q.length>0}),j=computed(()=>{if(z.value){if(R.value)return d.value.admin.some(X=>m(R.value,X));if(N.value)return d.value.admin.some(X=>m(N.value,X))}return!1});return{isEncrypted:z,isDecrypted:j,validate:(X,Q=!1)=>{(Q?R:N).value=X}}},checkToken=(d="",R)=>Boolean(d)&&m(d,R),STORAGE_KEY="VUEPRESS_HOPE_PATH_TOKEN",usePathEncrypt=()=>{const d=usePageData(),R=useEncryptData(),N=useStorage(STORAGE_KEY,{}),z=useSessionStorage(STORAGE_KEY,{}),j=nn=>isPlainObject(R.value.config)?at(R.value.config).filter(sn=>_t(decodeURI(nn),sn)).sort((sn,en)=>en.length-sn.length):[],Z=nn=>{const sn=j(nn);if(sn.length>0){const{config:en={}}=R.value;return{isEncrypted:!0,isDecrypted:sn.some(tn=>N.value[tn]&&en[tn].some(an=>checkToken(N.value[tn],an))||z.value[tn]&&en[tn].some(an=>checkToken(z.value[tn],an)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:computed(()=>Z(d.value.path)),getStatus:Z,validate:(nn,sn=!1)=>{const{config:en={}}=R.value,tn=j(d.value.path);for(const an of tn)if(en[an].filter(on=>checkToken(nn,on))){(sn?N:z).value[an]=nn;break}}}},GlobalEncrypt=defineComponent({name:"GlobalEncrypt",setup(d,{slots:R}){const{isDecrypted:N,isEncrypted:z,validate:j}=useGlobalEncrypt(),Z=ref(!1);return onMounted(()=>{Z.value=!0}),()=>h$1(FadeSlideY,()=>{var X,Q;return z.value?Z.value?N.value?(X=R.default)==null?void 0:X.call(R):h$1(PasswordModal,{full:!0,onVerify:j}):null:(Q=R.default)==null?void 0:Q.call(R)})}}),LocalEncrypt=defineComponent({name:"LocalEncrypt",setup(d,{slots:R}){const{status:N,validate:z}=usePathEncrypt(),j=ref(!1);return onMounted(()=>{j.value=!0}),()=>{var Q,nn;const{isEncrypted:Z,isDecrypted:X}=N.value;return Z?j.value?X?((Q=R.default)==null?void 0:Q.call(R))||null:h$1(PasswordModal,{full:!0,onVerify:z}):null:((nn=R.default)==null?void 0:nn.call(R))||null}}}),slidePage="";var v=defineComponent({name:"SlidePage",setup(){const d=useRouter(),R=ref(!1),N=ref(),z=()=>{R.value=!R.value},j=()=>{R.value=!1},Z=()=>{j(),window.history.go(-1)},X=()=>{j(),d.push("/")};return onClickOutside(N,j),()=>h$1("div",{class:"presentation"},[h$1(Content),h$1("div",{ref:N,class:["menu",{active:R.value}]},[h$1("button",{class:"menu-button",onClick:()=>z()},h$1("span",{class:"icon"})),h$1("button",{class:"back-button",onClick:()=>Z()},h$1(q$1)),h$1("button",{class:"home-button",onClick:()=>X()},h$1(a$1))])])}});const clientConfig10=defineClientConfig({enhance:({app:d,router:R})=>{const{scrollBehavior:N}=R.options;R.options.scrollBehavior=async(...z)=>(await useScrollPromise().wait(),N(...z)),injectDarkmode(d),d.component("HopeIcon",HopeIcon),d.component("BloggerInfo",BloggerInfo),d.component("GlobalEncrypt",GlobalEncrypt),d.component("LocalEncrypt",LocalEncrypt)},setup:()=>{setupDarkmode(),setupSidebarItems(),setupBlog()},layouts:{Layout,NotFound,BlogCategory,BlogHome,BlogType,Timeline,Slide:v}}),clientConfigs=[clientConfig0,clientConfig1,clientConfig2,K$1,clientConfig4,clientConfig5,clientConfig6,Y$1,clientConfig8,I,clientConfig10],pagesRoutes=[["v-8daa1a0e","/",{y:"h",t:"rz的文档",i:"home"},["/index.html","/README.md"]],["v-14679d9e","/algorithms/%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 常见算法</h1>
<h2> LRU</h2>
<p>最近没使用的会被淘汰，强调的是访问时间</p>
<p>最近只要使用过一次就不会被淘汰，无法正确表示一个 key 的热度</p>
<h2> LFU</h2>
<p>最近使用频率最少的会被淘汰，强调是使用频率</p>
<p>历史热门数据无法删除</p>
`,r:{minutes:.27,words:81},y:"a",t:"常见算法"},["/algorithms/常见算法.html","/algorithms/%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95","/algorithms/常见算法.md","/algorithms/%E5%B8%B8%E8%A7%81%E7%AE%97%E6%B3%95.md"]],["v-0f76b6d9","/ddd/DDD.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> DDD</h1>
<h2> 聚合实体</h2>
<p>是 ddd 的重要概念</p>
`,r:{minutes:.04,words:12},y:"a",t:"DDD"},["/ddd/DDD","/ddd/DDD.md"]],["v-626d1f23","/data-structure/%E5%A4%A7%E7%BA%B2.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 数据结构</h1>
<p>主要分为物理结构和逻辑结构
物理结构是内存中实实在在的存储结构
逻辑结构是抽象概念，依赖物理结构</p>
<h2> 物理结构</h2>
<p>顺序存储结构：数组
链式存储结构：链表
数组和链表都是线性数据结构</p>
<h2> 逻辑结构</h2>
<p>线性结构：顺序表，栈，队列
非线性结构：树，图</p>
<h2> 栈</h2>
<p>First In Last Out 简称 FILO
可以用数组实现，也可以用链表实现</p>
<h2> 队列</h2>
<p>First In First Out 简称 FIFO
可以用数组实现，也可以用链表实现</p>
<h2> 散列表</h2>`,r:{minutes:5.96,words:1787},y:"a",t:"数据结构"},["/data-structure/大纲.html","/data-structure/%E5%A4%A7%E7%BA%B2","/data-structure/大纲.md","/data-structure/%E5%A4%A7%E7%BA%B2.md"]],["v-f54f2f0e","/apue/CRLF.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> CRLF</h1>
<p>\\r 13 0xod</p>
<p>\\n 10 0xoa</p>
`,r:{minutes:.02,words:7},y:"a",t:"CRLF"},["/apue/CRLF","/apue/CRLF.md"]],["v-540b3114","/apue/IPC.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 三种 iPC</h1>
<h2> 共享内存</h2>
<p>共享存储允许两个或多个进程共享一个给定的存储区</p>
<p>因为数据不需要在客户进程和服务器进程之间复制，所以这是最快的一种 IPC</p>
<p>使用共享存储时要掌握的唯一窍门是，在多个进程之间同步访问一个给定的存储区</p>
<p>若服务器进程正在将数据放入共享存储区，则在它做完这一操作之前，客户进程不应当去取这些数据</p>
<p>通常，信号量用于同步共享存储访问，也可以用记录锁或互斥量</p>
<p>XSI 共享存储和内存映射的文件的不同之处在于，前者没有相关的文件</p>
`,r:{minutes:.65,words:194},y:"a",t:"三种 iPC"},["/apue/IPC","/apue/IPC.md"]],["v-ffbecaec","/apue/K8s.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> kubernetes</h1>
<h2> cfs</h2>
<p>默认情况下，kubelet 使用 CFS 配额来管理和执行 POD 的 CPU 限制。CFS 的方式在调度 CPU 时间片时是在宿主机的所有核心上面切换，实现最终的完全公平。这种方式会影响 CPU 缓存亲和性，在我们部分延迟敏感的业务场景下会带来<strong>性能延迟</strong>。</p>
<h2> cpuset</h2>
<p>为了解决这个问题，在这些业务场景下我们使用了 CPU 管理器的<strong>static 策略</strong>来优化性能。对 CPU 密集型业务及延时敏感业务来说，能够极大的降低容器虚拟化带来的性能损耗。</p>`,r:{minutes:1.3,words:391},y:"a",t:"kubernetes"},["/apue/K8s","/apue/K8s.md"]],["v-54a85011","/apue/Linux%E5%88%9D%E7%BA%A7%E6%8C%87%E4%BB%A4.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Linux 初级指令</h1>
<h3> <strong>ls</strong> ——List</h3>
<h4> ls 介绍</h4>
<p>这是我学 Linux 的第一个命令，相信也是很多人学习 Linux 的第一个命令。ls 全称 list.</p>
<blockquote>
<p>List information about the FILEs (the current directory by default). Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.</p>
<p>列出有关文件的信息(默认为当前目录)。如果没有指定-cftuvSUX 或——Sort，则按字母顺序排序。</p>
</blockquote>`,r:{minutes:68.11,words:20434},y:"a",t:"Linux 初级指令"},["/apue/Linux初级指令.html","/apue/Linux%E5%88%9D%E7%BA%A7%E6%8C%87%E4%BB%A4","/apue/Linux初级指令.md","/apue/Linux%E5%88%9D%E7%BA%A7%E6%8C%87%E4%BB%A4.md"]],["v-80f3353a","/apue/apue.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> apue</h1>
<ol>
<li>cd 到目录 make</li>
<li>在 lib 中生成了 libapue.a</li>
<li>将目录 include 中 apue.h 声明文件放入/usr/local/include 中</li>
<li>将目录 lib 中 libapue.a(3 中 apue.h 的实现)放入/usr/local/lib 中</li>
<li>gcc 的时候加上 -lapue</li>
</ol>
`,r:{minutes:.2,words:59},y:"a",t:"apue"},["/apue/apue","/apue/apue.md"]],["v-08d2adae","/apue/c%20primary.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> c primary</h1>
<p>c 语言有个特殊的东西数组名本身就代表地址
字符串其实是用字符类型的数组表示，而且不需要&amp;，因为数组名本身就代表地址</p>
`,r:{minutes:.18,words:55},y:"a",t:"c primary"},["/apue/c primary.html","/apue/c%20primary","/apue/c primary.md","/apue/c%20primary.md"]],["v-3dca5d6e","/apue/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> c 语言指针数组</h1>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span><span class="token comment">//此时p已经有内存地址</span>
<span class="token operator">*</span>p <span class="token operator">=</span> a<span class="token punctuation">;</span><span class="token comment">//这个操作是指针p指向的值 进行更新</span>

<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span> <span class="token comment">//此时指针p的值为a的内存地址</span>

<span class="token keyword">int</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> c1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
c本身是个指针，但是不可重新修改地址，而且c会自动转化为值，所以gdb p c打印出的是值，而 p <span class="token operator">&amp;</span>c打印出地址
<span class="token keyword">int</span> <span class="token operator">*</span>p <span class="token operator">=</span> c<span class="token punctuation">;</span><span class="token comment">//此操作就是地址赋值，但是 int *p = &amp;c (报错：从不兼容的指针类型初始化，当然只是warning)，数组c进行指针赋值，那么c就不能当成值来处理，和gdb 将c作值处理不一样的；</span>

<span class="token keyword">int</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span>
数组本质是指针常量，可以修改值，但是不可重新修改地址，在低地址段
p<span class="token operator">++</span>
c<span class="token operator">++</span>就是错的

p <span class="token operator">=</span> c
c <span class="token operator">=</span> c1 错的

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.25,words:376},y:"a",t:"c 语言指针数组"},["/apue/c语言指针数组.html","/apue/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84","/apue/c语言指针数组.md","/apue/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84.md"]],["v-b7c0262e","/apue/gcc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> gcc</h1>
<p><strong>GCC 参数详解</strong></p>
<p>[介绍]
gcc and g++分别是 gnu 的 c &amp; c++编译器
gcc/g++在执行编译工作的时候，总共需要 4 步 1.预处理，生成.i 的文件 2.将预处理后的文件转换成汇编语言，生成文件.s 3.由汇编变为目标代码(机器代码)，生成.o 的文件 4.连接目标代码，生成可执行程序</p>
<p>[参数详解]
-c<br>
　　只激活预处理,编译,和汇编,也就是他只把程序做成 obj 文件
　　例子用法:
　　 gcc -c hello.c
　　他将生成.o 的 obj 文件<br>
-S
　　只激活预处理和编译，就是指把文件编译成为汇编代码。
　　例子用法
　　 gcc -S hello.c
　　他将生成.s 的汇编代码，你可以用文本编辑器察看
-E
　　只激活预处理,这个不生成文件,你需要把它重定向到一个输出文件里
　　面.
　　例子用法:
　　 gcc -E hello.c &gt; pianoapan.txt
　　 gcc -E hello.c | more
　　慢慢看吧,一个 hello word 也要与处理成 800 行的代码
-o
　　制定目标名称,缺省的时候,gcc 编译出来的文件是 a.out,很难听,如果
　　你和我有同感，改掉它,哈哈
　　例子用法
　　 gcc -o hello.exe hello.c (哦,windows 用习惯了)
　　 gcc -o hello.asm -S hello.c
-ansi
　　关闭 gnu c 中与 ansi c 不兼容的特性,激活 ansi c 的专有特性(包括禁止一些 asm inline typeof 关键字,以及 UNIX,vax 等预处理宏,</p>`,r:{minutes:4.95,words:1484},y:"a",t:"gcc"},["/apue/gcc","/apue/gcc.md"]],["v-02f09a04","/apue/git.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> git</h1>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 删除 untracked files
git clean -f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 连 untracked 的目录也一起删掉
git clean -fd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.35,words:106},y:"a",t:"git"},["/apue/git","/apue/git.md"]],["v-05ab0988","/apue/http%20code.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> http code</h1>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
`,r:{minutes:.19,words:58},y:"a",t:"http code"},["/apue/http code.html","/apue/http%20code","/apue/http code.md","/apue/http%20code.md"]],["v-52b41d92","/apue/make-apue.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> make apue</h1>
<p>for i in lib intro sockets advio daemons datafiles db environ fileio filedir ipc1 ipc2 proc pty relation signals standards stdio termios threadctl threads printer exercises; do \\</p>
<p>​ (cd $i &amp;&amp; echo "making $i" &amp;&amp; /Applications/Xcode.app/Contents/Developer/usr/bin/make ) || exit 1; \\</p>`,r:{minutes:11,words:3300},y:"a",t:"make apue"},["/apue/make-apue","/apue/make-apue.md"]],["v-7a0becb0","/apue/mysql%E5%AD%97%E7%AC%A6%E9%9B%86.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> mysql 字符集</h1>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> SHOW VARIABLES LIKE <span class="token string">'character_set_client'</span><span class="token punctuation">;</span>
+----------------------+---------+
<span class="token operator">|</span> Variable_name        <span class="token operator">|</span> Value   <span class="token operator">|</span>
+----------------------+---------+
<span class="token operator">|</span> character_set_client <span class="token operator">|</span> utf8mb4 <span class="token operator">|</span>
+----------------------+---------+
<span class="token number">1</span> row <span class="token keyword">in</span> set, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> SHOW VARIABLES LIKE <span class="token string">'character_set_connection'</span><span class="token punctuation">;</span>
+--------------------------+---------+
<span class="token operator">|</span> Variable_name            <span class="token operator">|</span> Value   <span class="token operator">|</span>
+--------------------------+---------+
<span class="token operator">|</span> character_set_connection <span class="token operator">|</span> utf8mb4 <span class="token operator">|</span>
+--------------------------+---------+
<span class="token number">1</span> row <span class="token keyword">in</span> set, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span> SHOW VARIABLES LIKE <span class="token string">'character_set_results'</span><span class="token punctuation">;</span>
+-----------------------+---------+
<span class="token operator">|</span> Variable_name         <span class="token operator">|</span> Value   <span class="token operator">|</span>
+-----------------------+---------+
<span class="token operator">|</span> character_set_results <span class="token operator">|</span> utf8mb4 <span class="token operator">|</span>
+-----------------------+---------+
<span class="token number">1</span> row <span class="token keyword">in</span> set, <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.97,words:290},y:"a",t:"mysql 字符集"},["/apue/mysql字符集.html","/apue/mysql%E5%AD%97%E7%AC%A6%E9%9B%86","/apue/mysql字符集.md","/apue/mysql%E5%AD%97%E7%AC%A6%E9%9B%86.md"]],["v-2883b3a5","/apue/nginx%E9%85%8D%E7%BD%AE.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Nginx 配置</h1>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>user www-data;
worker_processes 36;
worker_cpu_affinity

error_log /data/log/nginx/error-logger error;
pid /var/run/nginx.pid;

worker_rlimit_nofile 262144;

load_module /etc/nginx/modules/or_http_t1k_core_module.so;

events {
 worker_connections 131072;
 use epoll;
 accept_mutex on;
 multi_accept on;
}


http {

 lua_package_path "/etc/nginx/lua/openresty/utils/lua-resty-balancer/lib/?.lua;/etc/nginx/lua/openresty/utils/lua-resty-http/lib/?.lua;/etc/nginx/lua/openresty/utils/lua-cjson/lua/?.lua;/etc/nginx/lua/openresty/utils/lua-resty-consul/lib/?.lua;/etc/nginx/lua/openresty/utils/lua-resty-upstream-healthcheck/lib/?.lua;/etc/nginx/lua/openresty/core/?.lua;/etc/nginx/lua/openresty/?.lua;;";

 lua_max_pending_timers 10240;
 lua_max_running_timers 10240;

 lua_shared_dict shd_upstream 60m;
 lua_shared_dict shd_index 30m;
 lua_shared_dict shd_healthcheck 30m;
 lua_shared_dict flood_protect 64m;

 lua_socket_log_errors off;

 log_not_found off;
 sendfile on;

 ##
 # Basic Settings
 ##

 include /etc/nginx/mime.types;
 default_type application/octet-stream;

 # double size of page (get : getconf PAGESIZE)
 client_max_body_size 12m;
 client_header_buffer_size 128k;
 #open_file_cache max=150000 inactive=20s;
 #open_file_cache_valid 2s;
 #open_file_cache_min_uses 1;
 large_client_header_buffers 4 256k;

 client_body_buffer_size 8k; #Double to PAGESIZE
 proxy_connect_timeout 500ms; #nginx跟后端服务器连接超时时间(代理连接超时)
 proxy_send_timeout 3s; #后端服务器数据回传时间(代理发送超时)
 proxy_read_timeout 3s; #连接成功后，后端服务器响应时间(代理接收超时)

 proxy_buffering on; #Close for high speed response
 proxy_buffer_size 32k; #代理请求缓存区_这个缓存区间会保存用户的头信息以供Nginx进行规则处理_一般只要能保存下头信息即可
 proxy_buffers 4 32k; #proxy_buffers缓冲区 默认情况也为分页大小，根据操作系统的不同可能是4k或者8k。
 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）

 proxy_temp_file_write_size 100M; #设定缓存文件夹大小，大于这个值，将从upstream服务器传递请求，而不缓冲到磁盘
 proxy_ignore_client_abort on; #不允许代理端主动关闭连接

 proxy_intercept_errors on; #使nginx阻止HTTP应答代码为400或者更高的应答。
 proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504; #When updating or error use cache
 proxy_pass_header Server; #server direct return
 proxy_hide_header X-Debug; #Ignore proxy server data
 proxy_hide_header X-Via; #Ignore proxy server data
 #proxy_hide_header Bili-Status-Code;
 proxy_next_upstream_tries 2;
 proxy_next_upstream error timeout invalid_header non_idempotent;
 recursive_error_pages on;

 fastcgi_connect_timeout 300ms;
 fastcgi_send_timeout 1s;
 fastcgi_read_timeout 1s;
 #first response buffer size
 fastcgi_buffer_size 256K;
 #continue response buffer size
 fastcgi_buffers 32 256K;
 #busy buffer
 fastcgi_busy_buffers_size 2048k;
 fastcgi_temp_file_write_size 2048k;

 #tcp_nopush: Sends the HTTP response headers in one packet.
 tcp_nopush on;

 #keepalive_timeout 0;
 keepalive_timeout 5;
 # make it small for hard load server

 #tcp_nodelay: Disables the Nagle buffering algorithm. Well, that cleared that one up!
 # General web use does require a response from the client , tune it to off
 tcp_nodelay on;

 types_hash_max_size 2048;

 server_names_hash_bucket_size 256;

 server_tokens off;

 ##
 # Gzip Settings
 ##
 gzip off;
 gzip_disable msie6;

 #turn on proxy GZIP
 gzip_proxied any;

 gzip_vary off;
 # gzip_proxied any;
 # gzip_comp_level 6;
 gzip_buffers 16 8k;
 gzip_http_version 1.0;
 gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


 proxy_temp_path /dev/shm/proxy_temp;
 fastcgi_temp_path /dev/shm/fastcgi_temp;
 client_body_temp_path /dev/shm/client_temp;
 index index.htm index.html index.php;

 include /etc/nginx/conf.d/*.conf;
 include /etc/nginx/sites-enabled/*;

 ##
 # Logging Settings
 ##

 #access_log /dev/shm/logger logger;
 access_log /data/log/nginx/logger logger;

}
Process finished with exit code 0

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.13,words:640},y:"a",t:"Nginx 配置"},["/apue/nginx配置.html","/apue/nginx%E9%85%8D%E7%BD%AE","/apue/nginx配置.md","/apue/nginx%E9%85%8D%E7%BD%AE.md"]],["v-31fb3d4e","/apue/openssl-ca.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> CA</h1>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CA方 ca的私钥
openssl genrsa -des3 -out ca.key 2048

CA方 生成自签名证书(ca) -x509
openssl req -new -x509 -days 3650 -key ca.key -out ca.crt -config openssl.cnf
ca.crt很重要

server 生成私钥
openssl genrsa -out server.key 2048

server 生成需要签名的证书
openssl req -new -key server.key -out server.csr -config openssl.cnf
将server.csr 传给ca签名

CA 签名server的证书
openssl ca -in server.csr -cert ca.crt -keyfile ca.key -out server.crt -config openssl.cnf

将server.crt传给server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.26,words:378},y:"a",t:"CA"},["/apue/openssl-ca","/apue/openssl-ca.md"]],["v-4cd385cc","/apue/signal.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> signal</h1>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>中断字符 Ctrl + c  SIGINT
退出字符 Ctrl + \\  SIGQUIT
挂起字符 Ctrl + z  SIGTSTP
EOF Ctrl + d

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.08,words:24},y:"a",t:"signal"},["/apue/signal","/apue/signal.md"]],["v-08db3ce7","/apue/stdio.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> stdio</h1>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * Copyright (c) 2000, 2005, 2007, 2009, 2010 Apple Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 *
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 *
 * @APPLE_LICENSE_HEADER_END@
 */</span>
<span class="token comment">/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \`\`AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)stdio.h	8.5 (Berkeley) 4/29/95
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span>	<span class="token expression">_STDIO_H_</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">_STDIO_H_</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;_stdio.h&gt;</span></span>

__BEGIN_DECLS
<span class="token keyword">extern</span> FILE <span class="token operator">*</span>__stdinp<span class="token punctuation">;</span>
<span class="token keyword">extern</span> FILE <span class="token operator">*</span>__stdoutp<span class="token punctuation">;</span>
<span class="token keyword">extern</span> FILE <span class="token operator">*</span>__stderrp<span class="token punctuation">;</span>
__END_DECLS

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SLBF</span>	<span class="token expression"><span class="token number">0x0001</span>		</span><span class="token comment">/* line buffered */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SNBF</span>	<span class="token expression"><span class="token number">0x0002</span>		</span><span class="token comment">/* unbuffered */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SRD</span>	<span class="token expression"><span class="token number">0x0004</span>		</span><span class="token comment">/* OK to read */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SWR</span>	<span class="token expression"><span class="token number">0x0008</span>		</span><span class="token comment">/* OK to write */</span></span>
	<span class="token comment">/* RD and WR are never simultaneously asserted */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SRW</span>	<span class="token expression"><span class="token number">0x0010</span>		</span><span class="token comment">/* open for reading &amp; writing */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SEOF</span>	<span class="token expression"><span class="token number">0x0020</span>		</span><span class="token comment">/* found EOF */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SERR</span>	<span class="token expression"><span class="token number">0x0040</span>		</span><span class="token comment">/* found error */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SMBF</span>	<span class="token expression"><span class="token number">0x0080</span>		</span><span class="token comment">/* _buf is from malloc */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SAPP</span>	<span class="token expression"><span class="token number">0x0100</span>		</span><span class="token comment">/* fdopen()ed in append mode */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SSTR</span>	<span class="token expression"><span class="token number">0x0200</span>		</span><span class="token comment">/* this is an sprintf/snprintf string */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SOPT</span>	<span class="token expression"><span class="token number">0x0400</span>		</span><span class="token comment">/* do fseek() optimisation */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SNPT</span>	<span class="token expression"><span class="token number">0x0800</span>		</span><span class="token comment">/* do not do fseek() optimisation */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SOFF</span>	<span class="token expression"><span class="token number">0x1000</span>		</span><span class="token comment">/* set iff _offset is in fact correct */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">__SMOD</span>	<span class="token expression"><span class="token number">0x2000</span>		</span><span class="token comment">/* true =&gt; fgetln modified _p text */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__SALC</span>  <span class="token expression"><span class="token number">0x4000</span>		</span><span class="token comment">/* allocate string space dynamically */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__SIGN</span>  <span class="token expression"><span class="token number">0x8000</span>		</span><span class="token comment">/* ignore this file in _fwalk */</span></span>

<span class="token comment">/*
 * The following three definitions are for ANSI C, which took them
 * from System V, which brilliantly took internal interface macros and
 * made them official arguments to setvbuf(), without renaming them.
 * Hence, these ugly _IOxxx names are *supposed* to appear in user code.
 *
 * Although numbered as their counterparts above, the implementation
 * does not rely on this.
 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">_IOFBF</span>	<span class="token expression"><span class="token number">0</span>		</span><span class="token comment">/* setvbuf should set fully buffered */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">_IOLBF</span>	<span class="token expression"><span class="token number">1</span>		</span><span class="token comment">/* setvbuf should set line buffered */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">_IONBF</span>	<span class="token expression"><span class="token number">2</span>		</span><span class="token comment">/* setvbuf should set unbuffered */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">BUFSIZ</span>	<span class="token expression"><span class="token number">1024</span>		</span><span class="token comment">/* size of buffer used by setbuf */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">EOF</span>	<span class="token expression"><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span></span>

				<span class="token comment">/* must be == _POSIX_STREAM_MAX &lt;limits.h&gt; */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">FOPEN_MAX</span>	<span class="token expression"><span class="token number">20</span>	</span><span class="token comment">/* must be &lt;= OPEN_MAX &lt;sys/syslimits.h&gt; */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">FILENAME_MAX</span>	<span class="token expression"><span class="token number">1024</span>	</span><span class="token comment">/* must be &lt;= PATH_MAX &lt;sys/syslimits.h&gt; */</span></span>

<span class="token comment">/* System V/ANSI C; this is the wrong way to do this, do *not* use these. */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">_ANSI_SOURCE</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">P_tmpdir</span>	<span class="token string">"/var/tmp/"</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">L_tmpnam</span>	<span class="token expression"><span class="token number">1024</span>	</span><span class="token comment">/* XXX must be == PATH_MAX */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">TMP_MAX</span>		<span class="token expression"><span class="token number">308915776</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression"><span class="token constant">SEEK_SET</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">SEEK_SET</span>	<span class="token expression"><span class="token number">0</span>	</span><span class="token comment">/* set file offset to offset */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression"><span class="token constant">SEEK_CUR</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">SEEK_CUR</span>	<span class="token expression"><span class="token number">1</span>	</span><span class="token comment">/* set file offset to current plus offset */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression"><span class="token constant">SEEK_END</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">SEEK_END</span>	<span class="token expression"><span class="token number">2</span>	</span><span class="token comment">/* set file offset to EOF plus offset */</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">stdin</span>	<span class="token expression">__stdinp</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">stdout</span>	<span class="token expression">__stdoutp</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">stderr</span>	<span class="token expression">__stderrp</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">_DARWIN_UNLIMITED_STREAMS</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__IPHONE_OS_VERSION_MIN_REQUIRED<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> __IPHONE_OS_VERSION_MIN_REQUIRED <span class="token operator">&lt;</span> __IPHONE_3_2</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">error</span> <span class="token string">"_DARWIN_UNLIMITED_STREAMS specified, but -miphoneos-version-min version does not support it."</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__MAC_OS_X_VERSION_MIN_REQUIRED<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> __MAC_OS_X_VERSION_MIN_REQUIRED <span class="token operator">&lt;</span> __MAC_10_6</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">error</span> <span class="token string">"_DARWIN_UNLIMITED_STREAMS specified, but -mmacosx-version-min version does not support it."</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token comment">/* ANSI-C */</span>

__BEGIN_DECLS
<span class="token keyword">void</span>	 <span class="token function">clearerr</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fclose</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">feof</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">ferror</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fflush</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fgetc</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fgetpos</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token class-name">fpos_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">fgets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_UNLIMITED_STREAMS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_C_SOURCE<span class="token punctuation">)</span></span></span>
FILE	<span class="token operator">*</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __mode<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_3_2<span class="token punctuation">,</span> <span class="token function">__DARWIN_EXTSN</span><span class="token punctuation">(</span>fopen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span> <span class="token comment">/* !_DARWIN_UNLIMITED_STREAMS &amp;&amp; !_DARWIN_C_SOURCE */</span></span>
FILE	<span class="token operator">*</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __filename<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __mode<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_2_0<span class="token punctuation">,</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>fopen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* (DARWIN_UNLIMITED_STREAMS || _DARWIN_C_SOURCE) */</span></span>
<span class="token keyword">int</span>	 <span class="token function">fprintf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fputc</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fputs</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> FILE <span class="token operator">*</span> __restrict<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>fputs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">size_t</span>	 <span class="token function">fread</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> __restrict __ptr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __size<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __nitems<span class="token punctuation">,</span> FILE <span class="token operator">*</span> __restrict __stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
FILE	<span class="token operator">*</span><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span>
                 FILE <span class="token operator">*</span> __restrict<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>freopen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fscanf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fseek</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fsetpos</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token class-name">fpos_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span>	 <span class="token function">ftell</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">size_t</span>	 <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span> __restrict __ptr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __size<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __nitems<span class="token punctuation">,</span> FILE <span class="token operator">*</span> __restrict __stream<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>fwrite<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">getc</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">gets</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span>	 <span class="token function">perror</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">printf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">putc</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">puts</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">rename</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__old<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__new<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span>	 <span class="token function">rewind</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span>	 <span class="token function">setbuf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">setvbuf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token class-name">size_t</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token function">__swift_unavailable</span><span class="token punctuation">(</span><span class="token string">"Use snprintf instead."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">sscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
FILE	<span class="token operator">*</span><span class="token function">tmpfile</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">__swift_unavailable</span><span class="token punctuation">(</span><span class="token string">"Use mkstemp(3) instead."</span><span class="token punctuation">)</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>_POSIX_C_SOURCE<span class="token punctuation">)</span></span></span>
<span class="token function">__deprecated_msg</span><span class="token punctuation">(</span><span class="token string">"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead."</span><span class="token punctuation">)</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">tmpnam</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">ungetc</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vfprintf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vprintf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vsprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">__swift_unavailable</span><span class="token punctuation">(</span><span class="token string">"Use vsnprintf instead."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS



<span class="token comment">/* Additional functionality provided by:
 * POSIX.1-1988
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">198808L</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name">L_ctermid</span>	<span class="token expression"><span class="token number">1024</span>	</span><span class="token comment">/* size for ctermid(); PATH_MAX */</span></span>

__BEGIN_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">__CTERMID_DEFINED</span></span>
<span class="token comment">/* Multiply defined in stdio.h and unistd.h by SUS */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__CTERMID_DEFINED</span> <span class="token expression"><span class="token number">1</span></span></span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">ctermid</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_UNLIMITED_STREAMS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_C_SOURCE<span class="token punctuation">)</span></span></span>
FILE	<span class="token operator">*</span><span class="token function">fdopen</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_3_2<span class="token punctuation">,</span> <span class="token function">__DARWIN_EXTSN</span><span class="token punctuation">(</span>fdopen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span> <span class="token comment">/* !_DARWIN_UNLIMITED_STREAMS &amp;&amp; !_DARWIN_C_SOURCE */</span></span>
FILE	<span class="token operator">*</span><span class="token function">fdopen</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_2_0<span class="token punctuation">,</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>fdopen<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* (DARWIN_UNLIMITED_STREAMS || _DARWIN_C_SOURCE) */</span></span>
<span class="token keyword">int</span>	 <span class="token function">fileno</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 198808L */</span></span>


<span class="token comment">/* Additional functionality provided by:
 * POSIX.2-1992 C Language Binding Option
 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">TARGET_OS_EMBEDDED</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">__swift_unavailable_on</span><span class="token expression"><span class="token punctuation">(</span>osx_msg<span class="token punctuation">,</span> ios_msg<span class="token punctuation">)</span> <span class="token function">__swift_unavailable</span><span class="token punctuation">(</span>ios_msg<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">__swift_unavailable_on</span><span class="token expression"><span class="token punctuation">(</span>osx_msg<span class="token punctuation">,</span> ios_msg<span class="token punctuation">)</span> <span class="token function">__swift_unavailable</span><span class="token punctuation">(</span>osx_msg<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">199209L</span></span></span>
__BEGIN_DECLS
<span class="token keyword">int</span>	 <span class="token function">pclose</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">__swift_unavailable_on</span><span class="token punctuation">(</span><span class="token string">"Use posix_spawn APIs or NSTask instead."</span><span class="token punctuation">,</span> <span class="token string">"Process spawning is unavailable."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_UNLIMITED_STREAMS<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_C_SOURCE<span class="token punctuation">)</span></span></span>
FILE	<span class="token operator">*</span><span class="token function">popen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_3_2<span class="token punctuation">,</span> <span class="token function">__DARWIN_EXTSN</span><span class="token punctuation">(</span>popen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">__swift_unavailable_on</span><span class="token punctuation">(</span><span class="token string">"Use posix_spawn APIs or NSTask instead."</span><span class="token punctuation">,</span> <span class="token string">"Process spawning is unavailable."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span> <span class="token comment">/* !_DARWIN_UNLIMITED_STREAMS &amp;&amp; !_DARWIN_C_SOURCE */</span></span>
FILE	<span class="token operator">*</span><span class="token function">popen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS_STARTING</span><span class="token punctuation">(</span>__MAC_10_6<span class="token punctuation">,</span> __IPHONE_2_0<span class="token punctuation">,</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>popen<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">__swift_unavailable_on</span><span class="token punctuation">(</span><span class="token string">"Use posix_spawn APIs or NSTask instead."</span><span class="token punctuation">,</span> <span class="token string">"Process spawning is unavailable."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* (DARWIN_UNLIMITED_STREAMS || _DARWIN_C_SOURCE) */</span></span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 199209L */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">undef</span> <span class="token expression">__swift_unavailable_on</span></span>

<span class="token comment">/* Additional functionality provided by:
 * POSIX.1c-1995,
 * POSIX.1i-1995,
 * and the omnibus ISO/IEC 9945-1: 1996
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">199506L</span></span></span>

<span class="token comment">/* Functions internal to the implementation. */</span>
__BEGIN_DECLS
<span class="token keyword">int</span>	<span class="token function">__srget</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	<span class="token function">__svfscanf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	<span class="token function">__swbuf</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS

<span class="token comment">/*
 * The __sfoo macros are here so that we can
 * define function versions in the C library.
 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sgetc</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">--</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token function">__srget</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span>__GNUC__<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">defined</span><span class="token punctuation">(</span>__STDC__<span class="token punctuation">)</span></span></span>
__header_always_inline <span class="token keyword">int</span> <span class="token function">__sputc</span><span class="token punctuation">(</span><span class="token keyword">int</span> _c<span class="token punctuation">,</span> FILE <span class="token operator">*</span>_p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>_p<span class="token operator">-&gt;</span>_w <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_p<span class="token operator">-&gt;</span>_w <span class="token operator">&gt;=</span> _p<span class="token operator">-&gt;</span>_lbfsize <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>_c <span class="token operator">!=</span> <span class="token char">'\\n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">*</span>_p<span class="token operator">-&gt;</span>_p<span class="token operator">++</span> <span class="token operator">=</span> _c<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span>
		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">__swbuf</span><span class="token punctuation">(</span>_c<span class="token punctuation">,</span> _p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
<span class="token comment">/*
 * This has been tuned to generate reasonable code on the vax using pcc.
 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sputc</span><span class="token expression"><span class="token punctuation">(</span>c<span class="token punctuation">,</span> p<span class="token punctuation">)</span> </span><span class="token punctuation">\\</span>
	<span class="token expression"><span class="token punctuation">(</span><span class="token operator">--</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_w <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_w <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_lbfsize <span class="token operator">?</span> </span><span class="token punctuation">\\</span>
			<span class="token expression"><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p <span class="token operator">!=</span> </span><span class="token char">'\\n'</span> <span class="token expression"><span class="token operator">?</span> </span><span class="token punctuation">\\</span>
				<span class="token expression"><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p<span class="token operator">++</span> <span class="token operator">:</span> </span><span class="token punctuation">\\</span>
				<span class="token expression"><span class="token function">__swbuf</span><span class="token punctuation">(</span></span><span class="token char">'\\n'</span><span class="token expression"><span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">:</span> </span><span class="token punctuation">\\</span>
			<span class="token expression"><span class="token function">__swbuf</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">:</span> </span><span class="token punctuation">\\</span>
		<span class="token expression"><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_p<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sfeof</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_flags <span class="token operator">&amp;</span> __SEOF<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sferror</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_flags <span class="token operator">&amp;</span> __SERR<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sclearerr</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_flags <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token punctuation">(</span>__SERR<span class="token operator">|</span>__SEOF<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">__sfileno</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">-&gt;</span>_file<span class="token punctuation">)</span></span></span>

__BEGIN_DECLS
<span class="token keyword">void</span>	 <span class="token function">flockfile</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">ftrylockfile</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span>	 <span class="token function">funlockfile</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">getc_unlocked</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">getchar_unlocked</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">putc_unlocked</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">putchar_unlocked</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Removed in Issue 6 */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>_POSIX_C_SOURCE<span class="token punctuation">)</span> <span class="token operator">||</span> _POSIX_C_SOURCE <span class="token operator">&lt;</span> <span class="token number">200112L</span></span></span>
<span class="token keyword">int</span>	 <span class="token function">getw</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">putw</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token function">__swift_unavailable</span><span class="token punctuation">(</span><span class="token string">"Use mkstemp(3) instead."</span><span class="token punctuation">)</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>_POSIX_C_SOURCE<span class="token punctuation">)</span></span></span>
<span class="token function">__deprecated_msg</span><span class="token punctuation">(</span><span class="token string">"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead."</span><span class="token punctuation">)</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">tempnam</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__dir<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>__prefix<span class="token punctuation">)</span> <span class="token function">__DARWIN_ALIAS</span><span class="token punctuation">(</span>tempnam<span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">lint</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">getc_unlocked</span><span class="token expression"><span class="token punctuation">(</span>fp<span class="token punctuation">)</span>	<span class="token function">__sgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">putc_unlocked</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span> fp<span class="token punctuation">)</span>	<span class="token function">__sputc</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> fp<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* lint */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">getchar_unlocked</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token function">getc_unlocked</span><span class="token punctuation">(</span><span class="token constant">stdin</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">putchar_unlocked</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">)</span>	<span class="token function">putc_unlocked</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token constant">stdout</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 199506L */</span></span>



<span class="token comment">/* Additional functionality provided by:
 * POSIX.1-2001
 * ISO C99
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">200112L</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/_types/_off_t.h&gt;</span></span>

__BEGIN_DECLS
<span class="token keyword">int</span>	 <span class="token function">fseeko</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __stream<span class="token punctuation">,</span> <span class="token class-name">off_t</span> __offset<span class="token punctuation">,</span> <span class="token keyword">int</span> __whence<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">off_t</span>	 <span class="token function">ftello</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 200112L */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">200112L</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>_C99_SOURCE<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span>
__BEGIN_DECLS
<span class="token keyword">int</span>	 <span class="token function">snprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> __restrict __str<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __size<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __format<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vfscanf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span> __restrict __stream<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __format<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __format<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vsnprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span> __restrict __str<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __size<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __format<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vsscanf</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __str<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __format<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__scanflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 200112L || defined(_C99_SOURCE) || defined(__cplusplus) */</span></span>



<span class="token comment">/* Additional functionality provided by:
 * POSIX.1-2008
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> <span class="token number">200809L</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/_types/_ssize_t.h&gt;</span></span>

__BEGIN_DECLS
<span class="token keyword">int</span>	<span class="token function">dprintf</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token function">__OSX_AVAILABLE_STARTING</span><span class="token punctuation">(</span>__MAC_10_7<span class="token punctuation">,</span> __IPHONE_4_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	<span class="token function">vdprintf</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">__OSX_AVAILABLE_STARTING</span><span class="token punctuation">(</span>__MAC_10_7<span class="token punctuation">,</span> __IPHONE_4_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">getdelim</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> __restrict __linep<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span> __restrict __linecapp<span class="token punctuation">,</span> <span class="token keyword">int</span> __delimiter<span class="token punctuation">,</span> FILE <span class="token operator">*</span> __restrict __stream<span class="token punctuation">)</span> <span class="token function">__OSX_AVAILABLE_STARTING</span><span class="token punctuation">(</span>__MAC_10_7<span class="token punctuation">,</span> __IPHONE_4_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">getline</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> __restrict __linep<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span> __restrict __linecapp<span class="token punctuation">,</span> FILE <span class="token operator">*</span> __restrict __stream<span class="token punctuation">)</span> <span class="token function">__OSX_AVAILABLE_STARTING</span><span class="token punctuation">(</span>__MAC_10_7<span class="token punctuation">,</span> __IPHONE_4_3<span class="token punctuation">)</span><span class="token punctuation">;</span>
FILE <span class="token operator">*</span><span class="token function">fmemopen</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> __restrict __buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> __size<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict __mode<span class="token punctuation">)</span> <span class="token function">__API_AVAILABLE</span><span class="token punctuation">(</span><span class="token function">macos</span><span class="token punctuation">(</span><span class="token number">10.13</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ios</span><span class="token punctuation">(</span><span class="token number">11.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">tvos</span><span class="token punctuation">(</span><span class="token number">11.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">watchos</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
FILE <span class="token operator">*</span><span class="token function">open_memstream</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>__bufp<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span>__sizep<span class="token punctuation">)</span> <span class="token function">__API_AVAILABLE</span><span class="token punctuation">(</span><span class="token function">macos</span><span class="token punctuation">(</span><span class="token number">10.13</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">ios</span><span class="token punctuation">(</span><span class="token number">11.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">tvos</span><span class="token punctuation">(</span><span class="token number">11.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">watchos</span><span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= 200809L */</span></span>



<span class="token comment">/* Darwin extensions */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression">__DARWIN_C_LEVEL <span class="token operator">&gt;=</span> __DARWIN_C_FULL</span></span>
__BEGIN_DECLS
<span class="token keyword">extern</span> __const <span class="token keyword">int</span> sys_nerr<span class="token punctuation">;</span>		<span class="token comment">/* perror(3) external variables */</span>
<span class="token keyword">extern</span> __const <span class="token keyword">char</span> <span class="token operator">*</span>__const sys_errlist<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span>	 <span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">ctermid_r</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token function">fgetln</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__const <span class="token keyword">char</span> <span class="token operator">*</span><span class="token function">fmtcheck</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">fpurge</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span>	 <span class="token function">setbuffer</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">setlinebuf</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span>	 <span class="token function">vasprintf</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span> __restrict<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> __restrict<span class="token punctuation">,</span> va_list<span class="token punctuation">)</span> <span class="token function">__printflike</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
FILE	<span class="token operator">*</span><span class="token function">zopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/*
 * Stdio function-access interface.
 */</span>
FILE	<span class="token operator">*</span><span class="token function">funopen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span>
                 <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span> _Nullable<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                 <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span> _Nullable<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                 <span class="token class-name">fpos_t</span> <span class="token punctuation">(</span><span class="token operator">*</span> _Nullable<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">fpos_t</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                 <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span> _Nullable<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
__END_DECLS
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">fropen</span><span class="token expression"><span class="token punctuation">(</span>cookie<span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token function">funopen</span><span class="token punctuation">(</span>cookie<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">fwopen</span><span class="token expression"><span class="token punctuation">(</span>cookie<span class="token punctuation">,</span> fn<span class="token punctuation">)</span> <span class="token function">funopen</span><span class="token punctuation">(</span>cookie<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">feof_unlocked</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token function">__sfeof</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">ferror_unlocked</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token function">__sferror</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">clearerr_unlocked</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token function">__sclearerr</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>	<span class="token macro-name function">fileno_unlocked</span><span class="token expression"><span class="token punctuation">(</span>p<span class="token punctuation">)</span>	<span class="token function">__sfileno</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* __DARWIN_C_LEVEL &gt;= __DARWIN_C_FULL */</span></span>


<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">_USE_EXTENDED_LOCALES_</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;xlocale/_stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* _USE_EXTENDED_LOCALES_ */</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span> <span class="token punctuation">(</span>__GNUC__<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> _FORTIFY_SOURCE <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">defined</span> <span class="token punctuation">(</span>__cplusplus<span class="token punctuation">)</span></span></span>
<span class="token comment">/* Security checking functions.  */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;secure/_stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* _STDIO_H_ */</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.73,words:2019},y:"a",t:"stdio"},["/apue/stdio","/apue/stdio.md"]],["v-93d304e2","/apue/umask.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> umask</h1>
<p>返回例如 022</p>
<p>新建档案 666 - 022 644 -rw-r--r--</p>
<p>新建目录 777 - 022 755 drwxr-xr-x</p>
`,r:{minutes:.09,words:26},y:"a",t:"umask"},["/apue/umask","/apue/umask.md"]],["v-d2a192d8","/apue/unix%E5%8E%86%E5%8F%B2%E5%92%8C%E6%A0%87%E5%87%86.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Unix</h1>
<p>unix 发了很多版本，在第七版本时，分裂为两大分支：bsd（伯克利分校），system V（AT&amp;T 美国通信公司）</p>
<p>1983 年，4.2 BSD 发布意义深远，包含了完整的 tcp/ip 实现</p>
<p>1993 年，4.4BSD 最终版本</p>
<p>1989 年，usg（at&amp;t 的 unix 团队）推出了 system V release 4（SVR4），包含了 bsd 的很多特性，包含联网功能</p>
<p>apple 的系统也是 bsd 种类</p>
<p>太多类 unix 系统，需要标准，posix</p>`,r:{minutes:.5,words:150},y:"a",t:"Unix"},["/apue/unix历史和标准.html","/apue/unix%E5%8E%86%E5%8F%B2%E5%92%8C%E6%A0%87%E5%87%86","/apue/unix历史和标准.md","/apue/unix%E5%8E%86%E5%8F%B2%E5%92%8C%E6%A0%87%E5%87%86.md"]],["v-2330770e","/apue/%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 二叉树</h1>
<p>树</p>
<p>二叉树</p>
<p>真二叉树</p>
<p>满二叉树</p>
<p>完全二叉树</p>
<h2> 三种特殊二叉树的区别于联系</h2>
<p>首先看真二叉树和满二叉树，这个都要求每个分支节点都是满的，也就是每个节点都有两个叉，也就是左右孩子节点，当然，叶子节点除外，满足这个就是真二叉树，如果在此条件上再加上一个条件，所有叶子节点在同一层级，那就是满二叉树。</p>
<p>也就是说，除叶子节点，每个节点都有左右孩子节点，那就是真二叉树。
如果除此之外，所有叶子节点又都在一个层级，那就是满二叉树</p>
<p>对于完全二叉树，叶子节点只能在最后两层，且除了最后一层的叶子节点，其他节点都是满的，也就是如果倒数第二层也有叶子节点，那一定是左右孩子节点齐全的（成对出现），最后一层的叶子节点可以是不满的，但是只能是左孩子</p>`,r:{minutes:1.61,words:482},y:"a",t:"二叉树"},["/apue/二叉树.html","/apue/%E4%BA%8C%E5%8F%89%E6%A0%91","/apue/二叉树.md","/apue/%E4%BA%8C%E5%8F%89%E6%A0%91.md"]],["v-69328bde","/apue/%E5%A5%97%E6%8E%A5%E5%AD%97.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 套接字</h1>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span><span class="token keyword">int</span> type<span class="token punctuation">,</span><span class="token keyword">int</span> protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
domain<span class="token operator">:</span>
AF_INET IPv4
AF_INET6 IPv6
AF_UNIX 别名 AF_LOCAL unix域
AF_UPSPEC

type<span class="token operator">:</span>
SOCK_DGRAM 默认UDP 无连接 报文
SOCK_RAW 直接访问下面的网络层 应用程序负责构造自己的协议头部，这是因为传输协议（如 TCP 和 UDP） 被绕过了
SOCK_SEQPACKET 面向连接 报文
SOCK_STREAM 默认tcp 面向连接 字节流

protocol<span class="token operator">:</span> <span class="token comment">//参数 protocol 通常是 0，表示为给定的域和套接字类型选择默认协议</span>
IPPROTO_IP IPv4
IPPROTO_IPV6 IPv6
IPPROTO_ICMP
IPPROTO_RAW
IPPROTO_TCP tcp
IPPROTO_UDP udp

<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> ai_flags<span class="token punctuation">;</span><span class="token comment">// 定义如何处理地址和名字</span>
    <span class="token keyword">int</span> ai_family<span class="token punctuation">;</span><span class="token comment">// domain 域</span>
    <span class="token keyword">int</span> ai_socktype<span class="token punctuation">;</span><span class="token comment">//类型</span>
    <span class="token keyword">int</span> ai_protocol<span class="token punctuation">;</span><span class="token comment">//协议</span>
    <span class="token class-name">socklen_t</span> ai_addrlen<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>ai_addr<span class="token punctuation">;</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>ai_canonname<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>ai_next<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token keyword">struct</span> <span class="token class-name">sockaddr</span><span class="token punctuation">{</span>
    <span class="token class-name">sa_family_t</span> sa_family<span class="token punctuation">;</span>
    <span class="token keyword">char</span> sa_data<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//linux sa_data[14];</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
给一个接收客户端请求的服务器套接字关联上一个众所周知的地址，关联地址和套接字
<span class="token keyword">int</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

建立连接
<span class="token keyword">int</span> <span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span><span class="token class-name">socket_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

服务器调用 listen 函数来宣告它愿意接受连接请求
<span class="token keyword">int</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">int</span> backlog<span class="token punctuation">)</span><span class="token punctuation">;</span>
backlog 提示系统该进程所要入队的未完成连接请求数量
一旦队列满，系统就会拒绝多余的连接请求，所以 backlog 的值应该基于服务器期望负载和 处理量来选择，其中处理量是指接受连接请求与启动服务的数量

一旦服务器调用了 listen，所用的套接字就能接收连接请求。使用 accept 函数获得连接 请求并建立连接
<span class="token function">accept</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockefd<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">socketaddr</span> <span class="token operator">*</span>addr<span class="token punctuation">,</span><span class="token class-name">socklen_t</span> <span class="token operator">*</span>restrict len<span class="token punctuation">)</span><span class="token punctuation">;</span>
函数 accept 所返回的文件描述符是套接字描述符，该描述符连接到调用 connect 的客户端
这个新的套接字描述符和原始套接字（sockfd）具有相同的套接字类型和地址族
传给 accept 的原始套接字没有关联到这个连接，而是继续保持可用状态并接收其他连接请求
返回时，accept 会在缓冲区填充客户端的地址，并且更新指向 len 的整数来反映该地址的大小
如果没有连接请求在等待，accept 会阻塞直到一个请求到来。如果 sockfd 处于非阻塞模式， accept 会返回−<span class="token number">1</span>，并将 errno 设置为 EAGAIN 或 EWOULDBLOCK

允许将一个主机名和一个服务名映射到一个地址
<span class="token keyword">int</span> <span class="token function">getaddrinfo</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>restrict host<span class="token punctuation">,</span>
				<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>restrict service<span class="token punctuation">,</span>
				<span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span>restrict hint<span class="token punctuation">,</span>
				<span class="token keyword">struct</span> <span class="token class-name">addrinfo</span> <span class="token operator">*</span><span class="token operator">*</span>restrict res<span class="token punctuation">)</span><span class="token punctuation">;</span>

面向连接的套接字
<span class="token class-name">ssize_t</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span><span class="token class-name">size_t</span> nbytes<span class="token punctuation">,</span><span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">recv</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span><span class="token class-name">size_t</span> nbytes<span class="token punctuation">,</span><span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>

面向无连接的套接字
<span class="token class-name">ssize_t</span> <span class="token function">sendto</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> nbytes<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>destaddr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> destlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">recvfrom</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>restrict buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> len<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sockaddr</span> <span class="token operator">*</span>restrict addr<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> <span class="token operator">*</span>restrict addrlen<span class="token punctuation">)</span><span class="token punctuation">;</span>

可以发送和接受fd
<span class="token class-name">ssize_t</span> <span class="token function">sendmsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">msghdr</span> <span class="token operator">*</span>msg<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">recvmsg</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">msghdr</span> <span class="token operator">*</span>msg<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">setsockopt</span><span class="token punctuation">(</span><span class="token keyword">int</span> sockfd<span class="token punctuation">,</span> <span class="token keyword">int</span> level<span class="token punctuation">,</span> <span class="token keyword">int</span> option<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>val<span class="token punctuation">,</span> <span class="token class-name">socklen_t</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:10.2,words:3061},y:"a",t:"套接字"},["/apue/套接字.html","/apue/%E5%A5%97%E6%8E%A5%E5%AD%97","/apue/套接字.md","/apue/%E5%A5%97%E6%8E%A5%E5%AD%97.md"]],["v-5a7808b6","/apue/%E5%AD%98%E5%82%A8%E5%99%A8.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 存储器</h1>
<p>寄存器：cpu 的组成部分</p>
<p>高速缓冲存储器：RAM</p>
<p>SRAM：CPU 的一级缓冲，二级缓冲</p>
<p>DRAM：通常的内存</p>
`,r:{minutes:.12,words:37},y:"a",t:"存储器"},["/apue/存储器.html","/apue/%E5%AD%98%E5%82%A8%E5%99%A8","/apue/存储器.md","/apue/%E5%AD%98%E5%82%A8%E5%99%A8.md"]],["v-9dc54574","/apue/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 守护进程</h1>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"apue.h"</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;syslog.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/resource.h&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">daemonize</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>cmd<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> i<span class="token punctuation">,</span> fd0<span class="token punctuation">,</span> fd1<span class="token punctuation">,</span> fd2<span class="token punctuation">;</span>
	<span class="token class-name">pid_t</span> pid<span class="token punctuation">;</span>
	<span class="token keyword">struct</span> <span class="token class-name">rlimit</span> rl<span class="token punctuation">;</span>
	<span class="token keyword">struct</span> <span class="token class-name">sigaction</span> sa<span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Clear file creation mask.
	 * 清除mask
	 */</span>
	<span class="token function">umask</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Get maximum number of file descriptors.
	 * 获得最大fd
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getrlimit</span><span class="token punctuation">(</span>RLIMIT_NOFILE<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rl<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"%s: can't get file limit"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Become a session leader to lose controlling TTY.
	 * 父进程关闭，子进程setsid
	 * 子进程继承了父进程的进程组 ID，但获得了一个新的进程 ID，这就保证了子进程不是一个 进程组的组长进程，setsid 调用的先决条件
	 *
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pid <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"%s: can't fork"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pid <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">/* parent */</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * 该进程不能是进程组组长进程
	 * setsid后发生 a.新会话的首进程，b.成为一个新进程组的组长进程，c.没有控制终端。(如果在调用setsid前，该进程有控制终端，那么与该终端的联系被解除)
	 */</span>
	<span class="token function">setsid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Ensure future opens won't allocate controlling TTYs.
	 * 忽略hup挂起信号
	 */</span>
	sa<span class="token punctuation">.</span>sa_handler <span class="token operator">=</span> SIG_IGN<span class="token punctuation">;</span>
	<span class="token function">sigemptyset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>sa<span class="token punctuation">.</span>sa_mask<span class="token punctuation">)</span><span class="token punctuation">;</span>
	sa<span class="token punctuation">.</span>sa_flags <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sigaction</span><span class="token punctuation">(</span>SIGHUP<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sa<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"%s: can't ignore SIGHUP"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">//进程已经成为无终端的会话首进程,但它可以重新申请打开一个控制终端（因为会话首进程能与控制终端建立连接）</span>
	<span class="token comment">//所以fork子进程，终止父进程，这样子进程不是会话首进程，就不能与终端建立连接，来获得控制终端</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pid <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"%s: can't fork"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pid <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">/* parent 终止父进程 */</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Change the current working directory to the root so
	 * we won't prevent file systems from being unmounted.
	 * 更改工作目录，如果父进程的工作目录可卸载那就出问题了
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"%s: can't change directory to /"</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Close all open file descriptors.
	 * 关闭所以fd
	 */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>rl<span class="token punctuation">.</span>rlim_max <span class="token operator">==</span> RLIM_INFINITY<span class="token punctuation">)</span>
		rl<span class="token punctuation">.</span>rlim_max <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rl<span class="token punctuation">.</span>rlim_max<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token function">close</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*
	 * Attach file descriptors 0, 1, and 2 to /dev/null.
	 * 将fd 0，1，2 指向/dev/null
	 */</span>
	fd0 <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"/dev/null"</span><span class="token punctuation">,</span> O_RDWR<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//fd 应该是0</span>
	fd1 <span class="token operator">=</span> <span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//fd1 应该是1</span>
	fd2 <span class="token operator">=</span> <span class="token function">dup</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//fd2 应该是2</span>

	<span class="token comment">/*
	 * Initialize the log file.
	 *
	 */</span>
	<span class="token function">openlog</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> LOG_CONS<span class="token punctuation">,</span> LOG_DAEMON<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>fd0 <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> fd1 <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">||</span> fd2 <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token function">syslog</span><span class="token punctuation">(</span>LOG_ERR<span class="token punctuation">,</span> <span class="token string">"unexpected file descriptors %d %d %d"</span><span class="token punctuation">,</span>
			   fd0<span class="token punctuation">,</span> fd1<span class="token punctuation">,</span> fd2<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">daemonize</span><span class="token punctuation">(</span><span class="token string">"ll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.8,words:541},y:"a",t:"守护进程"},["/apue/守护进程.html","/apue/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B","/apue/守护进程.md","/apue/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.md"]],["v-55113402","/apue/%E6%89%A7%E8%A1%8Cshell%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 执行 shell 的三种方式</h1>
<p>./script-name (fork 方式) 运行的时候 terminal 会新开一个子 Shell 执行脚本，子 Shell 执行的时候, 父 Shell 还在。子 Shell 执行完毕后返回父 Shell。子 Shell 从父 Shell 继承环境变量，但是子 Shell 中的环境变量不会带回父 Shell。</p>
<p>bash ./script-name 当前 shell 启动一个子进程执行程序，不会对当前 shell 有影响</p>
<p>source ./script-name or . ./script-name 与 <code>fork</code> 的区别是不新开一个子 Shell 来执行被调用的脚本，而是在同一个 Shell 中执行. 所以被调用的脚本中声明的变量和环境变量, 都可以在主脚本中进行获取和使用。</p>`,r:{minutes:.62,words:185},y:"a",t:"执行 shell 的三种方式"},["/apue/执行shell的三种方式.html","/apue/%E6%89%A7%E8%A1%8Cshell%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F","/apue/执行shell的三种方式.md","/apue/%E6%89%A7%E8%A1%8Cshell%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.md"]],["v-454dcd6a","/apue/%E7%AC%AC%E4%B8%80%E7%AB%A0.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第一章</h1>
<p>POSIX.1</p>
<p>文件名：a-z,A-Z,0-9,.,-,_</p>
<p>ls 命令的简要实现：</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token punctuation">{</span>

DIR <span class="token operator">*</span>dp<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">dirent</span> <span class="token operator">*</span>dirp<span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span>argc <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span>

	<span class="token function">err_quit</span><span class="token punctuation">(</span><span class="token string">"usage: ls directory_name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dp <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>

	<span class="token function">err_sys</span><span class="token punctuation">(</span><span class="token string">"can't open %s"</span><span class="token punctuation">,</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>dirp <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>

	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s \\n"</span><span class="token punctuation">,</span>dirp<span class="token operator">-&gt;</span>d_name<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">closedir</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.99,words:298},y:"a",t:"第一章"},["/apue/第一章.html","/apue/%E7%AC%AC%E4%B8%80%E7%AB%A0","/apue/第一章.md","/apue/%E7%AC%AC%E4%B8%80%E7%AB%A0.md"]],["v-d0483b36","/apue/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第七章 进程环境</h1>
<p>main 函数调用</p>
<p>命令行传参给程序</p>
<p>典型的存储空间布局</p>
<p>分配另外的存储空间</p>
<p>进程使用环境变量</p>
<p>进程的不同终止方式</p>
<p>longjmp 和 setjmp</p>
<h2> main 函数</h2>
<p>内核执行 C 程序过程：</p>
<ol>
<li>调用 main 前先调用特殊的启动例程</li>
<li>将此例程指定为程序起始地址</li>
<li>2 由连接编辑器设置</li>
<li>3 由 C 编译器调用</li>
<li>启动例程从内核获取命令行参数和环境变量</li>
<li>调用 main</li>
</ol>`,r:{minutes:2.57,words:772},y:"a",t:"第七章 进程环境"},["/apue/第七章 进程环境.html","/apue/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83","/apue/第七章 进程环境.md","/apue/%E7%AC%AC%E4%B8%83%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E7%8E%AF%E5%A2%83.md"]],["v-3413ac34","/apue/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%96%87%E4%BB%B6IO.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第三章 文件 IO</h1>
<p>I/O 函数就是打开文件，读文件，写文件，在绝大数 unix 系统中只需用到 5 个函数 open、read、write、lseek、close。</p>
<p>不同缓存长度对 read 和 write 有影响。unbuffered I/O（不带缓冲的 I/O）与后面标准 I/O 函数</p>
<p>所谓不带缓存就是说 read 和 write 都调用内核的一个系统调用。</p>
<p>不带缓冲的 I/O 不是 ISO C 的组成部分，是 POSIX.1 核 Single UNIX Specification 的组成部分</p>
<h3> 文件描述符-fd</h3>`,r:{minutes:10.76,words:3227},y:"a",t:"第三章 文件 IO"},["/apue/第三章 文件IO.html","/apue/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%96%87%E4%BB%B6IO","/apue/第三章 文件IO.md","/apue/%E7%AC%AC%E4%B8%89%E7%AB%A0%20%E6%96%87%E4%BB%B6IO.md"]],["v-3918c409","/apue/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E5%85%B3%E7%B3%BB.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第九章 进程关系</h1>
<h2> 终端登入</h2>
<h3> bsd</h3>
<p>当系统自举时，内核创建进程 ID 为 1 的进程，也就是 init 进程。init 进程使系统进入多用户模式。init 读取文件/etc/ttys，对每一个允许登录的终端 设备，init 调用一次 fork，它所生成的子进程则 exec getty 程序</p>
<p>getty 对终端设备调用 open 函数，以读、写方式将终端打开</p>
<p>一旦设备被打 开，则文件描述符 0、1、2 就被设置到该设备</p>
<p>然后 getty 输出“login: ”之类的信息，并等待用户键入用户名</p>`,r:{minutes:3.26,words:979},y:"a",t:"第九章 进程关系"},["/apue/第九章 进程关系.html","/apue/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E5%85%B3%E7%B3%BB","/apue/第九章 进程关系.md","/apue/%E7%AC%AC%E4%B9%9D%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E5%85%B3%E7%B3%BB.md"]],["v-125f3036","/apue/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E9%80%9A%E4%BF%A1.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第二十一章 网络打印机通信</h1>
`,r:{minutes:.04,words:12},y:"a",t:"第二十一章 网络打印机通信"},["/apue/第二十一章 网络打印机通信.html","/apue/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E9%80%9A%E4%BF%A1","/apue/第二十一章 网络打印机通信.md","/apue/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E6%89%93%E5%8D%B0%E6%9C%BA%E9%80%9A%E4%BF%A1.md"]],["v-4c90b958","/apue/%E7%AC%AC%E4%BA%8C%E7%AB%A0.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第二章</h1>
<p>3 个独立组织制定的 3 个标准：ISO C、IEEE POSIX、Single UNIX Specification</p>
<p>具体实现：SVR4、BSD、FreeBSD、Linux、Mac OS X、Solaris、其他 Unix 系统</p>
<p>ISO</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>头文件          说明
&lt;assert.h&gt;     验证程序断言
&lt;complex.h&gt;     复数运算支持
&lt;ctype.h&gt;     字符分类和映射支持
&lt;errno.h&gt;     错误码
&lt;fenv.h&gt;     浮点环境
&lt;float.h&gt;     浮点支持
&lt;inttypes.h&gt;     整型格式转换
&lt;iso646.h&gt;     赋值、关系、一元操作符宏
&lt;limits.h&gt;     实现常量
&lt;locale.h&gt;     本地化支持
&lt;math.h&gt;     数学运算库
&lt;setjmp.h&gt;     非局部goto
&lt;signal.h&gt;     信号支持
&lt;stdarg.h&gt;     可变长度参数
&lt;stdbool.h&gt;     布尔类型支持
&lt;stddef.h&gt;     标准定义
&lt;stdint.h&gt;     标准整形
&lt;stdio.h&gt;     标准输入输出
&lt;stdlib.h&gt;     实用函数库
&lt;string.h&gt;     字符串操作
&lt;tgmath.h&gt;     通用类型数学宏
&lt;time.h&gt;     时间日期支持
&lt;wchar.h&gt;     多字节宽字符支持
&lt;wctype.h&gt;     宽字符分类和映射支持
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:207},y:"a",t:"第二章"},["/apue/第二章.html","/apue/%E7%AC%AC%E4%BA%8C%E7%AB%A0","/apue/第二章.md","/apue/%E7%AC%AC%E4%BA%8C%E7%AB%A0.md"]],["v-15658a77","/apue/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E6%A0%87%E5%87%86IO.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第五章 标准 IO</h1>
<p>标准 IO 不仅仅是 unix 实现了。</p>
<p>这个库是 ISO C 标准说明。</p>
<p>Single UNIX Specification 对 ISO C 进行了补充，定义了另外一些接口。</p>
<h2> 流和 FILE 对象</h2>
<p>第三章围绕 fd，而这章函数围绕流</p>
<p>流的定向决定了读写字符是单字节还是多字节-宽</p>
<p>在未定义的流上使用单字节 IO 函数或者多字节 IO 函数，则流的定向将被设置单或者宽</p>
<p>只有两个函数可以改变流的定向：freopen 和 fwide</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;wchar.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">fwide</span><span class="token punctuation">(</span>FILE <span class="token operator">*</span>fp<span class="token punctuation">,</span><span class="token keyword">int</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//流宽定向返回正值，字节定向返回负值，为定向返回0</span>
设定流的定向，前提条件是未被设定流的定向
流可能无效，那么需要前后检查errno

macos的FILE定义
<span class="token keyword">typedef</span>	<span class="token keyword">struct</span> <span class="token class-name">__sFILE</span> <span class="token punctuation">{</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>_p<span class="token punctuation">;</span>	<span class="token comment">/* current position in (some) buffer */</span>
	<span class="token keyword">int</span>	_r<span class="token punctuation">;</span>		<span class="token comment">/* read space left for getc() */</span>
	<span class="token keyword">int</span>	_w<span class="token punctuation">;</span>		<span class="token comment">/* write space left for putc() */</span>
	<span class="token keyword">short</span>	_flags<span class="token punctuation">;</span>		<span class="token comment">/* flags, below; this FILE is free if 0 */</span>
	<span class="token keyword">short</span>	_file<span class="token punctuation">;</span>		<span class="token comment">/* fileno, if Unix descriptor, else -1 */</span>
	<span class="token keyword">struct</span>	<span class="token class-name">__sbuf</span> _bf<span class="token punctuation">;</span>	<span class="token comment">/* the buffer (at least 1 byte, if !NULL) */</span>
	<span class="token keyword">int</span>	_lbfsize<span class="token punctuation">;</span>	<span class="token comment">/* 0 or -_bf._size, for inline putc */</span>

	<span class="token comment">/* operations */</span>
	<span class="token keyword">void</span>	<span class="token operator">*</span>_cookie<span class="token punctuation">;</span>	<span class="token comment">/* cookie passed to io functions */</span>
	<span class="token keyword">int</span>	<span class="token punctuation">(</span><span class="token operator">*</span> _Nullable _close<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span>	<span class="token punctuation">(</span><span class="token operator">*</span> _Nullable _read<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">fpos_t</span>	<span class="token punctuation">(</span><span class="token operator">*</span> _Nullable _seek<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token class-name">fpos_t</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span>	<span class="token punctuation">(</span><span class="token operator">*</span> _Nullable _write<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/* separate buffer for long sequences of ungetc() */</span>
	<span class="token keyword">struct</span>	<span class="token class-name">__sbuf</span> _ub<span class="token punctuation">;</span>	<span class="token comment">/* ungetc buffer */</span>
	<span class="token keyword">struct</span> <span class="token class-name">__sFILEX</span> <span class="token operator">*</span>_extra<span class="token punctuation">;</span> <span class="token comment">/* additions to FILE to not break ABI */</span>
	<span class="token keyword">int</span>	_ur<span class="token punctuation">;</span>		<span class="token comment">/* saved _r when _r is counting ungetc data */</span>

	<span class="token comment">/* tricks to meet minimum requirements even when malloc() fails */</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">char</span> _ubuf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">/* guarantee an ungetc() buffer */</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">char</span> _nbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">/* guarantee a getc() buffer */</span>

	<span class="token comment">/* separate buffer for fgetln() when line crosses buffer boundary */</span>
	<span class="token keyword">struct</span>	<span class="token class-name">__sbuf</span> _lb<span class="token punctuation">;</span>	<span class="token comment">/* buffer for fgetln() */</span>

	<span class="token comment">/* Unix stdio files get aligned to block boundaries on fseek() */</span>
	<span class="token keyword">int</span>	_blksize<span class="token punctuation">;</span>	<span class="token comment">/* stat.st_blksize (may be != _bf._size) */</span>
	<span class="token class-name">fpos_t</span>	_offset<span class="token punctuation">;</span>	<span class="token comment">/* current lseek offset (see WARNING) */</span>
<span class="token punctuation">}</span> FILE


<span class="token comment">/* stdio buffers */</span>
<span class="token keyword">struct</span> <span class="token class-name">__sbuf</span> <span class="token punctuation">{</span>
	<span class="token keyword">unsigned</span> <span class="token keyword">char</span>	<span class="token operator">*</span>_base<span class="token punctuation">;</span>
	<span class="token keyword">int</span>		_size<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.35,words:1304},y:"a",t:"第五章 标准 IO"},["/apue/第五章 标准IO.html","/apue/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E6%A0%87%E5%87%86IO","/apue/第五章 标准IO.md","/apue/%E7%AC%AC%E4%BA%94%E7%AB%A0%20%E6%A0%87%E5%87%86IO.md"]],["v-5022612b","/apue/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第八章 进程控制</h1>
<h2> fork 进程标识</h2>
<p>id 为 0 的是调度进程，被称为交换进程 swapper，是内核的一部分</p>
<p>id 为 1 的是 init 进程，是所以孤儿进程的父进程，不是内核一部分，只是个普通进程，但是拥有 root 权限，</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token class-name">pid_t</span> <span class="token function">getpid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">pid_t</span> <span class="token function">getppid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">uid_t</span> <span class="token function">getuid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//实际用户 ID</span>
<span class="token class-name">uid_t</span> <span class="token function">geteuid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//有效用户 ID</span>

<span class="token class-name">gid_t</span> <span class="token function">getgid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">gid_t</span> <span class="token function">getegid</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.61,words:1383},y:"a",t:"第八章 进程控制"},["/apue/第八章 进程控制.html","/apue/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6","/apue/第八章 进程控制.md","/apue/%E7%AC%AC%E5%85%AB%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6.md"]],["v-79f0a4fd","/apue/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E5%92%8C%E4%BF%A1%E6%81%AF.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第六章 系统数据文件和信息</h1>
<h2> 口令文件</h2>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pwd.h&gt;</span></span>
查看登入名或者用户ID
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwuid</span><span class="token punctuation">(</span><span class="token class-name">uid_t</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwnam</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
macos
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_name<span class="token punctuation">;</span>		<span class="token comment">/* user name */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_passwd<span class="token punctuation">;</span>		<span class="token comment">/* encrypted password */</span>
	<span class="token class-name">uid_t</span>	pw_uid<span class="token punctuation">;</span>			<span class="token comment">/* user uid */</span>
	<span class="token class-name">gid_t</span>	pw_gid<span class="token punctuation">;</span>			<span class="token comment">/* user gid */</span>
	__darwin_time_t pw_change<span class="token punctuation">;</span>		<span class="token comment">/* password change time */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_class<span class="token punctuation">;</span>		<span class="token comment">/* user access class */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_gecos<span class="token punctuation">;</span>		<span class="token comment">/* Honeywell login info */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_dir<span class="token punctuation">;</span>		<span class="token comment">/* home directory */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_shell<span class="token punctuation">;</span>		<span class="token comment">/* default shell */</span>
	__darwin_time_t pw_expire<span class="token punctuation">;</span>		<span class="token comment">/* account expiration */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
查看整个口令文件
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//清理读取的缓存和关闭文件</span>
<span class="token keyword">void</span> <span class="token function">setpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">endpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.69,words:506},y:"a",t:"第六章 系统数据文件和信息"},["/apue/第六章 系统数据文件和信息.html","/apue/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E5%92%8C%E4%BF%A1%E6%81%AF","/apue/第六章 系统数据文件和信息.md","/apue/%E7%AC%AC%E5%85%AD%E7%AB%A0%20%E7%B3%BB%E7%BB%9F%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6%E5%92%8C%E4%BF%A1%E6%81%AF.md"]],["v-63dc7a8e","/apue/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BA%BF%E7%A8%8B.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十一章 线程</h1>
<h2> 线程标识</h2>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">pthread_equal</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> tid1<span class="token punctuation">,</span><span class="token class-name">pthread_t</span> tid2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">pthread_t</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//线程通过这个函数获取自身线程id</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.64,words:791},y:"a",t:"第十一章 线程"},["/apue/第十一章 线程.html","/apue/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BA%BF%E7%A8%8B","/apue/第十一章 线程.md","/apue/%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%20%E7%BA%BF%E7%A8%8B.md"]],["v-1912efa4","/apue/%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0%20%E9%AB%98%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十七章 高级进程间通信</h1>
<h2> UNIX 域套接字</h2>
<p>UNIX 域套接字用于在同一台计算机上运行的进程之间的通信</p>
<p>虽然因特网域套接字可用于 同一目的，但 UNIX 域套接字的效率更高</p>
<p>UNIX 域套接字提供流和数据报两种接口</p>
<p>UNIX 域套接字就像是套接字和管道的混合</p>
<p>可以使用它们面向网络的域套接 字接口或者使用 socketpair 函数来创建一对无命名的、相互连接的 UNIX 域套接字</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/sock.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">socketpair</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span><span class="token keyword">int</span> type<span class="token punctuation">,</span><span class="token keyword">int</span> protocol<span class="token punctuation">,</span><span class="token keyword">int</span> sockfd<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">sockpair</span><span class="token punctuation">(</span>AF_UNIX<span class="token punctuation">,</span>SOCK_DGRAM<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>fd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.06,words:618},y:"a",t:"第十七章 高级进程间通信"},["/apue/第十七章 高级进程间通信.html","/apue/%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0%20%E9%AB%98%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1","/apue/第十七章 高级进程间通信.md","/apue/%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0%20%E9%AB%98%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.md"]],["v-5351d5c2","/apue/%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0%20%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十三章 守护进程</h1>
<h2> 守护进程的特征</h2>
<h2> 编程规则</h2>
<ol>
<li>
<p>首先要做的是调用 umask 将文件模式创建屏蔽字设置为一个已知值</p>
</li>
<li>
<p>调用 fork，然后使父进程 exit</p>
</li>
<li>
<p>调用 setsid 创建一个新会话：使调用进程：（a）成为</p>
<p>新会话的首进程，（b）成为一个新进程组的组长进程，（c）没有控制终端</p>
</li>
<li>
<p>将当前工作目录更改为根目录</p>
</li>
<li>
<p>关闭不再需要的文件描述符</p>
</li>
<li>
<p>某些守护进程打开/dev/null 使其具有文件描述符 0、1 和 2</p>
</li>
</ol>`,r:{minutes:2.31,words:694},y:"a",t:"第十三章 守护进程"},["/apue/第十三章 守护进程.html","/apue/%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0%20%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B","/apue/第十三章 守护进程.md","/apue/%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0%20%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B.md"]],["v-09bdfe36","/apue/%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0%20%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十二章 线程控制</h1>
<h2> 线程限制</h2>
<h2> 线程属性</h2>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
in <span class="token function">pthread_attr_destory</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//分离状态</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_getdetachstate</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>restrict attr<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token operator">*</span>detachstate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_setdetachstate</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>detachstate<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//栈的最低地址</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_getstack</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>restrict attr<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>restrict stackaddr<span class="token punctuation">,</span><span class="token class-name">size_t</span> <span class="token operator">*</span>restrict stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_setstack</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span>stackaddr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//栈的大小</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_getstacksize</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">pthread_attr_t</span><span class="token operator">*</span>restrict attr<span class="token punctuation">,</span><span class="token class-name">size_t</span> <span class="token operator">*</span>restrict stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_setstacksize</span> <span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//线程栈末尾之后用以避免栈溢出的扩展内存的大小</span>
iint <span class="token function">pthread_attr_getguardsize</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>restrict attr<span class="token punctuation">,</span><span class="token class-name">size_t</span> <span class="token operator">*</span>restrict guardsize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">pthread_attr_setguardsize</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> guardsize<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.49,words:1048},y:"a",t:"第十二章 线程控制"},["/apue/第十二章 线程控制.html","/apue/%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0%20%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6","/apue/第十二章 线程控制.md","/apue/%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0%20%E7%BA%BF%E7%A8%8B%E6%8E%A7%E5%88%B6.md"]],["v-0cfae4ee","/apue/%E7%AC%AC%E5%8D%81%E4%BA%94%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十五章 进程间通信</h1>
<p>半双工管道、全双工管道、FIFO</p>
<p>UDS，管道</p>
<p>同一台主机的两个进程之间的 IPC，套接字和 STREAMS 是仅有的支持不同主机上两个进程之间 IPC 的两种形式</p>
<p>本章讨论经典的 IPC：管道、FIFO、消息队列、信号量 以及共享存储</p>
<h2> 管道</h2>
<p>局限性：历史上半双工，数据单向；在公共祖先的两个进程间使用，通常父子进程使用</p>
<p>FIFO 没有第二种限制，uds 没有这两种限制</p>
<p>每当在管道中键入一个命令序列， 让 shell 执行时，shell 都会为每一条命令单独创建一个进程，然后用管道将前一条命令进程的标 准输出与后一条命令的标准输入相连接</p>`,r:{minutes:11.78,words:3535},y:"a",t:"第十五章 进程间通信"},["/apue/第十五章 进程间通信.html","/apue/%E7%AC%AC%E5%8D%81%E4%BA%94%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1","/apue/第十五章 进程间通信.md","/apue/%E7%AC%AC%E5%8D%81%E4%BA%94%E7%AB%A0%20%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.md"]],["v-29de861a","/apue/%E7%AC%AC%E5%8D%81%E5%85%AB%E7%AB%A0%20%E7%BB%88%E7%AB%AFIO.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十八章 终端 IO</h1>
<p>终端 I/O 处理分立为两种不同的风格：一种是系统 Ⅲ 的风格，由 System V 沿续下来，另一种是 V7 的风格，它成为 BSD 派生的系统终端 I/O 处理的标准</p>
<p>终端 I/O 有两种不同的工作模式：规范模式输入处理；非规范模式输入处理</p>
<p>比如通常的 shell 就是规范模式，而 vim 编辑器就是非规范模式</p>
<h2> 特殊输入字符</h2>
<p>posix.1</p>
<h2> 获得和设置终端属性</h2>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">termios</span> <span class="token punctuation">{</span>
    <span class="token class-name">tcflag_t</span> c_iflag<span class="token punctuation">;</span><span class="token comment">/* input flags */</span>
    <span class="token class-name">tcflag_t</span> c_oflag<span class="token punctuation">;</span><span class="token comment">/* output flags */</span>
    <span class="token class-name">tcflag_t</span> c_cflag<span class="token punctuation">;</span><span class="token comment">/* control flags */</span>
    <span class="token class-name">tcflag_t</span> c_lflag<span class="token punctuation">;</span><span class="token comment">/* local flags */</span>
    <span class="token class-name">cc_t</span>  c_cc<span class="token punctuation">[</span>NCCS<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">/* control characters */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

所有选项都可以被检查和更改
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;termios.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">tcgetattr</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token operator">*</span>termptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">tcsetattr</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span><span class="token keyword">int</span> opt<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">termios</span> <span class="token operator">*</span>termptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.44,words:433},y:"a",t:"第十八章 终端 IO"},["/apue/第十八章 终端IO.html","/apue/%E7%AC%AC%E5%8D%81%E5%85%AB%E7%AB%A0%20%E7%BB%88%E7%AB%AFIO","/apue/第十八章 终端IO.md","/apue/%E7%AC%AC%E5%8D%81%E5%85%AB%E7%AB%A0%20%E7%BB%88%E7%AB%AFIO.md"]],["v-45ad708e","/apue/%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0%20%E7%BD%91%E7%BB%9CIPC%20%E5%A5%97%E6%8E%A5%E5%AD%97.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十六章 网络 IPC 套接字</h1>
<h2> 套接字描述</h2>
<p>套接字是通信端点的抽象</p>
<p><strong>套接字描述符</strong>：正如使用文件描述符访问文件，应用程序用套接字描述符访问套接字</p>
<p>套接字描述符在 UNIX 系统中被当作是一种文件描述符</p>
<p>许多处理文件描述符的 函数（如 read 和 write）可以用于处理套接字描述符</p>
<p>为创建一个套接字，调用 socket 函数</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/socket.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span><span class="token keyword">int</span> type<span class="token punctuation">,</span><span class="token keyword">int</span> protocol<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.77,words:2332},y:"a",t:"第十六章 网络 IPC 套接字"},["/apue/第十六章 网络IPC 套接字.html","/apue/%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0%20%E7%BD%91%E7%BB%9CIPC%20%E5%A5%97%E6%8E%A5%E5%AD%97","/apue/第十六章 网络IPC 套接字.md","/apue/%E7%AC%AC%E5%8D%81%E5%85%AD%E7%AB%A0%20%E7%BD%91%E7%BB%9CIPC%20%E5%A5%97%E6%8E%A5%E5%AD%97.md"]],["v-9354be2a","/apue/%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0%20%E9%AB%98%E7%BA%A7IO.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十四章 高级 IO</h1>
<h2> 非阻塞 IO</h2>
<p>fd 是阻塞还是非阻塞是可以设置的，这也直接影响系统调用函数是否阻塞还是非阻塞（直接返回错误）</p>
<p>对于一个给定的 fd，有两种方法可以指定为非阻塞 IO</p>
<ol>
<li>open 的时候指定 O_NOBLOCK</li>
<li>已经 open 的 fd，使用 fcntl 函数设置 O_NOBLOCK</li>
</ol>
<h2> 记录锁</h2>
<h3> fcntl 记录锁</h3>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">fcntl</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span><span class="token keyword">int</span> cmd<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">/* struct flock *flockptr */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.36,words:3708},y:"a",t:"第十四章 高级 IO"},["/apue/第十四章 高级IO.html","/apue/%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0%20%E9%AB%98%E7%BA%A7IO","/apue/第十四章 高级IO.md","/apue/%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0%20%E9%AB%98%E7%BA%A7IO.md"]],["v-05e9d15d","/apue/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E4%BF%A1%E5%8F%B7.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第十章 信号</h1>
<p>介绍信号机制，说明每种信号的一般用法
分析早期实现，分析存在问题并且解决</p>
<h2> 信号</h2>
<p>V7 15</p>
<p>BSD 31</p>
<p>FreeBSD 32</p>
<p>Mac OS Linux 31</p>
<p>Solaris 40</p>
<p>两个不能被捕捉或忽略的信号：SIGKILL 和 SIGSTOP</p>
<p>中断</p>
<p>退出</p>
<p>挂起</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h&gt;</span></span>
<span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token keyword">int</span> signo<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//表达式最上层是signal返回函数指针的函数的定义</span>
<span class="token comment">//分开看，signal的返回值定义，signal函数本身定义</span>
<span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//signal返回一个函数指针，这是描述该函数定义的，该函数有个参数int，无返回值void</span>
<span class="token operator">*</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token keyword">int</span> signo<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token punctuation">(</span><span class="token operator">*</span>func<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//signal函数两个参数，返回值是个指针，关于这个指针所指向的函数定义见上方</span>
<span class="token comment">//两个参数一：signo,int</span>
<span class="token comment">//两个参数二：*func，函数指针，该函数有参数一int，无返回值</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h&gt;</span></span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>signal_handler<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//void(*func)(int)</span>
<span class="token keyword">void</span> <span class="token function">signal_handler_fun</span><span class="token punctuation">(</span><span class="token keyword">int</span> signal_no<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"catch signal no is %d\\n"</span><span class="token punctuation">,</span> signal_no<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    signal_handler signal_fun <span class="token operator">=</span> signal_handler_fun<span class="token punctuation">;</span>
    <span class="token function">signal</span><span class="token punctuation">(</span>SIGINT<span class="token punctuation">,</span> signal_fun<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lnum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"num is %d\\n"</span><span class="token punctuation">,</span> lnum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lnum<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//上面太复杂</span>
<span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token function">Sigfunc</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Sigfunc <span class="token operator">*</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> Sigfunc <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.3,words:1291},y:"a",t:"第十章 信号"},["/apue/第十章 信号.html","/apue/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E4%BF%A1%E5%8F%B7","/apue/第十章 信号.md","/apue/%E7%AC%AC%E5%8D%81%E7%AB%A0%20%E4%BF%A1%E5%8F%B7.md"]],["v-296a96ce","/apue/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 第四章 文件目录</h1>
<h2> stat,fstat,fstatat,lstat</h2>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">stat</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>restrict pathname<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">stat</span> <span class="token operator">*</span>restrict buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文件有关信息</span>
<span class="token keyword">int</span> <span class="token function">fstat</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">stat</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取文件有关信息</span>
<span class="token keyword">int</span> <span class="token function">lstat</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>restrict pathname<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">stat</span> <span class="token operator">*</span>restrict buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//link有关信息，比stat多检测link文件</span>
<span class="token keyword">int</span> <span class="token function">fstatat</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>restrict pathname<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">stat</span> <span class="token operator">*</span>restrict buf<span class="token punctuation">,</span><span class="token keyword">int</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>

<span class="token keyword">struct</span> <span class="token class-name">stat</span><span class="token punctuation">{</span>
    <span class="token class-name">mode_t</span>          st_mode<span class="token punctuation">;</span>i节点 中文件访问权限
    <span class="token class-name">ino_t</span>           st_ino<span class="token punctuation">;</span>目录项中 i节点编号  文件系统中的每个目录项都有一个唯一的i节点编号
    <span class="token class-name">dev_t</span>           st_dev<span class="token punctuation">;</span>每个文件系统都有一个唯一的设备号
    <span class="token class-name">dev_t</span>           st_rdev<span class="token punctuation">;</span>
    <span class="token class-name">nlink_t</span>         st_nlink<span class="token punctuation">;</span>有链接计数
    <span class="token class-name">uid_t</span>           st_uid<span class="token punctuation">;</span>
    <span class="token class-name">gid_t</span>           st_gid<span class="token punctuation">;</span>
    <span class="token class-name">off_t</span>           st_size<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">timespec</span> st_atime<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">timespec</span> st_mtime<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">timespec</span> st_ctime<span class="token punctuation">;</span>
    <span class="token class-name">blksize_t</span>       st_blksize<span class="token punctuation">;</span>
    <span class="token class-name">blkcnt_t</span>        st_blocks<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">struct</span> <span class="token class-name">timespec</span><span class="token punctuation">{</span>
    <span class="token class-name">time_t</span> tv_sec<span class="token punctuation">;</span>
    <span class="token keyword">long</span>   tv_nsec<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token comment">//附一份macos 10.13.4</span>
truct stat <span class="token punctuation">{</span>
	<span class="token class-name">dev_t</span>	 	st_dev<span class="token punctuation">;</span>		<span class="token comment">/* [XSI] ID of device containing file */</span>
	<span class="token class-name">ino_t</span>	  	st_ino<span class="token punctuation">;</span>		<span class="token comment">/* [XSI] File serial number */</span>
	<span class="token class-name">mode_t</span>	 	st_mode<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Mode of file (see below) */</span>
	<span class="token class-name">nlink_t</span>		st_nlink<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Number of hard links */</span>
	<span class="token class-name">uid_t</span>		st_uid<span class="token punctuation">;</span>		<span class="token comment">/* [XSI] User ID of the file */</span>
	<span class="token class-name">gid_t</span>		st_gid<span class="token punctuation">;</span>		<span class="token comment">/* [XSI] Group ID of the file */</span>
	<span class="token class-name">dev_t</span>		st_rdev<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Device ID */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token operator">!</span><span class="token function">defined</span><span class="token punctuation">(</span>_POSIX_C_SOURCE<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">defined</span><span class="token punctuation">(</span>_DARWIN_C_SOURCE<span class="token punctuation">)</span></span></span>
	<span class="token keyword">struct</span>	<span class="token class-name">timespec</span> st_atimespec<span class="token punctuation">;</span>	<span class="token comment">/* time of last access */</span>
	<span class="token keyword">struct</span>	<span class="token class-name">timespec</span> st_mtimespec<span class="token punctuation">;</span>	<span class="token comment">/* time of last data modification */</span>
	<span class="token keyword">struct</span>	<span class="token class-name">timespec</span> st_ctimespec<span class="token punctuation">;</span>	<span class="token comment">/* time of last status change */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
	<span class="token class-name">time_t</span>		st_atime<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Time of last access */</span>
	<span class="token keyword">long</span>		st_atimensec<span class="token punctuation">;</span>	<span class="token comment">/* nsec of last access */</span>
	<span class="token class-name">time_t</span>		st_mtime<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Last data modification time */</span>
	<span class="token keyword">long</span>		st_mtimensec<span class="token punctuation">;</span>	<span class="token comment">/* last data modification nsec */</span>
	<span class="token class-name">time_t</span>		st_ctime<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] Time of last status change */</span>
	<span class="token keyword">long</span>		st_ctimensec<span class="token punctuation">;</span>	<span class="token comment">/* nsec of last status change */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
	<span class="token class-name">off_t</span>		st_size<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] file size, in bytes */</span>
	<span class="token class-name">blkcnt_t</span>	st_blocks<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] blocks allocated for file */</span>
	<span class="token class-name">blksize_t</span>	st_blksize<span class="token punctuation">;</span>	<span class="token comment">/* [XSI] optimal blocksize for I/O */</span>
	__uint32_t	st_flags<span class="token punctuation">;</span>	<span class="token comment">/* user defined flags for file */</span>
	__uint32_t	st_gen<span class="token punctuation">;</span>		<span class="token comment">/* file generation number */</span>
	__int32_t	st_lspare<span class="token punctuation">;</span>	<span class="token comment">/* RESERVED: DO NOT USE! */</span>
	__int64_t	st_qspare<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">/* RESERVED: DO NOT USE! */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:10.99,words:3298},y:"a",t:"第四章 文件目录"},["/apue/第四章 文件目录.html","/apue/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95","/apue/第四章 文件目录.md","/apue/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.md"]],["v-376f89aa","/apue/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 网络模型</h1>
<p>Reactor 模型</p>
<p>Reactor 模式本质上指的是使用 <code>I/O 多路复用(I/O multiplexing) + 非阻塞 I/O(non-blocking I/O) </code>的模式</p>
<p>通常设置一个主线程负责做 event-loop 事件循环和 I/O 读写，通过 select/poll/epoll_wait 等系统调用监听 I/O 事件，业务逻辑提交给其他工作线程去做。而所谓『非阻塞 I/O』的核心思想是指避免阻塞在 read() 或者 write() 或者其他的 I/O 系统调用上，这样可以最大限度的复用 event-loop 线程，让一个线程能服务于多个 sockets。在 Reactor 模式中，I/O 线程只能阻塞在 I/O multiplexing 函数上（select/poll/epoll_wait）</p>`,r:{minutes:.99,words:296},y:"a",t:"网络模型"},["/apue/网络模型.html","/apue/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B","/apue/网络模型.md","/apue/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B.md"]],["v-76c5059c","/linux/coredump.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> linux core dump</h1>
<h2> 运行的进程创建 core dump 文件</h2>
<p>一般通过 gdb 来生成，使用 gdb 把进程 attach 进来，然后执行 generate-core-file 或者 gcore 命令来生成 core dump 文件</p>
<h2> 程序崩溃生成 core dump 文件</h2>
<p>这次崩溃生成由两个因素控制</p>
<ol>
<li>
<p>是否生成，ulimit -c 为 0 代表不会自动生成，含义就是限制 core dump 文件的大小，单位 KB，可以设置成 ulimit -c unlimited 甚至成无限或者其他值；</p>
</li>
<li>
<p>生成格式配置 cat /proc/sys/kernel/core_pattern</p>
</li>
</ol>`,r:{minutes:.76,words:227},y:"a",t:"linux core dump"},["/linux/coredump","/linux/coredump.md"]],["v-20d4074c","/linux/find.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Find 命令</h1>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 常规用法

// 搜索一个目录所有文件

<span class="token function">find</span> ./app/archive/aegis-censor  <span class="token parameter variable">-name</span> <span class="token string">"*.go"</span> <span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">grep</span> <span class="token string">"panic("</span>


// 高级用法
// 搜索一个目录，并且可以排除其他目录
// 注意 ./app/archive 为需要扫描路径
// 注意 ./app/archive/material，./app/archive/crm 为排除的路径
// 注意 <span class="token operator">!</span> <span class="token parameter variable">-name</span> <span class="token string">"main.go"</span> 排除main.go 文件
<span class="token function">find</span> ./app/archive/aegis-censor <span class="token parameter variable">-path</span> ./app/archive/aegis-censor/service/internal <span class="token parameter variable">-prune</span> <span class="token parameter variable">-o</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-path</span> ./app/archive/aegis-censor/service/configs <span class="token parameter variable">-prune</span> <span class="token parameter variable">-o</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-name</span> <span class="token string">"*.go"</span> <span class="token punctuation">\\</span>
<span class="token operator">!</span> <span class="token parameter variable">-name</span> <span class="token string">"main.go"</span> <span class="token punctuation">\\</span>
-print<span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">grep</span> <span class="token string">"panic("</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.4,words:120},y:"a",t:"Find 命令"},["/linux/find","/linux/find.md"]],["v-1987e354","/linux/linux%E5%91%BD%E4%BB%A4%E6%9D%82%E9%A1%B9.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> linux 命令杂项</h1>
<h2> linux 个人笔记</h2>
<h3> 1.终端控制台：最多同时开六个终端控制台</h3>
<p>Alt+F1~Alt+F6 切换控制台</p>
<p>运行级别：init 0123456
0：关机
1：单用户
2：多用户无网络
3：多用户有网络（常用）
4：系统未使用保留给用户
5：图形界面
6：系统重启</p>
<p>3 和 5 比较常用</p>
<p>启动文件放置路径 /etc/inittab</p>
<p>runlevel 查看运行级别
init num 切换运行级别</p>
<p>logout exit 注销
startx 注销重启进入 5 图形界面</p>`,r:{minutes:13.16,words:3948},y:"a",t:"linux 命令杂项"},["/linux/linux命令杂项.html","/linux/linux%E5%91%BD%E4%BB%A4%E6%9D%82%E9%A1%B9","/linux/linux命令杂项.md","/linux/linux%E5%91%BD%E4%BB%A4%E6%9D%82%E9%A1%B9.md"]],["v-9b6fd810","/linux/reuseport.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 三种提升 tcp 服务能力方式</h1>
<p>three ways of designing a TCP server with regard to performance</p>
<h3> Single listen socket, single worker process</h3>
<p>This is the simplest model, where processing is limited to a single CPU. A single worker process is doing both accept() calls to receive the new connections and processing of the requests themselves. This model is the preferred <code>Lighttpd</code> setup.</p>`,r:{minutes:2.81,words:844},y:"a",t:"三种提升 tcp 服务能力方式"},["/linux/reuseport","/linux/reuseport.md"]],["v-8931789c","/linux/swap.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Swap</h1>
<h2> 常用命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">free</span> <span class="token parameter variable">-m</span>

swap --show（swap -s）

<span class="token function">grep</span> SwapTotal /proc/meminfo

// Swappiness is a property of the Linux kernel that changes the balance between swapping out runtime memory, as opposed to dropping pages from the system page cache. Swappiness can be <span class="token builtin class-name">set</span> to values between <span class="token number">0</span> and <span class="token number">100</span> inclusive. A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will <span class="token function">make</span> the kernel aggressively try to use swap space. The default value is <span class="token number">60</span>, and <span class="token keyword">for</span> <span class="token function">most</span> desktop systems, setting it to <span class="token number">100</span> may affect the overall performance, whereas setting it lower <span class="token punctuation">(</span>even <span class="token number">0</span><span class="token punctuation">)</span> may improve interactivity <span class="token punctuation">(</span>by decreasing response latency.
<span class="token function">cat</span> /proc/sys/vm/swappiness
// 临时修改
<span class="token builtin class-name">echo</span> <span class="token number">60</span> <span class="token operator">&gt;</span> /proc/sys/vm/swappiness
// 或者
<span class="token function">sysctl</span> <span class="token assign-left variable">vm.swappiness</span><span class="token operator">=</span><span class="token number">60</span>
// 永久修改，需要重启，本质就是每次开启加载下这个新配置
<span class="token builtin class-name">echo</span> <span class="token string">'vm.swappiness=60'</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf

// 利用dd来划分空间
<span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>swapfile <span class="token assign-left variable">bs</span><span class="token operator">=</span>1M <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">980</span>
<span class="token function">chmod</span> <span class="token number">600</span> swapfile
// 转换成swap类型文件
<span class="token function">mkswap</span> swapfile

<span class="token function">swapon</span> swapfile
// 卸载
swapoff swapfile


// 永久生效
<span class="token function">vim</span> /etc/fstab
// 添加
swapfile-path none swap defaults <span class="token number">0</span> <span class="token number">0</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.9,words:270},y:"a",t:"Swap"},["/linux/swap","/linux/swap.md"]],["v-32db7ed0","/linux/tcpdump.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> tcpdump</h1>
<p>tcp|ip|arp 注意 tcp [src|dst] port xxx, ip [src|dst] host <a href="http://xxx.xxx.xxx.xxx" target="_blank" rel="noopener noreferrer">xxx.xxx.xxx.xxx</a>，只能 tcp 修饰 port，ip 修饰 host</p>
<p>host <a href="http://xxx.xxx.xxx.xxx" target="_blank" rel="noopener noreferrer">xxx.xxx.xxx.xxx</a> ip 地址或者域名</p>`,r:{minutes:1.09,words:326},y:"a",t:"tcpdump"},["/linux/tcpdump","/linux/tcpdump.md"]],["v-86c1b21a","/linux/vim.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> vim</h1>
<h2> json 工具</h2>
<p>在 vim 输入以下命令就可以格式化</p>
<p>:%!python3 -m json.tool</p>
`,r:{minutes:.07,words:21},y:"a",t:"vim"},["/linux/vim","/linux/vim.md"]],["v-5d186e13","/linux/%E5%86%85%E5%AD%98%E8%80%97%E7%94%A8.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 内存耗用</h1>
<h2> VSS - Virtual Set Size （用处不大）</h2>
<p>虚拟耗用内存（包含共享库占用的全部内存，以及分配但未使用内存）。其大小还包括了可能不在 RAM 中的内存（比如虽然 malloc 分配了空间，但尚未写入）。VSS 很少被用于判断一个进程的真实内存使用量。</p>
<figure><figcaption></figcaption></figure>
<h2> RSS - Resident Set Size （用处不大）</h2>
<p>实际使用物理内存（包含共享库占用的全部内存）。但是 RSS 还是可能会造成误导，因为它仅仅表示该进程所使用的所有共享库的大小，它不管有多少个进程使用该共享库，该共享库仅被加载到内存一次。所以 RSS 并不能准确反映单进程的内存占用情况</p>`,r:{minutes:2.07,words:621},y:"a",t:"内存耗用"},["/linux/内存耗用.html","/linux/%E5%86%85%E5%AD%98%E8%80%97%E7%94%A8","/linux/内存耗用.md","/linux/%E5%86%85%E5%AD%98%E8%80%97%E7%94%A8.md"]],["v-5c7f1620","/go/gc%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html",{d:"2023-03-11T18:24:39.000Z",e:`<h1> gc 性能优化</h1>
<p>Go gc 触发时机为 heap 大小增长为上次 gc 的两倍时。但在 GO GC 实际实践中会按照 Pacer 调频算法根据堆增长速度等因素，使堆大小在达到两倍大小前提前发起 GC。通过调整 GC 的步调，以调整 GC 的触发频率。</p>
<p>两种方式</p>
<ol>
<li>设置 gc</li>
<li>设置 debug.SetGCPercent()</li>
</ol>
<p>设置 GOGC 的弊端</p>
<ul>
<li>GOGC 设置比率的方式不精确；</li>
<li>GOGC 设置过小，容易频繁触发 GC；</li>
<li>对某些程序本身占用内存就低，容易触发 GC；</li>
<li>GOGC 设置很大，有的时候又容易触发 OOM；</li>
</ul>`,r:{minutes:1.59,words:476},y:"a",t:"gc 性能优化"},["/go/gc 性能优化.html","/go/gc%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96","/go/gc 性能优化.md","/go/gc%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.md"]],["v-69f10f0f","/go/gc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> gc</h1>
<h2> go 1.3 标记清楚法</h2>
<p>Stw，扫描所有堆栈数据段，做出清除标记，然后清除，stw 结束</p>
<h2> go 1.5 三色标记法</h2>
<p>stack</p>
<p>heap</p>
<p>data segment</p>
<p>以上存在的数据 gc 之前都标记为白色</p>
<p>开始追踪到的 root 节点都标记为灰色，表示追踪还没完成</p>
<p>基于某个节点的追踪完成，则把该节点标记为黑色，是存活数据</p>
<p>基于黑色节点追踪到的都会标记为灰色，灰色的继续追踪，直到只存在黑白两色</p>
<p>垃圾就是白色，有用数据就是黑色</p>`,r:{minutes:3.89,words:1167},y:"a",t:"gc"},["/go/gc","/go/gc.md"]],["v-20236824","/go/go%20tool%20compile.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> go tool compile</h1>
<h3> 命令行</h3>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go tool compile [flags] file...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定的文件必须是 Go 源文件和同一个包下的其他部分。所有目标操作系统和体系结构都使用相同的编译器。 GOOS 和 GOARCH 环境变量设置了所需的属性。</p>`,r:{minutes:2.02,words:607},y:"a",t:"go tool compile"},["/go/go tool compile.html","/go/go%20tool%20compile","/go/go tool compile.md","/go/go%20tool%20compile.md"]],["v-27a7113a","/go/gpm.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> gpm</h1>
<p>Go 程序执行过</p>
<p>可执行文件（go 编译好的可执行文件）开始执行</p>
<p>_rt0_amd64_windows // 不同平台执行入口不同</p>
<p>_rt0_amd64_linux // 不同平台执行入口不同</p>
<p>...osinit... // 一系列的检测和初始化</p>
<p>schedinit 调度初始化，按照 GOMAXPROCS 这个环境变量决定创建多少个 p，allp 的数量</p>
<p>创建 main goroutine 之前 allp[0]-&gt;m0-&gt;g0</p>
<p>以 runtime.run 为程序入口，new main goroutine(newproc 函数调用)</p>`,r:{minutes:2.66,words:797},y:"a",t:"gpm"},["/go/gpm","/go/gpm.md"]],["v-1731abc5","/go/mod.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> mod</h1>
<h2> 常用命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//目标 repo 有哪些版本
go list <span class="token parameter variable">-m</span> <span class="token parameter variable">-versions</span> repo

//实际最终使用那个版本的repo
go list <span class="token parameter variable">-m</span> all<span class="token operator">|</span><span class="token function">grep</span> repo

// 某个repo 被依赖的list
go mod graph <span class="token operator">|</span><span class="token function">grep</span> repo

// 某个repo 被引用的链路
go mod why repo


go get <span class="token punctuation">[</span>option<span class="token punctuation">]</span> repo
<span class="token parameter variable">-t</span> flag：考虑构建测试所需的module。
<span class="token parameter variable">-d</span> flag：下载每个module的源代码，但不要构建或安装它们。
<span class="token parameter variable">-v</span> flag：提供详细输出。
./… ：在整个源代码树中执行这些操作，并且仅更新所需的依赖项。

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.62,words:185},y:"a",t:"mod"},["/go/mod","/go/mod.md"]],["v-5dba4a60","/go/protoc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> protoc</h1>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>protoc-gen-gofast (在gofast一基础上， 可以导入gogoprotobuf)
protoc-gen-gogofast (在gofast一基础上， 可以导入gogoprotobuf)
protoc-gen-gogofaster (在gogofast基础上, 去掉XXX_unrecognized方法, 更少的指针字段)
protoc-gen-gogoslick (在gogofaster基础上, 辅助方法string, gostring 和 equal)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.77,words:231},y:"a",t:"protoc"},["/go/protoc","/go/protoc.md"]],["v-5bd11c99","/go/test.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> test</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">BenchmarkGetPrimes</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token function">GetPrimes</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.22,words:365},y:"a",t:"test"},["/go/test","/go/test.md"]],["v-d0470fda","/go/%E5%9F%BA%E7%A1%80.html",{d:"2023-03-11T18:24:39.000Z",e:`<h1> 基础</h1>
<p>slice，map，channel 都是引用类型</p>
<p>array 是值类型，区分 slice</p>
<p>slice 触发扩容，新的赋值的 slice 的 data 会指向新的底层数组</p>
<h2> 闭包</h2>
<p>闭包是为了减少全局变量，所以闭包引用全局变量不是好的编程方式。</p>
<p>闭包这种隐秘的共享变量的方式带来的坏处是不够直接，不够清晰，除非是非常有价值的地方，一般不建议使用闭包。</p>
<h2> go 函数的内部实现</h2>
<p>go 函数使用的是 caller-save 的模式，即由调用者负责保存寄存器。</p>
<p>SB static base pointer 静态基址寄存器，它和全局符号一起表示全局变量的地址。</p>`,r:{minutes:5.26,words:1577},y:"a",t:"基础"},["/go/基础.html","/go/%E5%9F%BA%E7%A1%80","/go/基础.md","/go/%E5%9F%BA%E7%A1%80.md"]],["v-3780fdb0","/go/%E6%9D%82%E9%A1%B9.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 杂项</h1>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
<figure><figcaption></figcaption></figure>
`,r:{minutes:.05,words:14},y:"a",t:"杂项"},["/go/杂项.html","/go/%E6%9D%82%E9%A1%B9","/go/杂项.md","/go/%E6%9D%82%E9%A1%B9.md"]],["v-45b37b7c","/go/%E6%A6%82%E5%BF%B5.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 基础概念</h1>
<p>memory order 本身就是一个高层的语义，比如 CPP、Rust 这样语言提供了这些选项。
memory order 是编译器+平台提供的最低保证，除非有平台完全不支持 SeqCst 的约束，否则正确使用 memory order 是不会有逻辑错误的风险的。
部分平台没有实现所有语义（比如主流的 X86，用 Acquire 和 Release，其实等价于 SeqCst），但是只会用更强的语义实现代替</p>
<p>x86 的 relaxed 等价于 release 和 acquire，但是 seqcst 还是不一样的哦，会加上 xchg</p>
<p>面试时候，可以问一下关于 CPU Cache 一致性，Data race 中的可见性、原子性，也可以问一下 Go 里面 关于 sync.Once/Sync.Mutex 为何可以利用 XCHG 来保证 可见性传递；</p>`,r:{minutes:.77,words:230},y:"a",t:"基础概念"},["/go/概念.html","/go/%E6%A6%82%E5%BF%B5","/go/概念.md","/go/%E6%A6%82%E5%BF%B5.md"]],["v-9f6d3fce","/go/%E6%AF%9B%E5%89%91.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 毛老师语录</h1>
<p>最近质量保障中心，接下来会配合大家做一些测试转型的动作，刚才在其他几个群，也同步过。
为提升研发迭代效率，共建质量，希望推动各业务方加强研发自测。前期会找一些项目做试点，并且收集反馈，加强相关工具与基础设施建设，并逐步扩大自测、免测的项目范围。
想问问大家，各自负责的方向有没有合适试点的？大家对这个提议，有什么反馈和建议，也可以随时讨论。</p>
<p>计划分阶段实施如下：</p>
<ol>
<li>
<p>小范围试点：
-- 收集研发自测的痛点，加强相关基建
-- 复盘质量情况，摸索和判断哪些项目类型适合自测免测
-- 复盘效率情况，这个模式是否更高效，成本更精益</p>
</li>
<li>
<p>扩大试点范围：
-- 引入更多合适自测项目，扩大试点范围
-- 完善引导，TC 层面在 Job Model 等方面给予倾斜
-- 把相关要求、工具使用纳入新人培训体系</p>
</li>
<li>
<p>形成新的模式：
-- 针对更合适自测的项目类型，提出更明确的要求
-- 相应项目降低测试资源投入</p>
</li>
</ol>`,r:{minutes:1.25,words:376},y:"a",t:"毛老师语录"},["/go/毛剑.html","/go/%E6%AF%9B%E5%89%91","/go/毛剑.md","/go/%E6%AF%9B%E5%89%91.md"]],["v-ae077b66","/go/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 版本升级</h1>
<h2> 1.16</h2>
<p>go.1.12 - go1.15 版本的内存回收策略使用的是 MADV_FREE，1.16 后使用的是 MADV_DONTNEED 策略。</p>
<h3> Runtime</h3>
<p>The new <a href="https://go.dev/pkg/runtime/metrics/" target="_blank" rel="noopener noreferrer"><code>runtime/metrics</code></a> package introduces a stable interface for reading implementation-defined metrics from the Go runtime. It supersedes existing functions like <a href="https://go.dev/pkg/runtime/#ReadMemStats" target="_blank" rel="noopener noreferrer"><code>runtime.ReadMemStats</code></a> and <a href="https://go.dev/pkg/runtime/debug/#GCStats" target="_blank" rel="noopener noreferrer"><code>debug.GCStats</code></a> and is significantly more general and efficient. See the package documentation for more details.</p>`,r:{minutes:6.83,words:2049},y:"a",t:"版本升级"},["/go/版本升级.html","/go/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7","/go/版本升级.md","/go/%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7.md"]],["v-15f7cb44","/go/%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html",{d:"2023-03-11T18:24:39.000Z",e:`<h1> 相关命令</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">go</span> run <span class="token operator">-</span>gcfalgs <span class="token char">'-m -l'</span> main<span class="token punctuation">.</span><span class="token keyword">go</span>
<span class="token operator">-</span>m 会打印出逃逸分析的优化策略，实际上最多总共可以用 <span class="token number">4</span> 个 <span class="token operator">-</span>m，但是信息量较大，一般用 <span class="token number">1</span> 个就可以了。
<span class="token operator">-</span>l 会禁用函数内联，在这里禁用掉内联能更好的观察逃逸情况，减少干扰。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.3,words:691},y:"a",t:"相关命令"},["/go/相关命令.html","/go/%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4","/go/相关命令.md","/go/%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.md"]],["v-69eb1ee5","/go/%E8%B0%83%E5%BA%A6.html",{d:"2023-03-11T18:24:39.000Z",e:`<h1> 调度</h1>
<h4> 生产 goroutine</h4>
<p>生产的 goroutine 有三个去处: p.runnext,p.local runq,schedt.global runq</p>
<p>go func(){...} go 关键字底层调用 runtime.newproc 创建 g，按照优先级给到三个去处</p>
<p>先看 p.runnext，为空调用 runtime.runqput 塞进去 g</p>
<p>非空的情况下新的 goroutine 就会抢占 runnext，挤出去的 g 被放到 local runq 中</p>
<h4> 消费执行 g 的过程</h4>`,r:{minutes:.29,words:88},y:"a",t:"调度"},["/go/调度.html","/go/%E8%B0%83%E5%BA%A6","/go/调度.md","/go/%E8%B0%83%E5%BA%A6.md"]],["v-41143382","/go/%E9%97%AD%E5%8C%85.html",{d:"2023-03-11T18:24:39.000Z",e:`<h1> 闭包</h1>
<p>go 函数称为 function value，非是一个指针， 本质是个结构体，结构体包含一个指针，指向函数入口地址，原因是闭包的支持</p>
<p>闭包的定义，满足两个条件：1.要有自由变量，在函数外部定义但在函数内部被引用；2 脱离了捕捉时的上下文后，能照常运行。捕捉时对于值的处理可以是值拷贝，也可以是引用。</p>
<p>闭包中变量称为捕获变量，存放在捕获列表中，所以 go 语音中闭包就是有捕获列表的 function value</p>
<p>变量的 case</p>
<p>1.只是初始化赋值，然后被返回，没有其他地方修改，那简单，直接 copy 值到捕获列表中</p>`,r:{minutes:.76,words:229},y:"a",t:"闭包"},["/go/闭包.html","/go/%E9%97%AD%E5%8C%85","/go/闭包.md","/go/%E9%97%AD%E5%8C%85.md"]],["v-1e82a95c","/opreating-system/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 进程与线程</h1>
<h2> 同步</h2>
<p>临界区：对多进程串行化来安全访问公共资源，只有个一个线程可以访问，其他挂起</p>
<p>互斥量：互斥对象机制，相当于锁，和临界区相识，但是可以命名即跨进程使用，需要更多资源来创建，所以进程内部使用临界区速度更快，资源占用更少</p>
<p>信号量：允许统一时刻访问同一资源的最大线程数目。本质上，信号量是一个计数器</p>
<p>PV 操作和信号量</p>
<p>互斥量，信号量，事件都可以跨进程使用</p>
<p>进程间通信方法：</p>
<ol>
<li>
<p>访问系统公共空间或者外设，注册表、数据库等磁盘文件访问，但是都不算，因为效率低，有实时性要求</p>
</li>
<li>
<p>进程间通信包括管道、系统 IPC(包含消息队列，信号量、共存存储)、socket</p>
</li>
</ol>`,r:{minutes:1.07,words:320},y:"a",t:"进程与线程"},["/opreating-system/操作系统.html","/opreating-system/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F","/opreating-system/操作系统.md","/opreating-system/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.md"]],["v-5a02890e","/other/testpic.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> TestPic</h1>
<p>win11 picgo gen</p>
<figure><img src="http://pic.ruizhou.cf/PicGo/202302042326105.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
`,r:{minutes:.03,words:8},y:"a",t:"TestPic"},["/other/testpic","/other/testpic.md"]],["v-cb60c1de","/other/%E6%AD%A3%E5%88%99.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 正则</h1>
<p>(^//)([\\w\\u4e00-\\u9fa5]{1})(?!😇</p>
<p>//fx</p>
<p>//我是</p>
<p>排除 //go:</p>
`,r:{minutes:.04,words:13},y:"a",t:"正则"},["/other/正则.html","/other/%E6%AD%A3%E5%88%99","/other/正则.md","/other/%E6%AD%A3%E5%88%99.md"]],["v-311d1129","/source-code/",{d:"2023-03-11T18:05:24.000Z",e:`<!-- markdownlint-disable MD033 -->
<div class="catalog-display-container">
  </div>
`,r:{minutes:.05,words:16},y:"a",t:"源码解读"},["/source-code/index.html","/source-code/README.md"]],["v-00fa2137","/systems-performance/%E6%80%A7%E8%83%BD%E4%B9%8B%E5%B7%85.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 性能之巅</h1>
<h2> 概览</h2>
<figure><figcaption></figcaption></figure>
`,r:{minutes:.04,words:12},y:"a",t:"性能之巅"},["/systems-performance/性能之巅.html","/systems-performance/%E6%80%A7%E8%83%BD%E4%B9%8B%E5%B7%85","/systems-performance/性能之巅.md","/systems-performance/%E6%80%A7%E8%83%BD%E4%B9%8B%E5%B7%85.md"]],["v-737a2942","/technical-term/%E6%9D%82%E8%AE%B0.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 杂记</h1>
<p><strong>(必须描述) High Availability／容错(超时，降级，重试，熔断，限流等)／性能／scalability(状态)等的设计考虑</strong></p>
<p>可靠性</p>
<p>Failover，失效切换</p>
<p>Failback，自动恢复</p>
<p>Failsafe，安全兜底</p>
<p>Failfast，快速失败</p>
<p>Circuit Breker，熔断</p>
<p>BulkHead，故障阈隔离</p>
<p>FallBack，降级</p>
<p>CurrentLimitting，限流</p>
<p>防误操作，边界判断</p>`,r:{minutes:.59,words:177},y:"a",t:"杂记"},["/technical-term/杂记.html","/technical-term/%E6%9D%82%E8%AE%B0","/technical-term/杂记.md","/technical-term/%E6%9D%82%E8%AE%B0.md"]],["v-ca57f694","/technical-term/%E6%A6%82%E5%BF%B5.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 常用概念</h1>
<h2> 内容相关</h2>
<p>诸如 PUGC、UGC 等均在指视频平台的运行模式，而 PUGC 全称 Professional Generated Content + User Generated Content，即即“专业用户生产内容”或“专家生产内容”，指在视频平台中把 UGC 和 PGC 模式结合的内容生产模式。</p>
<p>UGC：全称 User Generated Content，也就是<code>用户生成内容</code>，即用户原创内容。即用户把自己原创的内容通过互联网平台进行展示或者提供给其他用户。</p>
<p>PGC：全称 Professional Generated Content，指<code>专业生产内容</code>。用来泛指内容个性化、视角多元化、传播民主化、社会关系虚拟化。</p>`,r:{minutes:3.61,words:1082},y:"a",t:"常用概念"},["/technical-term/概念.html","/technical-term/%E6%A6%82%E5%BF%B5","/technical-term/概念.md","/technical-term/%E6%A6%82%E5%BF%B5.md"]],["v-0d3d58f3","/todo/feature.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> New Tech</h1>
<p>dpvs</p>
<p>xdp/bpf <a href="https://mp.weixin.qq.com/s/H9imUbdJnfj1NKdK9jtxEw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/H9imUbdJnfj1NKdK9jtxEw</a></p>
<p>xdp 主要动态加速在用</p>
<p>dpu</p>
<p>cxl</p>
<p>nvlink</p>
<p>ngx 那个不能算真无损热升级，不仅半连接以及全连接队列里的未被 accept 消费的 req，长链接也无法迁移，且 ngx 的二进制热升级还有诸多限制并不好用与实用; envoy 那个是通过 UDS 来传递 listener_fd 的机制实现</p>`,r:{minutes:.7,words:210},y:"a",t:"New Tech"},["/todo/feature","/todo/feature.md"]],["v-0995ed03","/todo/todo.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> doc</h1>
<h2> 待读 doc</h2>
<h3> linux</h3>
<p><a href="https://cloud.tencent.com/developer/column/88924" target="_blank" rel="noopener noreferrer">Linux 内核</a></p>
<p><a href="https://tengine.taobao.org/book/index.html" target="_blank" rel="noopener noreferrer">nginx</a></p>
<h2> 已读待输出</h2>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> linux 内存</label></li>
</ul>`,r:{minutes:.51,words:154},y:"a",t:"doc"},["/todo/todo","/todo/todo.md"]],["v-c2338974","/todo/%E6%AF%9B%E8%80%81%E5%B8%88%E6%8E%A8%E8%8D%90.html",{d:"2023-03-11T18:28:15.000Z",e:`<h1> 毛老师推荐</h1>
<p>Quick Start：
<a href="https://golang.org/doc/install" target="_blank" rel="noopener noreferrer">https://golang.org/doc/install</a>
<a href="https://tour.golang.org/welcome/1" target="_blank" rel="noopener noreferrer">https://tour.golang.org/welcome/1</a></p>
<p>语言层面：
《Effective Go》 <a href="https://golang.org/doc/effective_go.html" target="_blank" rel="noopener noreferrer">https://golang.org/doc/effective_go.html</a> （我是看这个入门，官方推荐的文档，轻松易读
<a href="https://item.jd.com/12187988.html" target="_blank" rel="noopener noreferrer">https://item.jd.com/12187988.html</a> （比较详细的书籍</p>`,r:{minutes:4.79,words:1438},y:"a",t:"毛老师推荐"},["/todo/毛老师推荐.html","/todo/%E6%AF%9B%E8%80%81%E5%B8%88%E6%8E%A8%E8%8D%90","/todo/毛老师推荐.md","/todo/%E6%AF%9B%E8%80%81%E5%B8%88%E6%8E%A8%E8%8D%90.md"]],["v-9fdd33a2","/linux/malloc/tcmalloc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> pcmalloc vs tcmalloc</h1>
<h2> tcmalloc</h2>
<p>tcmalloc 使用细颗粒度的高效自旋锁，ptmalloc2 使用 per-thread arenas</p>
<p>tcmalloc 每个线程分配一个本地线程缓存，小的分配直接放在里面；对象可以从中心堆移动到本地线程缓存，并且周期行进行 gc，将内存从本地线程缓存移动到中心缓存。</p>
<p>tcmalloc 对应小于 32K 的小对象和大对象处理方式不同。大对象使用中心堆，通过页分配器（一页 4K，通常是一些列的页）。</p>
<p>一些列的页分割成大小相同的小对象，如一页 4K 可以分成 32 个 128 字节对象。</p>`,r:{minutes:.6,words:181},y:"a",t:"pcmalloc vs tcmalloc"},["/linux/malloc/tcmalloc","/linux/malloc/tcmalloc.md"]],["v-8577f6a2","/linux/mem/cgroup.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> cgroup</h1>
<h2> 概念</h2>
<h2> reference</h2>
<p><a href="https://mp.weixin.qq.com/s/66LxGlCBhSLg510Hfwk7xw" target="_blank" rel="noopener noreferrer">资源隔离技术之内存隔离</a></p>
`,r:{minutes:.06,words:19},y:"a",t:"cgroup"},["/linux/mem/cgroup","/linux/mem/cgroup.md"]],["v-9c77694e","/linux/tcpip/tcp%E5%8D%8F%E8%AE%AE%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> tcp 协议滑动窗口</h1>
<h4> 发送方</h4>
<p>SND.WND</p>
<p>SND.UNA</p>
<p>SND.NXT</p>
<p>可用窗口= SND.WND-(SND.NXT-SND.UNA)</p>
<h4> 接收方</h4>
<p>rcv.wnd</p>
<p>rcv.nxt</p>
<p>操作系统缓冲区和滑动窗口</p>
<p>接收方，缓冲区有 t1 数据没读那么滑动窗口就有减去 t1</p>
<p>糊涂窗口综合症</p>
<h4> 接收方</h4>
<p>窗口小于 min(mss,缓存空间 1/2)，就会发送窗口为 0，等处理一些数据后，使得窗口&gt;=mss，或者缓存空间有一般可用</p>`,r:{minutes:2.63,words:789},y:"a",t:"tcp 协议滑动窗口"},["/linux/tcpip/tcp协议滑动窗口.html","/linux/tcpip/tcp%E5%8D%8F%E8%AE%AE%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3","/linux/tcpip/tcp协议滑动窗口.md","/linux/tcpip/tcp%E5%8D%8F%E8%AE%AE%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3.md"]],["v-66e1220e","/linux/tcpip/%E5%8D%8F%E8%AE%AE%E6%A0%88.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 协议栈</h1>
<h2> 理论模型</h2>
<p>osi 七层模型</p>
<p>tcp/ip 四层模型</p>
<p>四层模型比较通用，每层都有自己的协议头部</p>
<h2> 以太网帧格式 （数据链路层）</h2>
<p>我们常用 ethernet II (罗马数字)，Ethernet 2 格式的以太网帧最大 1518bytes，最小 64bytes。</p>
<p>ethernet II 帧格式：目的地址 6，源地址 6，协议 2，数据 46-1500，校验和 4。MTU: 1500</p>
<p>最小 6+6+2+46+4=64bytes，最大 6+6+2+1500+4=1518bytes。</p>`,r:{minutes:4.21,words:1262},y:"a",t:"协议栈"},["/linux/tcpip/协议栈.html","/linux/tcpip/%E5%8D%8F%E8%AE%AE%E6%A0%88","/linux/tcpip/协议栈.md","/linux/tcpip/%E5%8D%8F%E8%AE%AE%E6%A0%88.md"]],["v-04f4c8f0","/linux/ubuntu/%E6%97%B6%E5%8C%BA.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> timedatectl</h1>
<p>查看时区</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zhou@zhou:~$ timedatectl
               Local time: Sat <span class="token number">2022</span>-09-10 06:44:53 UTC
           Universal time: Sat <span class="token number">2022</span>-09-10 06:44:53 UTC
                 RTC time: Sat <span class="token number">2022</span>-09-10 06:44:53
                Time zone: Etc/UTC <span class="token punctuation">(</span>UTC, +0000<span class="token punctuation">)</span>
System clock synchronized: no
              NTP service: inactive
          RTC <span class="token keyword">in</span> <span class="token builtin class-name">local</span> TZ: no
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.55,words:164},y:"a",t:"timedatectl"},["/linux/ubuntu/时区.html","/linux/ubuntu/%E6%97%B6%E5%8C%BA","/linux/ubuntu/时区.md","/linux/ubuntu/%E6%97%B6%E5%8C%BA.md"]],["v-7db669ff","/go/asm/monkey%20patch.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 主要思路</h1>
<blockquote>
<p>注意，plan9 和 intel 汇编指令不同</p>
</blockquote>
<p>replacefunc 替换 rawfunc</p>
<h2> 全局</h2>
<p>先不区分协程，全局生效，虽然会有很多问题</p>
<p>先找到 replacefunc 和 rawfunc 内存地址，</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>replacefuncReflectValue <span class="token operator">=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>replacefunc<span class="token punctuation">)</span> <span class="token comment">// 获取reflect.Value</span>
replacefuncPtr <span class="token operator">:=</span> <span class="token function">uintprt</span><span class="token punctuation">(</span>unsate<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>replacefuncReflectValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//??</span>
<span class="token comment">// replacefunc 内存地址做处理，</span>
<span class="token keyword">func</span> <span class="token function">jmp</span><span class="token punctuation">(</span>to <span class="token builtin">uintptr</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">{</span>
    <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span>     <span class="token comment">// movabs rdx</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">byte</span><span class="token punctuation">(</span>to <span class="token operator">&gt;&gt;</span> <span class="token number">56</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// movabs rdx,to</span>
    <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span>     <span class="token comment">// jmp rdx</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.39,words:116},y:"a",t:"主要思路"},["/go/asm/monkey patch.html","/go/asm/monkey%20patch","/go/asm/monkey patch.md","/go/asm/monkey%20patch.md"]],["v-cb41d22a","/go/asm/plan9.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> go plan9</h1>
<h2> 基本指令</h2>
<p><a href="https://go.xargin.com/docs/assembly/assembly/" target="_blank" rel="noopener noreferrer">https://go.xargin.com/docs/assembly/assembly/</a></p>
<ul>
<li>MOV 数据搬运，赋值</li>
<li>LEA 取址 &amp;</li>
<li>TEST</li>
<li>CMP 比较</li>
<li>JLS （ jump less ）小于时跳转</li>
<li>JMP（ jump ）无条件跳转</li>
<li>JEQ（ jump equal ）等于时跳转</li>
<li>SUB 相减，结果保存到目标操作数</li>
<li>ADD 相加，结果保存到目标操作数</li>
<li>RET 返回</li>
<li>NOP 空指令</li>
<li>CALL 调用函数</li>
<li>SHL（ shift logical left ） 逻辑左移指令 <code>&lt;&lt;</code></li>
<li>SHR（ shift logical right ） 逻辑右移指令 <code>&gt;&gt;</code>，右移时不保留操作数的符号，用 0 代替</li>
<li>SAL（ shift arithmetic left ）算术左移指令</li>
<li>SAR（ shift arithmetic right ）算术右移指令，右移时保留操作数的符号</li>
<li>XADD：交换并相加</li>
<li>NEG：求补指令，就是取相反数</li>
<li>XORPS：源操作数（第二个操作数）与目标操作数（第一个操作数）进行异或。结果保存到目标操作数</li>
<li>MOVUPS：与 MOV 一样，操作对象的类型不一样，这里是包含四个压缩单精度浮点值的双四字</li>
<li>XCHG: 交换两个操作数内容，自带 LOCK 总线锁属性</li>
</ul>`,r:{minutes:20.77,words:6231},y:"a",t:"go plan9"},["/go/asm/plan9","/go/asm/plan9.md"]],["v-5fe9137f","/go/asm/%E5%9F%BA%E7%A1%80.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 基础</h1>
<h2> 汇编程序指令 assembler directives</h2>
<h3> DATA</h3>
<p>DATA symbol + offset(SB)/width, value</p>
<p>在给定的 offset 和 width 处初始化该符号的内存为 value。 DATA 必须使用增加的偏移量来写入给定符号的指令。</p>
<div class="language-asm line-numbers-mode" data-ext="asm"><pre class="language-asm"><code>DATA divtab&lt;&gt;+0x00(SB)/4, $0xf4f8fcff
DATA divtab&lt;&gt;+0x04(SB)/4, $0xe6eaedf0
...
DATA divtab&lt;&gt;+0x3c(SB)/4, $0x81828384
GLOBL divtab&lt;&gt;(SB), RODATA, $64

GLOBL runtime·tlsoffset(SB), NOPTR, $4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.37,words:1910},y:"a",t:"基础"},["/go/asm/基础.html","/go/asm/%E5%9F%BA%E7%A1%80","/go/asm/基础.md","/go/asm/%E5%9F%BA%E7%A1%80.md"]],["v-d8c21a80","/go/profiles/block%20profiling.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> block profiling</h1>
`,r:{minutes:.01,words:2},y:"a",t:"block profiling"},["/go/profiles/block profiling.html","/go/profiles/block%20profiling","/go/profiles/block profiling.md","/go/profiles/block%20profiling.md"]],["v-095ab845","/go/profiles/dlv%20%E5%91%BD%E4%BB%A4.html",{d:"2023-03-11T18:24:39.000Z",e:`<h2> 基础</h2>
<p>go build 可以用*-gcflags<em>给</em>go*编译器传入参数，也就是传给 go tool compile 的参数，因此可以用 go tool compile --help 查看所有可用的参数。</p>
<p>其中-m 可以检查代码的编译优化情况，包括逃逸情况和函数是否内联。</p>
<p>如果只在编译特定包时需要传递参数，格式应遵守“包名=参数列表”，如 go build -gcflags -gcflags='log=-N -l' main.go</p>
<p>go build 用-ldflags 给 go 链接器传入参数，实际是给 go tool link 的参数，可以用 go tool link --help 查看可用的参数。</p>`,r:{minutes:2.5,words:749},y:"a",t:""},["/go/profiles/dlv 命令.html","/go/profiles/dlv%20%E5%91%BD%E4%BB%A4","/go/profiles/dlv 命令.md","/go/profiles/dlv%20%E5%91%BD%E4%BB%A4.md"]],["v-75e42678","/go/profiles/dlv%20%E6%A1%88%E4%BE%8B.html",{d:"2023-03-11T18:24:39.000Z",e:`<p>// 生成无内联优化的可执行二进制文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go build <span class="token parameter variable">-gcflags</span> <span class="token string">"-N -l"</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:1.78,words:535},y:"a",t:""},["/go/profiles/dlv 案例.html","/go/profiles/dlv%20%E6%A1%88%E4%BE%8B","/go/profiles/dlv 案例.md","/go/profiles/dlv%20%E6%A1%88%E4%BE%8B.md"]],["v-6f1b987a","/go/profiles/go%20profiling%20tracing%20observability.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> go profiling tracing observability</h1>
<p>Goroutine scheduler</p>
<p>Garbage Collection</p>
<p>The stack</p>
<p>The heap</p>
<h2> Go profilers</h2>
<h3> cpu profiler</h3>
<p>两种方式：</p>
<p>1.写文件</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>	file<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">"./cpu.pprof"</span><span class="token punctuation">)</span>
	pprof<span class="token punctuation">.</span><span class="token function">StartCPUProfile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
	<span class="token keyword">defer</span> pprof<span class="token punctuation">.</span><span class="token function">StopCPUProfile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// go tool pprof [--http=:8080] cpu.pprof|http://127.0.0.1:xxx/debug/pprof/profile [web浏览器]本地命令 打开 [文件采集或者web采集]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.91,words:274},y:"a",t:"go profiling tracing observability"},["/go/profiles/go profiling tracing observability.html","/go/profiles/go%20profiling%20tracing%20observability","/go/profiles/go profiling tracing observability.md","/go/profiles/go%20profiling%20tracing%20observability.md"]],["v-7cf0bcd1","/go/profiles/goroutine%20profiling.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> goroutine profiling</h1>
`,r:{minutes:.01,words:2},y:"a",t:"goroutine profiling"},["/go/profiles/goroutine profiling.html","/go/profiles/goroutine%20profiling","/go/profiles/goroutine profiling.md","/go/profiles/goroutine%20profiling.md"]],["v-cc77d808","/go/profiles/pprof%20tool%20and%20format.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> pprof tool and format</h1>
`,r:{minutes:.01,words:4},y:"a",t:"pprof tool and format"},["/go/profiles/pprof tool and format.html","/go/profiles/pprof%20tool%20and%20format","/go/profiles/pprof tool and format.md","/go/profiles/pprof%20tool%20and%20format.md"]],["v-0114a559","/go/profiles/stack%20traces.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> stack traces</h1>
`,r:{minutes:.01,words:2},y:"a",t:"stack traces"},["/go/profiles/stack traces.html","/go/profiles/stack%20traces","/go/profiles/stack traces.md","/go/profiles/stack%20traces.md"]],["v-aac4eefa","/other/interview/%E9%9D%A2%E8%AF%95.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 面试</h1>
<p>基础</p>
<p>网络编程</p>
<p>tcp 的 timewait 为啥要等 2msl</p>
<p>tcp 的半连接队列发生在哪个阶段 syncs queue</p>
<p>全连接队列发生在哪个阶段 accept queue</p>
<p>fd 就绪的通知模式，准确说 IO 系统调用是否可以非阻塞地执行</p>
<ul>
<li>水平触发：如果 fd 上可以非阻塞地执行 IO 系统调用，此时就会触发</li>
<li>边缘触发：如果 fd 自上次检测以来有了新的 IO 活动，比如新的输入，此时就会触发</li>
</ul>
<p>epoll 的工作过程</p>`,r:{minutes:1.22,words:366},y:"a",t:"面试"},["/other/interview/面试.html","/other/interview/%E9%9D%A2%E8%AF%95","/other/interview/面试.md","/other/interview/%E9%9D%A2%E8%AF%95.md"]],["v-20e7896c","/source-code/bilibili-kratos/cache.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> cache</h1>
<p>wire 有两个基本概念：提供者和注射器</p>
<h2> 提供者</h2>
<p>提供者就是普通的 go 函数，一般是 NewXXX</p>
<h2> 注射器</h2>
`,r:{minutes:.12,words:37},y:"a",t:"cache"},["/source-code/bilibili-kratos/cache","/source-code/bilibili-kratos/cache.md"]],["v-0d4f4684","/source-code/bilibili-kratos/io.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> io</h1>
<p>io 包主要提供 io.Reader, io.Writer 接口</p>
<p>实际就是对内存结构，文件，网络链接等进行读写</p>
<p>常用的实现是：</p>
<p>net.Conn, os.Stdin, os.File</p>
`,r:{minutes:.13,words:40},y:"a",t:"io"},["/source-code/bilibili-kratos/io","/source-code/bilibili-kratos/io.md"]],["v-02f9f3ee","/source-code/bilibili-kratos/protoc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> protoc</h1>
<p>主站 pb 生成</p>
<p>protoc --proto_path=/Users/zhou/go/src --proto_path=/Users/zhou/go/src/go-common/app/tool/protobuf/pkg/extensions --proto_path=/Users/zhou/go/src/go-live/app/service/play/api --bm_out=explicit_http=true:. api.proto</p>
<p>protoc --proto_path=/Users/zhou/go/src --proto_path=/Users/zhou/go/src/go-common/app/tool/protobuf/pkg/extensions --proto_path=/Users/zhou/go/src/go-live/app/service/play/api --gofast_out=Mgoogle/protobuf/any.proto=<a href="http://github.com/gogo/protobuf/types,Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,plugins=grpc:" target="_blank" rel="noopener noreferrer">github.com/gogo/protobuf/types,Mgoogle/protobuf/duration.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/struct.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/timestamp.proto=github.com/gogo/protobuf/types,Mgoogle/protobuf/wrappers.proto=github.com/gogo/protobuf/types,plugins=grpc:</a>. api.proto</p>`,r:{minutes:.35,words:104},y:"a",t:"protoc"},["/source-code/bilibili-kratos/protoc","/source-code/bilibili-kratos/protoc.md"]],["v-96cc17a8","/source-code/go-standard-lib/bytes.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> bytes</h1>
<h2> Reader</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Reader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    s        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
    i        <span class="token builtin">int64</span> <span class="token comment">// 当前读取下标</span>
    prevRune <span class="token builtin">int</span>   <span class="token comment">// 前一个字符的下标，也可能 &lt; 0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.8,words:539},y:"a",t:"bytes"},["/source-code/go-standard-lib/bytes","/source-code/go-standard-lib/bytes.md"]],["v-b2c63254","/source-code/go-standard-lib/container.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> container</h1>
<h2> list</h2>
<p>双向链表</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Element is an element of a linked list.</span>
<span class="token keyword">type</span> Element <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// Next and previous pointers in the doubly-linked list of elements.</span>
	<span class="token comment">// To simplify the implementation, internally a list l is implemented</span>
	<span class="token comment">// as a ring, such that &amp;l.root is both the next element of the last</span>
	<span class="token comment">// list element (l.Back()) and the previous element of the first list</span>
	<span class="token comment">// element (l.Front()).</span>
	next<span class="token punctuation">,</span> prev <span class="token operator">*</span>Element

	<span class="token comment">// The list to which this element belongs.</span>
	list <span class="token operator">*</span>List

	<span class="token comment">// The value stored with this element.</span>
	Value <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.56,words:167},y:"a",t:"container"},["/source-code/go-standard-lib/container","/source-code/go-standard-lib/container.md"]],["v-5962aca2","/source-code/go-standard-lib/net.http.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> net http</h1>
<h2> http client</h2>
<p>创建连接会初始化两个 channel</p>
<p>go writeLoop</p>
<p>从 writech 读取 wr，wr 包含 *Request，请求的一些信息</p>
<p>往 bufio.Writer (tcp 连接) 写入请求数据，结果 err 通过 writeRequest(wr) 中的 ch 发送</p>
<p>go readLoop</p>
<p>从 reqch 读取 rc，为了获取 req 的信息和可以发送 resp 的 ch</p>
<p>从 bufio.Reader (tcp 连接中) 读取 resp 的数据，copy req 部分数据来封装 resp，再把 resp 通过 requestAndChan(rc) 中的 ch 发送</p>`,r:{minutes:.56,words:167},y:"a",t:"net http"},["/source-code/go-standard-lib/net.http","/source-code/go-standard-lib/net.http.md"]],["v-1052a15d","/source-code/go-standard-lib/sort.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> sort interface</h1>
<p>定义了</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Interface <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token comment">// Len is the number of elements in the collection.</span>
	<span class="token function">Len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>

	<span class="token comment">// Less reports whether the element with index i</span>
	<span class="token comment">// must sort before the element with index j.</span>
	<span class="token comment">//</span>
	<span class="token comment">// If both Less(i, j) and Less(j, i) are false,</span>
	<span class="token comment">// then the elements at index i and j are considered equal.</span>
	<span class="token comment">// Sort may place equal elements in any order in the final result,</span>
	<span class="token comment">// while Stable preserves the original input order of equal elements.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Less must describe a transitive ordering:</span>
	<span class="token comment">//  - if both Less(i, j) and Less(j, k) are true, then Less(i, k) must be true as well.</span>
	<span class="token comment">//  - if both Less(i, j) and Less(j, k) are false, then Less(i, k) must be false as well.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Note that floating-point comparison (the &lt; operator on float32 or float64 values)</span>
	<span class="token comment">// is not a transitive ordering when not-a-number (NaN) values are involved.</span>
	<span class="token comment">// See Float64Slice.Less for a correct implementation for floating-point values.</span>
	<span class="token function">Less</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span>

	<span class="token comment">// Swap swaps the elements with indexes i and j.</span>
	<span class="token function">Swap</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:179},y:"a",t:"sort interface"},["/source-code/go-standard-lib/sort","/source-code/go-standard-lib/sort.md"]],["v-2d37c472","/source-code/go-standard-lib/strconv.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> strconv</h1>
<p>字符串与基本类型的转换</p>
`,r:{minutes:.04,words:12},y:"a",t:"strconv"},["/source-code/go-standard-lib/strconv","/source-code/go-standard-lib/strconv.md"]],["v-70f1ee16","/source-code/go-standard-lib/strings.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> strings</h1>
<p>提供一些字符串编辑操作，工具方法</p>
<h2> Reader</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Reader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  s        <span class="token builtin">string</span>    <span class="token comment">// Reader 读取的数据来源</span>
  i        <span class="token builtin">int</span> <span class="token comment">// current reading index（当前读的索引位置）</span>
  prevRune <span class="token builtin">int</span> <span class="token comment">// index of previous rune; or &lt; 0（前一个读取的 rune 索引位置）</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.68,words:205},y:"a",t:"strings"},["/source-code/go-standard-lib/strings","/source-code/go-standard-lib/strings.md"]],["v-473d3848","/source-code/grpc/",{d:"2023-03-11T16:47:37.000Z",c:"源码",g:["grpc"],r:{minutes:.03,words:8},y:"a",t:"go-grpc"},["/source-code/grpc/index.html","/source-code/grpc/README.md"]],["v-315f1caf","/source-code/grpc/grpc%E5%BA%93.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 资料</h1>
<p>联合 bilibili 的 kratos 的 warden grpc 服务框架<a href="/source-code/bilibili-kratos/grpc/" target="blank">grpc</a></p>
<p>grpc github 官方库：<a href="https://github.com/grpc/grpc" target="_blank" rel="noopener noreferrer">https://github.com/grpc/grpc</a></p>
<p>官方文档：<a href="https://github.com/grpc/grpc/tree/master/doc" target="_blank" rel="noopener noreferrer">https://github.com/grpc/grpc/tree/master/doc</a></p>`,r:{minutes:.13,words:40},y:"a",t:"资料"},["/source-code/grpc/grpc库.html","/source-code/grpc/grpc%E5%BA%93","/source-code/grpc/grpc库.md","/source-code/grpc/grpc%E5%BA%93.md"]],["v-65d94903","/systems-performance/xdp/af_xdp.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> af_xdp</h1>
<h2> 说明</h2>
<p>bpf bsd packet filter，能以安全的方式在不同的钩点执行用户注入到内核的字节码。2013 年 Alexei Starovoitov 对 BPF 进行了改造，有了 eBPF</p>
<h2> XDP</h2>
<p>eBFP 有很多钩子，而 XDP 就是 linux 网络数据处理的一个 hook 点。XDP 全称 eXPress Data Path，快速数据路径，能够在数据到达网卡驱动时对其进行处理。</p>
<p>三种运行模式：generic，native，offload。</p>
<figure><figcaption></figcaption></figure>`,r:{minutes:1.36,words:407},y:"a",t:"af_xdp"},["/systems-performance/xdp/af_xdp","/systems-performance/xdp/af_xdp.md"]],["v-e14f7a38","/tech/artificial-intelligence/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 卡尔曼滤波</h1>
<h2> 原理</h2>
<figure><figcaption></figcaption></figure>
`,r:{minutes:.04,words:13},y:"a",t:"卡尔曼滤波"},["/tech/artificial-intelligence/卡尔曼滤波.html","/tech/artificial-intelligence/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2","/tech/artificial-intelligence/卡尔曼滤波.md","/tech/artificial-intelligence/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2.md"]],["v-24d24a4f","/tech/bilibili/%E6%97%A5%E5%BF%97.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 日志流程</h1>
<p>应用(SDK, 或文件) → log-agent → log-collector → billions-elasticsearch</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-ap</span> <span class="token parameter variable">--unix</span>
Active UNIX domain sockets <span class="token punctuation">(</span>servers and established<span class="token punctuation">)</span>
Proto RefCnt Flags    Type       State         I-Node   PID/Program name    Path
unix  <span class="token number">3</span>      <span class="token punctuation">[</span> <span class="token punctuation">]</span>      SEQPACKET  CONNECTED     <span class="token number">2673916635</span> <span class="token number">19</span>/online-allliving
unix  <span class="token number">3</span>      <span class="token punctuation">[</span> <span class="token punctuation">]</span>      SEQPACKET  CONNECTED     <span class="token number">2673885088</span> - /var/run/lancer/collector_tcp.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.18,words:55},y:"a",t:"日志流程"},["/tech/bilibili/日志.html","/tech/bilibili/%E6%97%A5%E5%BF%97","/tech/bilibili/日志.md","/tech/bilibili/%E6%97%A5%E5%BF%97.md"]],["v-91c031d6","/tech/bilibili/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 服务发现</h1>
`,r:{minutes:.01,words:4},y:"a",t:"服务发现"},["/tech/bilibili/服务发现.html","/tech/bilibili/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0","/tech/bilibili/服务发现.md","/tech/bilibili/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.md"]],["v-41db700c","/tech/database/lock.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 锁</h1>
<ul>
<li>for update 仅适用于 InnoDB，并且必须开启事务，在 begin 与 commit 之间才生效。</li>
<li>要测试 for update 的锁表情况，可以利用 MySQL 的 Command Mode，开启二个视窗来做测试。
<strong>for update 的疑问点:</strong></li>
<li>当开启一个事务进行 for update 的时候，另一个事务也有 for update 的时候会一直等着，直到第一个事务结束吗？
答：会的。除非第一个事务 commit 或者 rollback 或者断开连接，第二个事务会立马拿到锁进行后面操作。不过也可以设置锁等待超时参数 innodb_lock_wait_timeout 来解决。</li>
<li>如果没查到记录会加锁吗？
答：会的。有主键/索引产生间隙锁，无主键/索引产生表锁表级锁。</li>
<li>for update 和 for update nowait 区别（前者阻塞其他事务，后者拒绝其他事务）
for update 锁住表或者锁住行，只允许当前事务进行操作（读写），其他事务被阻塞，直到当前事务提交或者回滚，被阻塞的事务自动执行
for update nowait 锁住表或者锁住行，只允许当前事务进行操作（读写），其他事务被拒绝，事务占据的 statement 连接也会被断开</li>
</ul>`,r:{minutes:1.04,words:311},y:"a",t:"锁"},["/tech/database/lock","/tech/database/lock.md"]],["v-378b0cea","/tech/database/mysql.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> mysql</h1>
<h2> 运行原理</h2>
<figure><figcaption></figcaption></figure>
<h2> 连接池</h2>
<p>mysql 服务和客户端的通信，mysql 服务侧有连接池，有自我保护</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>最大连接数
show variables like <span class="token string">'max_connections'</span><span class="token punctuation">;</span>
<span class="token builtin class-name">set</span> global <span class="token assign-left variable">max_connections</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">;</span>
单次最大数据报文
show variables like <span class="token string">'max_allowed_packet'</span><span class="token punctuation">;</span>
<span class="token builtin class-name">set</span> global <span class="token assign-left variable">max_allowed_packet</span><span class="token operator">=</span><span class="token number">83888608</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.68,words:2304},y:"a",t:"mysql"},["/tech/database/mysql","/tech/database/mysql.md"]],["v-0a5aa9da","/tech/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> 数据库原理</h1>
<h2> 时间复杂度</h2>
<p>时间复杂度用来检验某个算法处理一定量的数据要花多长时间</p>
<p>大 O 符号是关于一个算法的最坏情况的</p>
<p>二分搜索法</p>
<p>合并排序 sort()函数内部原理</p>
<p>先拆分 次数 log(N)</p>
<p>在一级一级排序 整体运算次数 N*log(N)</p>
<h2> 阵列、树、哈希表</h2>
<p>三者是现在数据库的支柱</p>
<h4> 阵列</h4>
<p>二维阵列是最简单的数据结构等法规规定</p>
<figure><img src="http://ww2.sinaimg.cn/large/7cc829d3jw1f3drdpqm1oj20cl0apdhp.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.25,words:376},y:"a",t:"数据库原理"},["/tech/database/数据库原理.html","/tech/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86","/tech/database/数据库原理.md","/tech/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86.md"]],["v-5ea5124a","/tech/docker/docker.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> docker</h1>
<p>基于内核 namespace 资源隔离，通过 cgroup 做资源控制，cpu，内存，网络</p>
<p>分为 client（docker CLI）和 dockerd（docker daemon）</p>
`,r:{minutes:.11,words:32},y:"a",t:"docker"},["/tech/docker/docker","/tech/docker/docker.md"]],["v-daf1ed44","/tech/docker/iptables.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> iptables</h1>
<h2> chain and table</h2>
<h3> table</h3>
<p>• filter：这里面的链条，规则，可以决定一个数据包是否可以到达目标进程端口</p>
<p>• mangle: 这里面的链条，规则，可以修改数据包的内容，比如 ttl</p>
<p>• nat：这里面的链条，规则，可以修改源和目标的 ip 地址，从而进行包路由。</p>
<p>• raw：这里面的链条，规则，能基于数据包的状态进行规则设定</p>
<h3> chain</h3>
<p>以搬瓦工 vps 为例 centos8 为例</p>
<table>
<thead>
<tr>
<th style="text-align:center">prerouting</th>
<th style="text-align:center">input</th>
<th style="text-align:center">forward</th>
<th style="text-align:center">output</th>
<th style="text-align:center">postrouting</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">mangle</td>
<td style="text-align:center">mangle</td>
<td style="text-align:center">mangle</td>
<td style="text-align:center">mangle</td>
<td style="text-align:center">mangle</td>
</tr>
<tr>
<td style="text-align:center"><strong><code>nat</code></strong></td>
<td style="text-align:center"><strong><code>nat</code></strong>（centos7+可以）</td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong><code>nat</code></strong></td>
<td style="text-align:center"><strong><code>nat</code></strong></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center"><strong><code>filter</code></strong></td>
<td style="text-align:center"><strong><code>filter</code></strong></td>
<td style="text-align:center"><strong><code>filter</code></strong></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">raw</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">raw</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>`,r:{minutes:7.41,words:2224},y:"a",t:"iptables"},["/tech/docker/iptables","/tech/docker/iptables.md"]],["v-5704a85a","/tech/docker/kubelet.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> kubelet</h1>
<h2> k8s vs Docker</h2>
<p><a href="https://zhuanlan.zhihu.com/p/405991286" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/405991286</a></p>
<p>参考文档：<a href="https://kubernetes.io/zh/docs/concepts/overview/components/" target="_blank" rel="noopener noreferrer">https://kubernetes.io/zh/docs/concepts/overview/components/</a></p>`,r:{minutes:.17,words:50},y:"a",t:"kubelet"},["/tech/docker/kubelet","/tech/docker/kubelet.md"]],["v-85e42c34","/tech/docker/linux-namespace.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> linux-namespace</h1>
<figure><figcaption></figcaption></figure>
<p>namespace 主要特性就是资源隔离</p>
<p>docker run -it ubuntu:18.04 /bin/bash</p>
<p>一般使用 docker 会新增上面的五种做到资源隔离 uts，ips，pid，network，mount</p>
<h3> docker 网络模式</h3>
<p>docker run 创建 Docker 容器时，可以用--net 指定网络模式，有四种</p>
<p>docker run -it ubuntu:18.04 /bin/bash --net=...</p>`,r:{minutes:.59,words:176},y:"a",t:"linux-namespace"},["/tech/docker/linux-namespace","/tech/docker/linux-namespace.md"]],["v-3f2de73e","/tech/docker/linux%E9%9A%A7%E9%81%93.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> linux 隧道</h1>
<h2> tun</h2>
<p>构建在三层网络的三层网络</p>
<h2> vxlan</h2>
<p>构建在三层网络的二层网络</p>
`,r:{minutes:.1,words:29},y:"a",t:"linux 隧道"},["/tech/docker/linux隧道.html","/tech/docker/linux%E9%9A%A7%E9%81%93","/tech/docker/linux隧道.md","/tech/docker/linux%E9%9A%A7%E9%81%93.md"]],["v-5ea1901d","/tech/es/es%E6%90%9C%E7%B4%A2.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> es 查询</h1>
<p>es 的四种查询类型</p>
<p>query_then_fetch</p>
<p>Query_and_fetch</p>
<p>Dfs_query_then_fetch</p>
<p>Dfs_query_and_fetch</p>
<p>dfs 就是统一打分规则，这样排名问题可以解决</p>
<p>and 就是所以分片数据统统返回，有数据量的问题</p>
`,r:{minutes:.18,words:54},y:"a",t:"es 查询"},["/tech/es/es搜索.html","/tech/es/es%E6%90%9C%E7%B4%A2","/tech/es/es搜索.md","/tech/es/es%E6%90%9C%E7%B4%A2.md"]],["v-05242fd8","/tech/nginx/nginx.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> nginx</h1>
<h2> 概念</h2>
`,r:{minutes:.01,words:3},y:"a",t:"nginx"},["/tech/nginx/nginx","/tech/nginx/nginx.md"]],["v-0938a9d3","/tech/protocol/gossip.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> gossip 协议</h1>
<p>"epidemic protocol"可以当作"gossip protocol"的同义词，gossip（流言），传播模型和自然界的病毒传播类似。</p>
<p>最早提出 gossip 术语的是 Alan Demers 的论文；在该论文中，在分布式数据库系统中的信息传播问题被两个主要的手段解决了，被称作反熵（anti-entropy）与谣言传播（rumor mongering）。</p>
<p>我们使用受传染病的启发得到的术语。对于最近一个更新操作来说，一个节点可能会在以下三种状态中：</p>
<ul>
<li>Susceptible(S)（未感染）：这个节点还不知道这个更新操作；</li>
<li>Infected(I)（已感染）：这个节点已经知晓了这个更新操作，并且也在传播它；</li>
<li>Removed(R)（已免疫）：这个节点知晓了这个更新操作，但是不再传播它了。</li>
</ul>`,r:{minutes:2.12,words:637},y:"a",t:"gossip 协议"},["/tech/protocol/gossip","/tech/protocol/gossip.md"]],["v-4b5c10d5","/tech/windows/wsl.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> wsl2</h1>
<h2> 脚本</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token assign-left variable">hostip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /etc/resolv.conf <span class="token operator">|</span> <span class="token function">grep</span> nameserver <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{ print $2 }'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">wslip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">hostname</span> <span class="token parameter variable">-I</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print $1}'</span><span class="token variable">)</span></span>
<span class="token assign-left variable">port</span><span class="token operator">=</span><span class="token number">10808</span>

<span class="token assign-left variable">PROXY_HTTP</span><span class="token operator">=</span><span class="token string">"socks5://<span class="token variable">\${hostip}</span>:<span class="token variable">\${port}</span>"</span>

<span class="token function-name function">set_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span><span class="token string">"<span class="token variable">\${PROXY_HTTP}</span>"</span>
  <span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTP_PROXY</span><span class="token operator">=</span><span class="token string">"<span class="token variable">\${PROXY_HTTP}</span>"</span>

  <span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span><span class="token string">"<span class="token variable">\${PROXY_HTTP}</span>"</span>
  <span class="token builtin class-name">export</span> <span class="token assign-left variable">HTTPS_proxy</span><span class="token operator">=</span><span class="token string">"<span class="token variable">\${PROXY_HTTP}</span>"</span>

  <span class="token builtin class-name">export</span> <span class="token assign-left variable">ALL_PROXY</span><span class="token operator">=</span><span class="token string">"<span class="token variable">\${PROXY_SOCKS5}</span>"</span>
  <span class="token builtin class-name">export</span> <span class="token assign-left variable">all_proxy</span><span class="token operator">=</span><span class="token variable">\${PROXY_SOCKS5}</span>

  <span class="token function">git</span> config <span class="token parameter variable">--global</span> http.https://github.com.proxy <span class="token variable">\${PROXY_HTTP}</span>
  <span class="token function">git</span> config <span class="token parameter variable">--global</span> https.https://github.com.proxy <span class="token variable">\${PROXY_HTTP}</span>

  <span class="token builtin class-name">echo</span> <span class="token string">"Proxy has been opened."</span>
<span class="token punctuation">}</span>

<span class="token function-name function">unset_proxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token builtin class-name">unset</span> http_proxy
  <span class="token builtin class-name">unset</span> HTTP_PROXY
  <span class="token builtin class-name">unset</span> https_proxy
  <span class="token builtin class-name">unset</span> HTTPS_PROXY
  <span class="token builtin class-name">unset</span> ALL_PROXY
  <span class="token builtin class-name">unset</span> all_proxy
  <span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> http.https://github.com.proxy
  <span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> https.https://github.com.proxy

  <span class="token builtin class-name">echo</span> <span class="token string">"Proxy has been closed."</span>
<span class="token punctuation">}</span>

<span class="token function-name function">test_setting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"Host IP:"</span> <span class="token variable">\${hostip}</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"WSL IP:"</span> <span class="token variable">\${wslip}</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"Try to connect to Google..."</span>
  <span class="token assign-left variable">resp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-I</span> <span class="token parameter variable">-s</span> --connect-timeout <span class="token number">5</span> <span class="token parameter variable">-m</span> <span class="token number">5</span> <span class="token parameter variable">-w</span> <span class="token string">"%{http_code}"</span> <span class="token parameter variable">-o</span> /dev/null www.google.com<span class="token variable">)</span></span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${resp}</span> <span class="token operator">=</span> <span class="token number">200</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"Proxy setup succeeded!"</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"Proxy setup failed!"</span>
  <span class="token keyword">fi</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"set"</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  set_proxy

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"unset"</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  unset_proxy

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">"test"</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  test_setting
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">"Unsupported arguments."</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.65,words:195},y:"a",t:"wsl2"},["/tech/windows/wsl","/tech/windows/wsl.md"]],["v-09600dda","/source-code/bilibili-kratos/context/ctx-kv.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> context 传递 kv</h1>
<h2> go sdk context 包</h2>
<p>ctx 的 kv pair</p>
<p>提供了两个方法</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>context<span class="token punctuation">.</span><span class="token function">WithValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
context<span class="token punctuation">.</span><span class="token function">Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.48,words:1344},y:"a",t:"context 传递 kv"},["/source-code/bilibili-kratos/context/ctx-kv","/source-code/bilibili-kratos/context/ctx-kv.md"]],["v-52dc23b1","/source-code/bilibili-kratos/context/ctx-time.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> context timeout</h1>
<h3> client</h3>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// d 为本地配置某个下游的超时时间，c为上游传递的ctx，比较后选小的</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>d Duration<span class="token punctuation">)</span> <span class="token function">Shrink</span><span class="token punctuation">(</span>c context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">(</span>Duration<span class="token punctuation">,</span> context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> context<span class="token punctuation">.</span>CancelFunc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> deadline<span class="token punctuation">,</span> ok <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Deadline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
		<span class="token keyword">if</span> ctimeout <span class="token operator">:=</span> xtime<span class="token punctuation">.</span><span class="token function">Until</span><span class="token punctuation">(</span>deadline<span class="token punctuation">)</span><span class="token punctuation">;</span> ctimeout <span class="token operator">&lt;</span> xtime<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 选小的</span>
			<span class="token keyword">return</span> <span class="token function">Duration</span><span class="token punctuation">(</span>ctimeout<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> xtime<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> d<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> cancel
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.77,words:230},y:"a",t:"context timeout"},["/source-code/bilibili-kratos/context/ctx-time","/source-code/bilibili-kratos/context/ctx-time.md"]],["v-624dff1f","/source-code/bilibili-kratos/grpc/grpc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> GRPC</h1>
<h2> grpc 官方库</h2>
<p>定义了两个 interface：Resolver 和 Builder</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Resolver watches for the updates on the specified target.</span>
<span class="token comment">// Updates include address updates and service config updates.</span>
<span class="token keyword">type</span> Resolver <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token comment">// ResolveNow will be called by gRPC to try to resolve the target name</span>
	<span class="token comment">// again. It's just a hint, resolver can ignore this if it's not necessary.</span>
	<span class="token comment">//</span>
	<span class="token comment">// It could be called multiple times concurrently.</span>
	<span class="token function">ResolveNow</span><span class="token punctuation">(</span>ResolveNowOptions<span class="token punctuation">)</span>
	<span class="token comment">// Close closes the resolver.</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Builder creates a resolver that will be used to watch name resolution updates.</span>
<span class="token keyword">type</span> Builder <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token comment">// Build creates a new resolver for the given target.</span>
	<span class="token comment">//</span>
	<span class="token comment">// gRPC dial calls Build synchronously, and fails if the returned error is</span>
	<span class="token comment">// not nil.</span>
	<span class="token function">Build</span><span class="token punctuation">(</span>target Target<span class="token punctuation">,</span> cc ClientConn<span class="token punctuation">,</span> opts BuildOptions<span class="token punctuation">)</span> <span class="token punctuation">(</span>Resolver<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token comment">// Scheme returns the scheme supported by this resolver.</span>
	<span class="token comment">// Scheme is defined at https://github.com/grpc/grpc/blob/master/doc/naming.md.</span>
	<span class="token function">Scheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.57,words:1072},y:"a",t:"GRPC"},["/source-code/bilibili-kratos/grpc/grpc","/source-code/bilibili-kratos/grpc/grpc.md"]],["v-0b9cd25e","/source-code/bilibili-kratos/grpc/%E6%8B%A6%E6%88%AA%E5%99%A8.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 拦截器</h1>
<h2> 说明</h2>
<p>gRPC 暴露了两个拦截器接口，分别是：</p>
<ul>
<li><code>grpc.UnaryServerInterceptor</code>服务端拦截器</li>
<li><code>grpc.UnaryClientInterceptor</code>客户端拦截器</li>
</ul>
<p>基于两个拦截器可以针对性的定制公共模块的封装代码，比如<code>warden/logging.go</code>是通用日志逻辑。</p>
<h2> 分析</h2>
<h3> 服务端拦截器</h3>
<p>让我们先看一下<code>grpc.UnaryServerInterceptor</code>的声明，<a href="https://github.com/grpc/grpc-go/blob/master/interceptor.go" target="_blank" rel="noopener noreferrer">官方代码位置</a>：</p>`,r:{minutes:7.78,words:2335},y:"a",t:"拦截器"},["/source-code/bilibili-kratos/grpc/拦截器.html","/source-code/bilibili-kratos/grpc/%E6%8B%A6%E6%88%AA%E5%99%A8","/source-code/bilibili-kratos/grpc/拦截器.md","/source-code/bilibili-kratos/grpc/%E6%8B%A6%E6%88%AA%E5%99%A8.md"]],["v-79329100","/source-code/bilibili-kratos/grpc/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> 服务发现</h1>
<h2> 前提</h2>
<p>服务注册与发现最简单的就是<code>direct</code>固定服务端地址的直连方式。也就是服务端正常监听端口启动不进行额外操作，客户端使用如下<code>target</code>：</p>
<div class="language-url line-numbers-mode" data-ext="url"><pre class="language-url"><code><span class="token scheme">direct<span class="token scheme-delimiter">:</span></span><span class="token authority"><span class="token authority-delimiter">//</span><span class="token host">default</span></span><span class="token path"><span class="token path-separator">/</span>127.0.0.1:9000,127.0.0.1:9091</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:6.3,words:1891},y:"a",t:"服务发现"},["/source-code/bilibili-kratos/grpc/服务发现.html","/source-code/bilibili-kratos/grpc/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0","/source-code/bilibili-kratos/grpc/服务发现.md","/source-code/bilibili-kratos/grpc/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0.md"]],["v-e7cde7c6","/source-code/go-standard-lib/channel/chan.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> channel</h1>
<h2> 概念</h2>
<p>golang channel 主要用来做不同 goroutine 通信</p>
<h3> 定义</h3>
<p>注意 maxAlign 是 8，那么 maxAlign-1 的二进制就是 111，然后和 int(unsafe.Sizeof(hchan{}))取与就是取它的低三位，hchanSize 就得到的是 8 的整数倍，做对齐使用</p>
<p>包含 缓冲区数定义，实时统计缓冲区数，缓冲区 buf，chan 元素类型，chan 元素单位大小，接送 goroutine 队列 for 读，发送 goroutine 队列 for 写，以及两个对应的队列的 index，锁（存在并发行为）</p>`,r:{minutes:4.9,words:1469},y:"a",t:"channel"},["/source-code/go-standard-lib/channel/chan","/source-code/go-standard-lib/channel/chan.md"]],["v-36a869d0","/source-code/go-standard-lib/context/ctx.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> context</h1>
<h2> 概念</h2>
<p>子继承父 context，并且传递信号从父<code>单项传播</code>子，位于 src/context 目录下</p>
<h3> 定义</h3>
<p>4 个主要方法</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// A Context carries a deadline, a cancellation signal, and other values across</span>
<span class="token comment">// API boundaries.</span>
<span class="token comment">//</span>
<span class="token comment">// Context's methods may be called by multiple goroutines simultaneously.</span>
<span class="token keyword">type</span> Context <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token comment">// Deadline returns the time when work done on behalf of this context</span>
	<span class="token comment">// should be canceled. Deadline returns ok==false when no deadline is</span>
	<span class="token comment">// set. Successive calls to Deadline return the same results.</span>
	<span class="token function">Deadline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>deadline time<span class="token punctuation">.</span>Time<span class="token punctuation">,</span> ok <span class="token builtin">bool</span><span class="token punctuation">)</span>

	<span class="token comment">// Done returns a channel that's closed when work done on behalf of this</span>
	<span class="token comment">// context should be canceled. Done may return nil if this context can</span>
	<span class="token comment">// never be canceled. Successive calls to Done return the same value.</span>
	<span class="token comment">// The close of the Done channel may happen asynchronously,</span>
	<span class="token comment">// after the cancel function returns.</span>
	<span class="token comment">//</span>
	<span class="token comment">// WithCancel arranges for Done to be closed when cancel is called;</span>
	<span class="token comment">// WithDeadline arranges for Done to be closed when the deadline</span>
	<span class="token comment">// expires; WithTimeout arranges for Done to be closed when the timeout</span>
	<span class="token comment">// elapses.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Done is provided for use in select statements:</span>
	<span class="token comment">//</span>
	<span class="token comment">//  // Stream generates values with DoSomething and sends them to out</span>
	<span class="token comment">//  // until DoSomething returns an error or ctx.Done is closed.</span>
	<span class="token comment">//  func Stream(ctx context.Context, out chan&lt;- Value) error {</span>
	<span class="token comment">//  	for {</span>
	<span class="token comment">//  		v, err := DoSomething(ctx)</span>
	<span class="token comment">//  		if err != nil {</span>
	<span class="token comment">//  			return err</span>
	<span class="token comment">//  		}</span>
	<span class="token comment">//  		select {</span>
	<span class="token comment">//  		case &lt;-ctx.Done():</span>
	<span class="token comment">//  			return ctx.Err()</span>
	<span class="token comment">//  		case out &lt;- v:</span>
	<span class="token comment">//  		}</span>
	<span class="token comment">//  	}</span>
	<span class="token comment">//  }</span>
	<span class="token comment">//</span>
	<span class="token comment">// See https://blog.golang.org/pipelines for more examples of how to use</span>
	<span class="token comment">// a Done channel for cancellation.</span>
	<span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

	<span class="token comment">// If Done is not yet closed, Err returns nil.</span>
	<span class="token comment">// If Done is closed, Err returns a non-nil error explaining why:</span>
	<span class="token comment">// Canceled if the context was canceled</span>
	<span class="token comment">// or DeadlineExceeded if the context's deadline passed.</span>
	<span class="token comment">// After Err returns a non-nil error, successive calls to Err return the same error.</span>
	<span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>

	<span class="token comment">// Value returns the value associated with this context for key, or nil</span>
	<span class="token comment">// if no value is associated with key. Successive calls to Value with</span>
	<span class="token comment">// the same key returns the same result.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Use context values only for request-scoped data that transits</span>
	<span class="token comment">// processes and API boundaries, not for passing optional parameters to</span>
	<span class="token comment">// functions.</span>
	<span class="token comment">//</span>
	<span class="token comment">// A key identifies a specific value in a Context. Functions that wish</span>
	<span class="token comment">// to store values in Context typically allocate a key in a global</span>
	<span class="token comment">// variable then use that key as the argument to context.WithValue and</span>
	<span class="token comment">// Context.Value. A key can be any type that supports equality;</span>
	<span class="token comment">// packages should define keys as an unexported type to avoid</span>
	<span class="token comment">// collisions.</span>
	<span class="token comment">//</span>
	<span class="token comment">// Packages that define a Context key should provide type-safe accessors</span>
	<span class="token comment">// for the values stored using that key:</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// Package user defines a User type that's stored in Contexts.</span>
	<span class="token comment">// 	package user</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	import "context"</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// User is the type of value stored in the Contexts.</span>
	<span class="token comment">// 	type User struct {...}</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// key is an unexported type for keys defined in this package.</span>
	<span class="token comment">// 	// This prevents collisions with keys defined in other packages.</span>
	<span class="token comment">// 	type key int</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// userKey is the key for user.User values in Contexts. It is</span>
	<span class="token comment">// 	// unexported; clients use user.NewContext and user.FromContext</span>
	<span class="token comment">// 	// instead of using this key directly.</span>
	<span class="token comment">// 	var userKey key</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// NewContext returns a new Context that carries value u.</span>
	<span class="token comment">// 	func NewContext(ctx context.Context, u *User) context.Context {</span>
	<span class="token comment">// 		return context.WithValue(ctx, userKey, u)</span>
	<span class="token comment">// 	}</span>
	<span class="token comment">//</span>
	<span class="token comment">// 	// FromContext returns the User value stored in ctx, if any.</span>
	<span class="token comment">// 	func FromContext(ctx context.Context) (*User, bool) {</span>
	<span class="token comment">// 		u, ok := ctx.Value(userKey).(*User)</span>
	<span class="token comment">// 		return u, ok</span>
	<span class="token comment">// 	}</span>
	<span class="token function">Value</span><span class="token punctuation">(</span>key any<span class="token punctuation">)</span> any
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.46,words:1939},y:"a",t:"context"},["/source-code/go-standard-lib/context/ctx","/source-code/go-standard-lib/context/ctx.md"]],["v-a22d01e4","/source-code/go-standard-lib/io/buffer.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> buffer</h1>
`,r:{minutes:0,words:1},y:"a",t:"buffer"},["/source-code/go-standard-lib/io/buffer","/source-code/go-standard-lib/io/buffer.md"]],["v-0c9a988b","/source-code/go-standard-lib/io/bufio.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> bufio</h1>
<p>Package bufio implements buffered I/O. It wraps an io.Reader or io.Writer object, creating another object (Reader or Writer) that also implements the interface but provides buffering and some help for textual I/O.</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Buffered input.</span>

<span class="token comment">// Reader implements buffering for an io.Reader object.</span>
<span class="token keyword">type</span> Reader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
   buf          <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
   rd           io<span class="token punctuation">.</span>Reader <span class="token comment">// reader provided by the client</span>
   r<span class="token punctuation">,</span> w         <span class="token builtin">int</span>       <span class="token comment">// buf read and write positions</span>
   err          <span class="token builtin">error</span>
   lastByte     <span class="token builtin">int</span> <span class="token comment">// last byte read for UnreadByte; -1 means invalid</span>
   lastRuneSize <span class="token builtin">int</span> <span class="token comment">// size of last rune read for UnreadRune; -1 means invalid</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.42,words:426},y:"a",t:"bufio"},["/source-code/go-standard-lib/io/bufio","/source-code/go-standard-lib/io/bufio.md"]],["v-65042868","/source-code/go-standard-lib/io/io.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> IO</h1>
<p>主要四个核心 interface</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Reader <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Read</span><span class="token punctuation">(</span>p <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Writer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Write</span><span class="token punctuation">(</span>p <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Closer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Seeker <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Seek</span><span class="token punctuation">(</span>offset <span class="token builtin">int64</span><span class="token punctuation">,</span> whence <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int64</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.04,words:312},y:"a",t:"IO"},["/source-code/go-standard-lib/io/io","/source-code/go-standard-lib/io/io.md"]],["v-2f208a26","/source-code/go-standard-lib/io/ioutil.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> io 便捷操作函数集</h1>
<h2> NopCloser</h2>
<p>有时候我们需要传递一个 io.ReadCloser 的实例，而我们现在有一个 io.Reader 的实例，比如：strings.Reader ，这个时候 NopCloser 就派上用场了。它包装一个 io.Reader，返回一个 io.ReadCloser ，而相应的 Close 方法啥也不做，只是返回 nil。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    rc<span class="token punctuation">,</span> ok <span class="token operator">:=</span> body<span class="token punctuation">.</span><span class="token punctuation">(</span>io<span class="token punctuation">.</span>ReadCloser<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token operator">&amp;&amp;</span> body <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        rc <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">NopCloser</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:180},y:"a",t:"io 便捷操作函数集"},["/source-code/go-standard-lib/io/ioutil","/source-code/go-standard-lib/io/ioutil.md"]],["v-0edd84b2","/source-code/go-standard-lib/sync/pool.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> pool 池</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// A Pool must not be copied after first use.</span>
<span class="token keyword">type</span> Pool <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	noCopy noCopy

	local     unsafe<span class="token punctuation">.</span>Pointer <span class="token comment">// local fixed-size per-P pool, actual type is [P]poolLocal 每个P一个，pid为索引</span>
	localSize <span class="token builtin">uintptr</span>        <span class="token comment">// size of the local array</span>

	victim     unsafe<span class="token punctuation">.</span>Pointer <span class="token comment">// local from previous cycle</span>
	victimSize <span class="token builtin">uintptr</span>        <span class="token comment">// size of victims array</span>

	<span class="token comment">// New optionally specifies a function to generate</span>
	<span class="token comment">// a value when Get would otherwise return nil.</span>
	<span class="token comment">// It may not be changed concurrently with calls to Get.</span>
	New <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> any
<span class="token punctuation">}</span>
<span class="token keyword">type</span> poolLocal <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	poolLocalInternal
	<span class="token comment">// Prevents false sharing on widespread platforms with</span>
	<span class="token comment">// 128 mod (cache line size) = 0 .</span>
	pad <span class="token punctuation">[</span><span class="token number">128</span> <span class="token operator">-</span> unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>poolLocalInternal<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
<span class="token punctuation">}</span>
<span class="token comment">// Local per-P Pool appendix.</span>
<span class="token keyword">type</span> poolLocalInternal <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	private any       <span class="token comment">// Can be used only by the respective P.只能当前 P 获取</span>
	shared  poolChain <span class="token comment">// Local P can pushHead/popHead; any P can popTail.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.14,words:343},y:"a",t:"pool 池"},["/source-code/go-standard-lib/sync/pool","/source-code/go-standard-lib/sync/pool.md"]],["v-37e97163","/tech/bilibili/kv/B%E7%AB%99%E6%90%9C%E6%8E%A8kv%E5%88%86%E4%BA%AB.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> b 站 kv 搜索分享</h1>
<h3> 场景</h3>
<p>Data intensity ：亿级稿件选 top-N</p>
<p>latency sensitive：500ms</p>
<p>OLAP：列式存储，搜推场景</p>
<p>OLTP：行式存储，主站场景</p>
<h3> kv 分类</h3>
<p>embedded in memory kv: 语言提供的 map 存储</p>
<p>in memory kv srever: memcached, redis</p>
<p>embedded kv database: leveldb, rocksdb(基于 lsmtree)</p>`,r:{minutes:1.7,words:511},y:"a",t:"b 站 kv 搜索分享"},["/tech/bilibili/kv/B站搜推kv分享.html","/tech/bilibili/kv/B%E7%AB%99%E6%90%9C%E6%8E%A8kv%E5%88%86%E4%BA%AB","/tech/bilibili/kv/B站搜推kv分享.md","/tech/bilibili/kv/B%E7%AB%99%E6%90%9C%E6%8E%A8kv%E5%88%86%E4%BA%AB.md"]],["v-c225c592","/tech/bilibili/kv/lsm-tree.html",{d:"2023-03-11T16:47:37.000Z",e:`<h1> log-structured merge-tree</h1>
<p>lsm-tree 中核心数据结构就是 sstable（sorted string table）</p>
<blockquote>
<p>An SSTable provides a persistent, ordered immutable map from keys to values, where both keys and values are arbitrary byte strings. Operations are provided to look up the value associated with a specified key, and to iterate over all key/value pairs in a specified key range. Internally, each SSTable contains a sequence of blocks (typically each block is 64KB in size, but this is configurable). A block index (stored at the end of the SSTable) is used to locate blocks; the index is loaded into memory when the SSTable is opened. A lookup can be performed with a single disk seek: we first find the appropriate block by performing a binary search in the in-memory index, and then reading the appropriate block from disk. Optionally, an SSTable can be completely mapped into memory, which allows us to perform lookups and scans without touching disk.</p>
</blockquote>`,r:{minutes:.62,words:187},y:"a",t:"log-structured merge-tree"},["/tech/bilibili/kv/lsm-tree","/tech/bilibili/kv/lsm-tree.md"]],["v-12c615d4","/source-code/bilibili-kratos/library/cache/redis.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> redis</h1>
<p>go-common redis 使用 go-redis/v8,go-redis/v8 支持 pipeline（计算 slot，并行请求多个 node，再合并结果），但是不支持 mget 这种原生多 key（redis-cluster 模式本身不支持），go-common redis 做了特殊处理，本质就是判断出是 mget，mset，exist，del（只做了这四个的适配）让后使用 go-redis/v8 的 pipeline</p>
`,r:{minutes:.3,words:89},y:"a",t:"redis"},["/source-code/bilibili-kratos/library/cache/redis","/source-code/bilibili-kratos/library/cache/redis.md"]],["v-310bef1e","/source-code/bilibili-kratos/library/container/group.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> group</h1>
<p>缓存方法执行的结果</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Group is a lazy load container.</span>
<span class="token keyword">type</span> Group <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token builtin">new</span>  <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	objs sync<span class="token punctuation">.</span>Map
	sync<span class="token punctuation">.</span>RWMutex
<span class="token punctuation">}</span>
<span class="token comment">// NewGroup news a group container.</span>
<span class="token keyword">func</span> <span class="token function">NewGroup</span><span class="token punctuation">(</span><span class="token builtin">new</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">*</span>Group <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token builtin">new</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"container.group: can't assign a nil to the new function"</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>Group<span class="token punctuation">{</span>
		<span class="token builtin">new</span><span class="token punctuation">:</span> <span class="token builtin">new</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Get gets the object by the given key.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>g <span class="token operator">*</span>Group<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// Reset resets the new function and deletes all existing objects.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>g <span class="token operator">*</span>Group<span class="token punctuation">)</span> <span class="token function">Reset</span><span class="token punctuation">(</span><span class="token builtin">new</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// Clear deletes all objects.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>g <span class="token operator">*</span>Group<span class="token punctuation">)</span> <span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.32,words:95},y:"a",t:"group"},["/source-code/bilibili-kratos/library/container/group","/source-code/bilibili-kratos/library/container/group.md"]],["v-2ea49593","/source-code/bilibili-kratos/library/cache/memcache/ascii_conn.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> ascii_conn</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// asiiConn is the low-level implementation of Conn</span>
<span class="token comment">// 实现了conn.go的protocolConn interface</span>
<span class="token keyword">type</span> asiiConn <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	err  <span class="token builtin">error</span>
	conn net<span class="token punctuation">.</span>Conn
	<span class="token comment">// Read &amp; Write</span>
	readTimeout  time<span class="token punctuation">.</span>Duration
	writeTimeout time<span class="token punctuation">.</span>Duration
	rw           <span class="token operator">*</span>bufio<span class="token punctuation">.</span>ReadWriter
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">newASCIIConn</span><span class="token punctuation">(</span>netConn net<span class="token punctuation">.</span>Conn<span class="token punctuation">,</span> readTimeout<span class="token punctuation">,</span> writeTimeout time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token punctuation">(</span>protocolConn<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> writeTimeout <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> readTimeout <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> pkgerr<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">"readTimeout writeTimeout can't be zero"</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	c <span class="token operator">:=</span> <span class="token operator">&amp;</span>asiiConn<span class="token punctuation">{</span>
		conn<span class="token punctuation">:</span> netConn<span class="token punctuation">,</span>
		rw<span class="token punctuation">:</span> bufio<span class="token punctuation">.</span><span class="token function">NewReadWriter</span><span class="token punctuation">(</span>bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>netConn<span class="token punctuation">)</span><span class="token punctuation">,</span>
			bufio<span class="token punctuation">.</span><span class="token function">NewWriter</span><span class="token punctuation">(</span>netConn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		readTimeout<span class="token punctuation">:</span>  readTimeout<span class="token punctuation">,</span>
		writeTimeout<span class="token punctuation">:</span> writeTimeout<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> c<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.25,words:74},y:"a",t:"ascii_conn"},["/source-code/bilibili-kratos/library/cache/memcache/ascii_conn","/source-code/bilibili-kratos/library/cache/memcache/ascii_conn.md"]],["v-389e8c01","/source-code/bilibili-kratos/library/cache/memcache/conn.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> conn</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> conn <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// low level connection.</span>
	pconn protocolConn <span class="token comment">// 需要</span>
	ed    <span class="token operator">*</span>encodeDecode
<span class="token punctuation">}</span>
<span class="token comment">// Dial connects to the Memcache server at the given network and</span>
<span class="token comment">// address using the specified options.</span>
<span class="token keyword">func</span> <span class="token function">Dial</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> address <span class="token builtin">string</span><span class="token punctuation">,</span> options <span class="token operator">...</span>DialOption<span class="token punctuation">)</span> <span class="token punctuation">(</span>Conn<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	do <span class="token operator">:=</span> dialOptions<span class="token punctuation">{</span>
		dial<span class="token punctuation">:</span> net<span class="token punctuation">.</span>Dial<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> option <span class="token operator">:=</span> <span class="token keyword">range</span> options <span class="token punctuation">{</span>
		option<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>do<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	netConn<span class="token punctuation">,</span> err <span class="token operator">:=</span> do<span class="token punctuation">.</span><span class="token function">dial</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> address<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> pkgerr<span class="token punctuation">.</span><span class="token function">WithStack</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// 调用ascii_conn.go 中的newASCIIConn返回protocolConn 接口的实现</span>
	pconn<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">newASCIIConn</span><span class="token punctuation">(</span>netConn<span class="token punctuation">,</span> do<span class="token punctuation">.</span>readTimeout<span class="token punctuation">,</span> do<span class="token punctuation">.</span>writeTimeout<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">{</span>pconn<span class="token punctuation">:</span> pconn<span class="token punctuation">,</span> ed<span class="token punctuation">:</span> <span class="token function">newEncodeDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token comment">// low level connection that implement memcache protocol provide basic operation.</span>
<span class="token keyword">type</span> protocolConn <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Populate</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> cmd <span class="token builtin">string</span><span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> flags <span class="token builtin">uint32</span><span class="token punctuation">,</span> expiration <span class="token builtin">int32</span><span class="token punctuation">,</span> cas <span class="token builtin">uint64</span><span class="token punctuation">,</span> data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Get</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">GetMulti</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> keys <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">Touch</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> expire <span class="token builtin">int32</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">IncrDecr</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> delta <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">uint64</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">Delete</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.54,words:163},y:"a",t:"conn"},["/source-code/bilibili-kratos/library/cache/memcache/conn","/source-code/bilibili-kratos/library/cache/memcache/conn.md"]],["v-5a8b44d7","/source-code/bilibili-kratos/library/cache/memcache/mc.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> mc</h1>
<p>Memcache 主体结构，其中有 Pool 结构，相当于包了一层，主张使用主体结构。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Memcache <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	pool <span class="token operator">*</span>Pool
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2,words:600},y:"a",t:"mc"},["/source-code/bilibili-kratos/library/cache/memcache/mc","/source-code/bilibili-kratos/library/cache/memcache/mc.md"]],["v-5539e700","/source-code/bilibili-kratos/library/cache/memcache/memcache.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Memcache</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Memcache主体结构</span>
<span class="token keyword">type</span> Memcache <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	pool <span class="token operator">*</span>Pool <span class="token comment">// pool_conn.go 中的Pool</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">New</span><span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>Memcache <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>Memcache<span class="token punctuation">{</span>pool<span class="token punctuation">:</span> <span class="token function">NewPool</span><span class="token punctuation">(</span>cfg<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment">// pool_conn.go 中的NewPool方法</span>
<span class="token punctuation">}</span>


<span class="token keyword">type</span> Conn <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Add</span><span class="token punctuation">(</span>item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Set</span><span class="token punctuation">(</span>item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Replace</span><span class="token punctuation">(</span>item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">GetMulti</span><span class="token punctuation">(</span>keys <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">Delete</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Increment</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> delta <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>newValue <span class="token builtin">uint64</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">Decrement</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> delta <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>newValue <span class="token builtin">uint64</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">CompareAndSwap</span><span class="token punctuation">(</span>item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">Touch</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">,</span> seconds <span class="token builtin">int32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">Scan</span><span class="token punctuation">(</span>item <span class="token operator">*</span>Item<span class="token punctuation">,</span> v <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">AddContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">SetContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">ReplaceContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">GetContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">GetMultiContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> keys <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">*</span>Item<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">DeleteContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">IncrementContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> delta <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>newValue <span class="token builtin">uint64</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">DecrementContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> delta <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>newValue <span class="token builtin">uint64</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>
	<span class="token function">CompareAndSwapContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> item <span class="token operator">*</span>Item<span class="token punctuation">)</span> <span class="token builtin">error</span>
	<span class="token function">TouchContext</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> key <span class="token builtin">string</span><span class="token punctuation">,</span> seconds <span class="token builtin">int32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:180},y:"a",t:"Memcache"},["/source-code/bilibili-kratos/library/cache/memcache/memcache","/source-code/bilibili-kratos/library/cache/memcache/memcache.md"]],["v-6e55db14","/source-code/bilibili-kratos/library/cache/memcache/pool_conn.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> pool_conn</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Pool memcache connection pool struct.</span>
<span class="token keyword">type</span> Pool <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	p pool<span class="token punctuation">.</span>Pool <span class="token comment">// 连接池的interface</span>
	c <span class="token operator">*</span>Config
<span class="token punctuation">}</span>

<span class="token comment">// poolConn实现了memcache.go 的 Conn</span>
<span class="token keyword">type</span> poolConn <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	c   Conn
	p   <span class="token operator">*</span>Pool
	ctx context<span class="token punctuation">.</span>Context
<span class="token punctuation">}</span>

<span class="token comment">// Pool提供get方法返回poolConn也就是Conn interface的实现，返回了一个链接</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pool<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> Conn <span class="token punctuation">{</span>
	c<span class="token punctuation">,</span> err <span class="token operator">:=</span> p<span class="token punctuation">.</span>p<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
	p<span class="token punctuation">.</span><span class="token function">connStat</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> errConn<span class="token punctuation">{</span>err<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	c1<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token punctuation">(</span>Conn<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>poolConn<span class="token punctuation">{</span>p<span class="token punctuation">:</span> p<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c1<span class="token punctuation">,</span> ctx<span class="token punctuation">:</span> ctx<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 连接池的实现pool.NewList，其中 conn.go中的Dial也就是连接池的New</span>
<span class="token keyword">func</span> <span class="token function">NewPool</span><span class="token punctuation">(</span>cfg <span class="token operator">*</span>Config<span class="token punctuation">)</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pool<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> cfg<span class="token punctuation">.</span>DialTimeout <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> cfg<span class="token punctuation">.</span>ReadTimeout <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> cfg<span class="token punctuation">.</span>WriteTimeout <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"must config memcache timeout"</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	p1 <span class="token operator">:=</span> pool<span class="token punctuation">.</span><span class="token function">NewList</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>Config<span class="token punctuation">)</span>
	cnop <span class="token operator">:=</span> <span class="token function">DialConnectTimeout</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>DialTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
	rdop <span class="token operator">:=</span> <span class="token function">DialReadTimeout</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>ReadTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
	wrop <span class="token operator">:=</span> <span class="token function">DialWriteTimeout</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>WriteTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
	p1<span class="token punctuation">.</span>New <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">(</span>io<span class="token punctuation">.</span>Closer<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">Dial</span><span class="token punctuation">(</span>cfg<span class="token punctuation">.</span>Proto<span class="token punctuation">,</span> cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">,</span> cnop<span class="token punctuation">,</span> rdop<span class="token punctuation">,</span> wrop<span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token function">newTraceConn</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%s://%s"</span><span class="token punctuation">,</span> cfg<span class="token punctuation">.</span>Proto<span class="token punctuation">,</span> cfg<span class="token punctuation">.</span>Addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
	p <span class="token operator">=</span> <span class="token operator">&amp;</span>Pool<span class="token punctuation">{</span>p<span class="token punctuation">:</span> p1<span class="token punctuation">,</span> c<span class="token punctuation">:</span> cfg<span class="token punctuation">}</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.59,words:176},y:"a",t:"pool_conn"},["/source-code/bilibili-kratos/library/cache/memcache/pool_conn","/source-code/bilibili-kratos/library/cache/memcache/pool_conn.md"]],["v-ee0734ea","/source-code/bilibili-kratos/library/net/http/blademaster.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> bm 框架</h1>
<p>b 站自研 http 框架</p>
`,r:{minutes:.03,words:10},y:"a",t:"bm 框架"},["/source-code/bilibili-kratos/library/net/http/blademaster","/source-code/bilibili-kratos/library/net/http/blademaster.md"]],["v-1b2fb878","/source-code/bilibili-kratos/library/net/netutil/breaker.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> Breaker</h1>
<p>Breaker 实现</p>
`,r:{minutes:.01,words:4},y:"a",t:"Breaker"},["/source-code/bilibili-kratos/library/net/netutil/breaker","/source-code/bilibili-kratos/library/net/netutil/breaker.md"]],["v-105ea741","/source-code/bilibili-kratos/library/rate/limit/bbr.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> bbr</h1>
`,r:{minutes:0,words:1},y:"a",t:"bbr"},["/source-code/bilibili-kratos/library/rate/limit/bbr","/source-code/bilibili-kratos/library/rate/limit/bbr.md"]],["v-39f8f26a","/source-code/bilibili-kratos/library/rate/limit/token%20bucket.html",{d:"2023-03-11T14:36:50.000Z",e:`<h1> token bucket</h1>
<p>本质就是把做了 map，底层使用的还是 x/time/rate pkg</p>
`,r:{minutes:.07,words:21},y:"a",t:"token bucket"},["/source-code/bilibili-kratos/library/rate/limit/token bucket.html","/source-code/bilibili-kratos/library/rate/limit/token%20bucket","/source-code/bilibili-kratos/library/rate/limit/token bucket.md","/source-code/bilibili-kratos/library/rate/limit/token%20bucket.md"]],["v-3706649a","/404.html",{y:"p",t:""},["/404"]],["v-b26deb9c","/algorithms/",{y:"p",t:"Algorithms"},["/algorithms/index.html"]],["v-7445c744","/ddd/",{y:"p",t:"Ddd"},["/ddd/index.html"]],["v-8845e9f4","/data-structure/",{y:"p",t:"Data Structure"},["/data-structure/index.html"]],["v-144e95b7","/apue/",{y:"p",t:"Apue"},["/apue/index.html"]],["v-f0383c18","/linux/",{y:"p",t:"Linux"},["/linux/index.html"]],["v-2d0a8eae","/go/",{y:"p",t:"Go"},["/go/index.html"]],["v-690bbc96","/opreating-system/",{y:"p",t:"Opreating System"},["/opreating-system/index.html"]],["v-e4cb1150","/other/",{y:"p",t:"Other"},["/other/index.html"]],["v-6c02dd81","/systems-performance/",{y:"p",t:"Systems Performance"},["/systems-performance/index.html"]],["v-e6bd028c","/technical-term/",{y:"p",t:"Technical Term"},["/technical-term/index.html"]],["v-1559a150","/todo/",{y:"p",t:"Todo"},["/todo/index.html"]],["v-7f7dc1d3","/linux/malloc/",{y:"p",t:"Malloc"},["/linux/malloc/index.html"]],["v-4eacdcee","/linux/mem/",{y:"p",t:"Mem"},["/linux/mem/index.html"]],["v-62c15b5b","/linux/tcpip/",{y:"p",t:"Tcpip"},["/linux/tcpip/index.html"]],["v-28e445b4","/linux/ubuntu/",{y:"p",t:"Ubuntu"},["/linux/ubuntu/index.html"]],["v-72d55cc2","/go/asm/",{y:"p",t:"Asm"},["/go/asm/index.html"]],["v-68f2e697","/go/profiles/",{y:"p",t:"Profiles"},["/go/profiles/index.html"]],["v-1726efb4","/other/interview/",{y:"p",t:"Interview"},["/other/interview/index.html"]],["v-3415a5d6","/source-code/bilibili-kratos/",{y:"p",t:"Bilibili Kratos"},["/source-code/bilibili-kratos/index.html"]],["v-7c55c65e","/source-code/go-standard-lib/",{y:"p",t:"Go Standard Lib"},["/source-code/go-standard-lib/index.html"]],["v-66c372a8","/systems-performance/xdp/",{y:"p",t:"Xdp"},["/systems-performance/xdp/index.html"]],["v-183a65fd","/tech/artificial-intelligence/",{y:"p",t:"Artificial Intelligence"},["/tech/artificial-intelligence/index.html"]],["v-15551100","/tech/",{y:"p",t:"Tech"},["/tech/index.html"]],["v-62402a27","/tech/bilibili/",{y:"p",t:"Bilibili"},["/tech/bilibili/index.html"]],["v-3571a5d8","/tech/database/",{y:"p",t:"Database"},["/tech/database/index.html"]],["v-dbf7b5e2","/tech/docker/",{y:"p",t:"Docker"},["/tech/docker/index.html"]],["v-7646d841","/tech/es/",{y:"p",t:"Es"},["/tech/es/index.html"]],["v-0d1640d5","/tech/nginx/",{y:"p",t:"Nginx"},["/tech/nginx/index.html"]],["v-51d558d2","/tech/protocol/",{y:"p",t:"Protocol"},["/tech/protocol/index.html"]],["v-3938bf0c","/tech/windows/",{y:"p",t:"Windows"},["/tech/windows/index.html"]],["v-3044c875","/source-code/bilibili-kratos/context/",{y:"p",t:"Context"},["/source-code/bilibili-kratos/context/index.html"]],["v-7ef5afdc","/source-code/bilibili-kratos/grpc/",{y:"p",t:"Grpc"},["/source-code/bilibili-kratos/grpc/index.html"]],["v-0bb4abea","/source-code/go-standard-lib/channel/",{y:"p",t:"Channel"},["/source-code/go-standard-lib/channel/index.html"]],["v-d6ffee84","/source-code/go-standard-lib/context/",{y:"p",t:"Context"},["/source-code/go-standard-lib/context/index.html"]],["v-01b8ccab","/source-code/go-standard-lib/io/",{y:"p",t:"Io"},["/source-code/go-standard-lib/io/index.html"]],["v-774abd56","/source-code/go-standard-lib/sync/",{y:"p",t:"Sync"},["/source-code/go-standard-lib/sync/index.html"]],["v-ee2a1ec6","/tech/bilibili/kv/",{y:"p",t:"Kv"},["/tech/bilibili/kv/index.html"]],["v-377f6916","/source-code/bilibili-kratos/library/cache/",{y:"p",t:"Cache"},["/source-code/bilibili-kratos/library/cache/index.html"]],["v-f59c8a2e","/source-code/bilibili-kratos/library/",{y:"p",t:"Library"},["/source-code/bilibili-kratos/library/index.html"]],["v-32a02f77","/source-code/bilibili-kratos/library/container/",{y:"p",t:"Container"},["/source-code/bilibili-kratos/library/container/index.html"]],["v-368ce2ac","/source-code/bilibili-kratos/library/cache/memcache/",{y:"p",t:"Memcache"},["/source-code/bilibili-kratos/library/cache/memcache/index.html"]],["v-74ac88ec","/source-code/bilibili-kratos/library/net/http/",{y:"p",t:"Http"},["/source-code/bilibili-kratos/library/net/http/index.html"]],["v-6268aeca","/source-code/bilibili-kratos/library/net/",{y:"p",t:"Net"},["/source-code/bilibili-kratos/library/net/index.html"]],["v-5f7a82ea","/source-code/bilibili-kratos/library/net/netutil/",{y:"p",t:"Netutil"},["/source-code/bilibili-kratos/library/net/netutil/index.html"]],["v-dbd5e54c","/source-code/bilibili-kratos/library/rate/limit/",{y:"p",t:"Limit"},["/source-code/bilibili-kratos/library/rate/limit/index.html"]],["v-0adffe06","/source-code/bilibili-kratos/library/rate/",{y:"p",t:"Rate"},["/source-code/bilibili-kratos/library/rate/index.html"]],["v-5bc93818","/category/",{y:"p",t:"分类",I:0},["/category/index.html"]],["v-744d024e","/tag/",{y:"p",t:"标签",I:0},["/tag/index.html"]],["v-e52c881c","/article/",{y:"p",t:"文章",I:0},["/article/index.html"]],["v-154dc4c4","/star/",{y:"p",t:"收藏",I:0},["/star/index.html"]],["v-01560935","/timeline/",{y:"p",t:"时间轴",I:0},["/timeline/index.html"]],["v-5bc77b38","/category/%E6%BA%90%E7%A0%81/",{y:"p",t:"源码 分类",I:0},["/category/源码/","/category/%E6%BA%90%E7%A0%81/index.html"]],["v-287f3643","/tag/grpc/",{y:"p",t:"grpc 标签",I:0},["/tag/grpc/index.html"]]];var Vuepress=defineComponent({name:"Vuepress",setup(){const d=usePageLayout();return()=>h$1(d.value)}}),createRoutes=()=>pagesRoutes.reduce((d,[R,N,z,j])=>(d.push({name:R,path:N,component:Vuepress,meta:z},...j.map(Z=>({path:Z,redirect:N}))),d),[{name:"404",path:"/:catchAll(.*)",component:Vuepress}]),historyCreator=createWebHistory,createVueRouter=()=>{const d=createRouter({history:historyCreator(removeEndingSlash("/")),routes:createRoutes(),scrollBehavior:(R,N,z)=>z||(R.hash?{el:R.hash}:{top:0})});return d.beforeResolve(async(R,N)=>{var z;(R.path!==N.path||N===START_LOCATION_NORMALIZED)&&([pageData.value]=await Promise.all([resolvers.resolvePageData(R.name),(z=pagesComponents[R.name])==null?void 0:z.__asyncLoader()]))}),d},setupGlobalComponents=d=>{d.component("ClientOnly",ClientOnly),d.component("Content",Content)},setupGlobalComputed=(d,R,N)=>{const z=ref(R.currentRoute.value.path);watch(()=>R.currentRoute.value.path,an=>z.value=an);const j=computed(()=>resolvers.resolveLayouts(N)),Z=computed(()=>resolvers.resolveRouteLocale(siteData.value.locales,z.value)),X=computed(()=>resolvers.resolveSiteLocaleData(siteData.value,Z.value)),Q=computed(()=>resolvers.resolvePageFrontmatter(pageData.value)),nn=computed(()=>resolvers.resolvePageHeadTitle(pageData.value,X.value)),sn=computed(()=>resolvers.resolvePageHead(nn.value,Q.value,X.value)),en=computed(()=>resolvers.resolvePageLang(pageData.value)),tn=computed(()=>resolvers.resolvePageLayout(pageData.value,j.value));return d.provide(layoutsSymbol,j),d.provide(pageFrontmatterSymbol,Q),d.provide(pageHeadTitleSymbol,nn),d.provide(pageHeadSymbol,sn),d.provide(pageLangSymbol,en),d.provide(pageLayoutSymbol,tn),d.provide(routeLocaleSymbol,Z),d.provide(siteLocaleDataSymbol,X),Object.defineProperties(d.config.globalProperties,{$frontmatter:{get:()=>Q.value},$head:{get:()=>sn.value},$headTitle:{get:()=>nn.value},$lang:{get:()=>en.value},$page:{get:()=>pageData.value},$routeLocale:{get:()=>Z.value},$site:{get:()=>siteData.value},$siteLocale:{get:()=>X.value},$withBase:{get:()=>withBase}}),{layouts:j,pageData,pageFrontmatter:Q,pageHead:sn,pageHeadTitle:nn,pageLang:en,pageLayout:tn,routeLocale:Z,siteData,siteLocaleData:X}},setupUpdateHead=()=>{const d=usePageHead(),R=usePageLang(),N=ref([]),z=()=>{d.value.forEach(Z=>{const X=queryHeadTag(Z);X&&N.value.push(X)})},j=()=>{document.documentElement.lang=R.value,N.value.forEach(Z=>{Z.parentNode===document.head&&document.head.removeChild(Z)}),N.value.splice(0,N.value.length),d.value.forEach(Z=>{const X=createHeadTag(Z);X!==null&&(document.head.appendChild(X),N.value.push(X))})};provide(updateHeadSymbol,j),onMounted(()=>{z(),j(),watch(()=>d.value,()=>j())})},queryHeadTag=([d,R,N=""])=>{const z=Object.entries(R).map(([Q,nn])=>isString$1(nn)?`[${Q}=${JSON.stringify(nn)}]`:nn===!0?`[${Q}]`:"").join(""),j=`head > ${d}${z}`;return Array.from(document.querySelectorAll(j)).find(Q=>Q.innerText===N)||null},createHeadTag=([d,R,N])=>{if(!isString$1(d))return null;const z=document.createElement(d);return isPlainObject(R)&&Object.entries(R).forEach(([j,Z])=>{isString$1(Z)?z.setAttribute(j,Z):Z===!0&&z.setAttribute(j,"")}),isString$1(N)&&z.appendChild(document.createTextNode(N)),z},appCreator=createSSRApp,createVueApp=async()=>{var N;const d=appCreator({name:"VuepressApp",setup(){var z;setupUpdateHead();for(const j of clientConfigs)(z=j.setup)==null||z.call(j);return()=>[h$1(RouterView),...clientConfigs.flatMap(({rootComponents:j=[]})=>j.map(Z=>h$1(Z)))]}}),R=createVueRouter();setupGlobalComponents(d),setupGlobalComputed(d,R,clientConfigs);for(const z of clientConfigs)await((N=z.enhance)==null?void 0:N.call(z,{app:d,router:R,siteData}));return d.use(R),{app:d,router:R}};createVueApp().then(({app:d,router:R})=>{R.isReady().then(()=>{d.mount("#app")})});export{__vitePreload as _,createVueApp,ut as u,vt as v};
