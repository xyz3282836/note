import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,a as e}from"./app-339f552b.js";const t={},p=e(`<h1 id="正则" tabindex="-1"><a class="header-anchor" href="#正则" aria-hidden="true">#</a> 正则</h1><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo" aria-hidden="true">#</a> demo</h2><p>(^//)([\\w\\u4e00-\\u9fa5]{1})(?!😇</p><p>//fx</p><p>//我是</p><p>排除 //go:</p><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><p>\\d 数字 \\w 数字或者字母 \\s 空格 . 任意字符 * 任意个，包含 0 + 至少 1 个 ? 0 或者 1 个 {n} n 个 {n,m} n-m 个</p><p>[] 表示范围</p><p>^ 开头</p><p>$ 结束</p><p>正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>re.match<span class="token punctuation">(</span>r<span class="token string">&#39;^(\\d+)(0*)$&#39;</span>, <span class="token string">&#39;102300&#39;</span><span class="token punctuation">)</span>.groups<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">&#39;102300&#39;</span>,<span class="token string">&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\\d+采用贪婪匹配，需要加?来采用非贪婪匹配</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>re.match<span class="token punctuation">(</span>r<span class="token string">&#39;^(\\d+?)(0*)$&#39;</span>, <span class="token string">&#39;102300&#39;</span><span class="token punctuation">)</span>.groups<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token string">&#39;1023&#39;</span>，<span class="token string">&#39;00&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15),i=[p];function c(r,d){return s(),n("div",null,i)}const u=a(t,[["render",c],["__file","正则.html.vue"]]);export{u as default};
