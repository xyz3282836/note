import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,a as t}from"./app-5693ca20.js";const e={},p=t(`<h1 id="第六章-系统数据文件和信息" tabindex="-1"><a class="header-anchor" href="#第六章-系统数据文件和信息" aria-hidden="true">#</a> 第六章 系统数据文件和信息</h1><h2 id="口令文件" tabindex="-1"><a class="header-anchor" href="#口令文件" aria-hidden="true">#</a> 口令文件</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pwd.h&gt;</span></span>
查看登入名或者用户ID
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwuid</span><span class="token punctuation">(</span><span class="token class-name">uid_t</span> uid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwnam</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
macos
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_name<span class="token punctuation">;</span>		<span class="token comment">/* user name */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_passwd<span class="token punctuation">;</span>		<span class="token comment">/* encrypted password */</span>
	<span class="token class-name">uid_t</span>	pw_uid<span class="token punctuation">;</span>			<span class="token comment">/* user uid */</span>
	<span class="token class-name">gid_t</span>	pw_gid<span class="token punctuation">;</span>			<span class="token comment">/* user gid */</span>
	__darwin_time_t pw_change<span class="token punctuation">;</span>		<span class="token comment">/* password change time */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_class<span class="token punctuation">;</span>		<span class="token comment">/* user access class */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_gecos<span class="token punctuation">;</span>		<span class="token comment">/* Honeywell login info */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_dir<span class="token punctuation">;</span>		<span class="token comment">/* home directory */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>pw_shell<span class="token punctuation">;</span>		<span class="token comment">/* default shell */</span>
	__darwin_time_t pw_expire<span class="token punctuation">;</span>		<span class="token comment">/* account expiration */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
查看整个口令文件
<span class="token keyword">struct</span> <span class="token class-name">passwd</span> <span class="token operator">*</span><span class="token function">getpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//清理读取的缓存和关闭文件</span>
<span class="token keyword">void</span> <span class="token function">setpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">endpwent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="阴影口令" tabindex="-1"><a class="header-anchor" href="#阴影口令" aria-hidden="true">#</a> 阴影口令</h2><p>访问阴影口令函数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;shadow.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">spwd</span> <span class="token operator">*</span><span class="token function">getspnam</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">spwd</span> <span class="token operator">*</span><span class="token function">getspent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">setepent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">endspent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组文件" tabindex="-1"><a class="header-anchor" href="#组文件" aria-hidden="true">#</a> 组文件</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;grp.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">group</span> <span class="token operator">*</span><span class="token function">getgrgid</span><span class="token punctuation">(</span><span class="token class-name">gid_t</span> gid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">group</span> <span class="token operator">*</span><span class="token function">getgrnam</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
一行一行获取
<span class="token keyword">struct</span> <span class="token class-name">group</span> <span class="token operator">*</span><span class="token function">getgrent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">setgrent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">endgrent</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
macos
<span class="token keyword">struct</span> <span class="token class-name">group</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>gr_name<span class="token punctuation">;</span>		<span class="token comment">/* [XBD] group name */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span>gr_passwd<span class="token punctuation">;</span>		<span class="token comment">/* [???] group password */</span>
	<span class="token class-name">gid_t</span>	gr_gid<span class="token punctuation">;</span>			<span class="token comment">/* [XBD] group id */</span>
	<span class="token keyword">char</span>	<span class="token operator">*</span><span class="token operator">*</span>gr_mem<span class="token punctuation">;</span>		<span class="token comment">/* [XBD] group members */</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="附属组-id" tabindex="-1"><a class="header-anchor" href="#附属组-id" aria-hidden="true">#</a> 附属组 ID</h2><p>POSIX.1 要求的</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="实现区别" tabindex="-1"><a class="header-anchor" href="#实现区别" aria-hidden="true">#</a> 实现区别</h2><h2 id="其他数据文件" tabindex="-1"><a class="header-anchor" href="#其他数据文件" aria-hidden="true">#</a> 其他数据文件</h2><p>pwd /etc/passwd</p><p>grp /etc/group</p><p>shadow /etc/shadow</p><p>/etc/hosts</p><p>/etc/networks</p><p>/etc/protocols</p><p>/etc/services</p><h2 id="登入账号记录" tabindex="-1"><a class="header-anchor" href="#登入账号记录" aria-hidden="true">#</a> 登入账号记录</h2><p>utmp 文件：记录当前登入系统的用户</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">utmp</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> ut_line<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> ut_name<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> ut_time<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>wtmp 文件：记录登入，注销事件</p><p>linux 中/var/run/utmp，/var/log/wtmp</p><h2 id="系统标识" tabindex="-1"><a class="header-anchor" href="#系统标识" aria-hidden="true">#</a> 系统标识</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/utsname.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">uname</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">utsname</span> <span class="token operator">*</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">gethostname</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">,</span><span class="token keyword">int</span> namelen<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取主机名，sethostname超管用户可设置</span>
<span class="token keyword">struct</span> <span class="token class-name">utsname</span><span class="token punctuation">{</span>
    <span class="token keyword">char</span> sysname<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//</span>
    <span class="token keyword">char</span> nodename<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> release<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> version<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> machine<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="时间和日期例程" tabindex="-1"><a class="header-anchor" href="#时间和日期例程" aria-hidden="true">#</a> 时间和日期例程</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h&gt;</span></span>
<span class="token class-name">time_t</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token class-name">time_t</span> <span class="token operator">*</span>calptr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回日历时间</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/time.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">clock_gettime</span><span class="token punctuation">(</span><span class="token class-name">clockid_t</span> clock_id<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">timespec</span> <span class="token operator">*</span>tsp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取指定时钟的时间</span>
<span class="token keyword">int</span> <span class="token function">clock_getres</span><span class="token punctuation">(</span><span class="token class-name">clock_id_t</span> clock_id<span class="token punctuation">,</span><span class="token keyword">struct</span> <span class="token class-name">timespec</span> <span class="token operator">*</span>tsp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
<span class="token keyword">int</span> <span class="token function">clock_settime</span><span class="token punctuation">(</span><span class="token class-name">clockid_t</span> clock_id<span class="token punctuation">,</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">timespec</span> <span class="token operator">*</span>tsp<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token function">gettimeofday</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">timeval</span> <span class="token operator">*</span>restrict tp<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span>restrict tzp<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获得微妙级别时间，虽然弃用</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h&gt;</span></span>
<span class="token keyword">struct</span> <span class="token class-name">tm</span> <span class="token operator">*</span><span class="token function">gmtime</span><span class="token punctuation">(</span>cosnt <span class="token class-name">time_t</span> <span class="token operator">*</span>calptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">tm</span> <span class="token operator">*</span><span class="token function">localtime</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">time_t</span> <span class="token operator">*</span>calptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">time_t</span> <span class="token function">mktime</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">tm</span> <span class="token operator">*</span>tmptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">size_t</span> <span class="token function">strftime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转字符串</span>
<span class="token class-name">size_t</span> <span class="token function">strftime_l</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//较上多个指定区域</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>localtime：日历时间转本地时间</p><p>gmtime：日历时间转协调统一时间的分解结构</p><p>mktime：本地时间转 time_t</p><p>strftime：转字符串</p><p>用法</p><p>time(&amp;t) t 是日历时间</p><p>localtime(&amp;t) 转换位本地时间</p><p>strftime() 本地时间格式成字符串</p>`,37),c=[p];function o(l,i){return n(),a("div",null,c)}const d=s(e,[["render",o],["__file","第六章 系统数据文件和信息.html.vue"]]);export{d as default};
