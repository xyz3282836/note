import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c,b as n,d as a,e,a as t}from"./app-339f552b.js";const i={},r=n("h1",{id:"brew",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#brew","aria-hidden":"true"},"#"),a(" brew")],-1),u=n("p",null,"ssl 问题",-1),d={href:"http://ghcr.io:443",target:"_blank",rel:"noopener noreferrer"},k=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// Setting HOMEBREW_FORCE_BREWED_CURL should <span class="token function">make</span> Homebrew use brewed <span class="token function">curl</span> instead of system curl.
<span class="token builtin class-name">export</span> <span class="token assign-left variable">HOMEBREW_FORCE_BREWED_CURL</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="工具集" tabindex="-1"><a class="header-anchor" href="#工具集" aria-hidden="true">#</a> 工具集</h2>`,2),v={href:"https://github.com/sharkdp/fd",target:"_blank",rel:"noopener noreferrer"},b=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Usage: fd <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span> <span class="token punctuation">[</span>pattern<span class="token punctuation">]</span> <span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">..</span>.

Arguments:
  <span class="token punctuation">[</span>pattern<span class="token punctuation">]</span>  搜索模式 <span class="token punctuation">(</span>正则表达式，除非使用了 <span class="token string">&#39;--glob&#39;</span><span class="token punctuation">;</span> 可选的<span class="token punctuation">)</span>
  <span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">..</span>.  文件系统搜索的根目录 <span class="token punctuation">(</span>可选的<span class="token punctuation">)</span>

Options:
  -H, <span class="token parameter variable">--hidden</span>                     搜索隐藏的文件和目录
  -I, --no-ignore                  不遵从 .<span class="token punctuation">(</span>git<span class="token operator">|</span>fd<span class="token punctuation">)</span>ignore 文件
  -s, --case-sensitive             区分大小写的搜索 <span class="token punctuation">(</span>默认: 智能大小写<span class="token punctuation">)</span>
  -i, --ignore-case                不区分大小写的搜索 <span class="token punctuation">(</span>默认: 智能大小写<span class="token punctuation">)</span>
  -g, <span class="token parameter variable">--glob</span>                       基于Glob的搜索 <span class="token punctuation">(</span>默认: 正则表达式<span class="token punctuation">)</span>
  -a, --absolute-path              显示绝对路径而不是相对路径
  -l, --list-details               使用带有文件元数据的长列表格式
  -L, <span class="token parameter variable">--follow</span>                     遵循符号链接
  -p, --full-path                  搜索完整路径 <span class="token punctuation">(</span>默认: 仅文件名<span class="token punctuation">)</span>
  -d, --max-depth <span class="token operator">&lt;</span>depth<span class="token operator">&gt;</span>          设置最大搜索深度 <span class="token punctuation">(</span>默认: 无<span class="token punctuation">)</span>
  -E, <span class="token parameter variable">--exclude</span> <span class="token operator">&lt;</span>pattern<span class="token operator">&gt;</span>          排除符合给定 glob 模式的条目
  -t, <span class="token parameter variable">--type</span> <span class="token operator">&lt;</span>filetype<span class="token operator">&gt;</span>            按类型过滤: <span class="token function">file</span> <span class="token punctuation">(</span>f<span class="token punctuation">)</span>, directory <span class="token punctuation">(</span>d<span class="token punctuation">)</span>, symlink <span class="token punctuation">(</span>l<span class="token punctuation">)</span>,
                                   executable <span class="token punctuation">(</span>x<span class="token punctuation">)</span>, empty <span class="token punctuation">(</span>e<span class="token punctuation">)</span>, socket <span class="token punctuation">(</span>s<span class="token punctuation">)</span>, pipe <span class="token punctuation">(</span>p<span class="token punctuation">)</span>
  -e, <span class="token parameter variable">--extension</span> <span class="token operator">&lt;</span>ext<span class="token operator">&gt;</span>            按文件扩展名过滤
  -S, <span class="token parameter variable">--size</span> <span class="token operator">&lt;</span>size<span class="token operator">&gt;</span>                根据文件的大小限制结果
      --changed-within <span class="token operator">&lt;</span>date<span class="token operator">|</span>dur<span class="token operator">&gt;</span>  按文件修改时间过滤 <span class="token punctuation">(</span>较新<span class="token punctuation">)</span>
      --changed-before <span class="token operator">&lt;</span>date<span class="token operator">|</span>dur<span class="token operator">&gt;</span>  按文件修改时间过滤 <span class="token punctuation">(</span>较旧<span class="token punctuation">)</span>
  -o, <span class="token parameter variable">--owner</span> <span class="token operator">&lt;</span>user:group<span class="token operator">&gt;</span>         按拥有文件的用户 <span class="token punctuation">(</span>和/或者<span class="token punctuation">)</span> 组
  -x, <span class="token parameter variable">--exec</span> <span class="token operator">&lt;</span>cmd<span class="token operator">&gt;</span><span class="token punctuation">..</span>.              对每个搜索结果执行命令
  -X, --exec-batch <span class="token operator">&lt;</span>cmd<span class="token operator">&gt;</span><span class="token punctuation">..</span>.        一次执行包含所有搜索结果的命令
  -c, <span class="token parameter variable">--color</span> <span class="token operator">&lt;</span>when<span class="token operator">&gt;</span>               什么时候使用颜色 <span class="token punctuation">[</span>默认: auto<span class="token punctuation">]</span> <span class="token punctuation">[</span>可以使用的值: auto,
                                   always, never<span class="token punctuation">]</span>
  -h, <span class="token parameter variable">--help</span>                       打印帮助信息 <span class="token punctuation">(</span>使用 <span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">--help</span><span class="token variable">\`</span></span> 获取更多细节<span class="token punctuation">)</span>
  -V, <span class="token parameter variable">--version</span>                    打印版本信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m={href:"https://github.com/BurntSushi/ripgrep",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/jesseduffield/lazygit",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/abiosoft/colima",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/lima-vm/lima",target:"_blank",rel:"noopener noreferrer"};function f(x,E){const s=o("ExternalLinkIcon");return l(),c("div",null,[r,u,n("p",null,[a("curl: (35) LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to "),n("a",d,[a("ghcr.io:443"),e(s)])]),k,n("p",null,[n("a",v,[a("https://github.com/sharkdp/fd"),e(s)])]),b,n("p",null,[n("a",m,[a("https://github.com/BurntSushi/ripgrep"),e(s)])]),n("p",null,[n("a",h,[a("https://github.com/jesseduffield/lazygit"),e(s)])]),n("p",null,[n("a",g,[a("https://github.com/abiosoft/colima"),e(s)])]),n("p",null,[n("a",_,[a("https://github.com/lima-vm/lima"),e(s)])])])}const L=p(i,[["render",f],["__file","brew.html.vue"]]);export{L as default};
