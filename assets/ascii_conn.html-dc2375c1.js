const n=JSON.parse(`{"key":"v-2ea49593","path":"/source-code/bilibili-kratos/library/cache/memcache/ascii_conn.html","title":"ascii_conn","lang":"zh-CN","frontmatter":{"description":"ascii_conn // asiiConn is the low-level implementation of Conn // 实现了conn.go的protocolConn interface type asiiConn struct { \\terr error \\tconn net.Conn \\t// Read &amp; Write \\treadTimeout time.Duration \\twriteTimeout time.Duration \\trw *bufio.ReadWriter } func newASCIIConn(netConn net.Conn, readTimeout, writeTimeout time.Duration) (protocolConn, error) { \\tif writeTimeout &lt;= 0 || readTimeout &lt;= 0 { \\t\\treturn nil, pkgerr.Errorf(\\"readTimeout writeTimeout can't be zero\\") \\t} \\tc := &amp;asiiConn{ \\t\\tconn: netConn, \\t\\trw: bufio.NewReadWriter(bufio.NewReader(netConn), \\t\\t\\tbufio.NewWriter(netConn)), \\t\\treadTimeout: readTimeout, \\t\\twriteTimeout: writeTimeout, \\t} \\treturn c, nil }","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/source-code/bilibili-kratos/library/cache/memcache/ascii_conn.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"ascii_conn"}],["meta",{"property":"og:description","content":"ascii_conn // asiiConn is the low-level implementation of Conn // 实现了conn.go的protocolConn interface type asiiConn struct { \\terr error \\tconn net.Conn \\t// Read &amp; Write \\treadTimeout time.Duration \\twriteTimeout time.Duration \\trw *bufio.ReadWriter } func newASCIIConn(netConn net.Conn, readTimeout, writeTimeout time.Duration) (protocolConn, error) { \\tif writeTimeout &lt;= 0 || readTimeout &lt;= 0 { \\t\\treturn nil, pkgerr.Errorf(\\"readTimeout writeTimeout can't be zero\\") \\t} \\tc := &amp;asiiConn{ \\t\\tconn: netConn, \\t\\trw: bufio.NewReadWriter(bufio.NewReader(netConn), \\t\\t\\tbufio.NewWriter(netConn)), \\t\\treadTimeout: readTimeout, \\t\\twriteTimeout: writeTimeout, \\t} \\treturn c, nil }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ascii_conn\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":0.25,"words":74},"filePathRelative":"source-code/bilibili-kratos/library/cache/memcache/ascii_conn.md","localizedDate":"2023年3月11日","excerpt":"<h1> ascii_conn</h1>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// asiiConn is the low-level implementation of Conn</span>\\n<span class=\\"token comment\\">// 实现了conn.go的protocolConn interface</span>\\n<span class=\\"token keyword\\">type</span> asiiConn <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\terr  <span class=\\"token builtin\\">error</span>\\n\\tconn net<span class=\\"token punctuation\\">.</span>Conn\\n\\t<span class=\\"token comment\\">// Read &amp; Write</span>\\n\\treadTimeout  time<span class=\\"token punctuation\\">.</span>Duration\\n\\twriteTimeout time<span class=\\"token punctuation\\">.</span>Duration\\n\\trw           <span class=\\"token operator\\">*</span>bufio<span class=\\"token punctuation\\">.</span>ReadWriter\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">newASCIIConn</span><span class=\\"token punctuation\\">(</span>netConn net<span class=\\"token punctuation\\">.</span>Conn<span class=\\"token punctuation\\">,</span> readTimeout<span class=\\"token punctuation\\">,</span> writeTimeout time<span class=\\"token punctuation\\">.</span>Duration<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>protocolConn<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span> writeTimeout <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span> readTimeout <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">,</span> pkgerr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Errorf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"readTimeout writeTimeout can't be zero\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tc <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&amp;</span>asiiConn<span class=\\"token punctuation\\">{</span>\\n\\t\\tconn<span class=\\"token punctuation\\">:</span> netConn<span class=\\"token punctuation\\">,</span>\\n\\t\\trw<span class=\\"token punctuation\\">:</span> bufio<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewReadWriter</span><span class=\\"token punctuation\\">(</span>bufio<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewReader</span><span class=\\"token punctuation\\">(</span>netConn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\tbufio<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">NewWriter</span><span class=\\"token punctuation\\">(</span>netConn<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n\\t\\treadTimeout<span class=\\"token punctuation\\">:</span>  readTimeout<span class=\\"token punctuation\\">,</span>\\n\\t\\twriteTimeout<span class=\\"token punctuation\\">:</span> writeTimeout<span class=\\"token punctuation\\">,</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">return</span> c<span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">nil</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
