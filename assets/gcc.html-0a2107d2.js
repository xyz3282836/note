const c=JSON.parse('{"key":"v-b7c0262e","path":"/apue/gcc.html","title":"gcc","lang":"zh-CN","frontmatter":{"description":"gcc GCC 参数详解 [介绍] gcc and g++分别是 gnu 的 c &amp; c++编译器 gcc/g++在执行编译工作的时候，总共需要 4 步 1.预处理，生成.i 的文件 2.将预处理后的文件转换成汇编语言，生成文件.s 3.由汇编变为目标代码(机器代码)，生成.o 的文件 4.连接目标代码，生成可执行程序 [参数详解] -c 　　只激活预处理,编译,和汇编,也就是他只把程序做成 obj 文件 　　例子用法: 　　 gcc -c hello.c 　　他将生成.o 的 obj 文件 -S 　　只激活预处理和编译，就是指把文件编译成为汇编代码。 　　例子用法 　　 gcc -S hello.c 　　他将生成.s 的汇编代码，你可以用文本编辑器察看 -E 　　只激活预处理,这个不生成文件,你需要把它重定向到一个输出文件里 　　面. 　　例子用法: 　　 gcc -E hello.c &gt; pianoapan.txt 　　 gcc -E hello.c | more 　　慢慢看吧,一个 hello word 也要与处理成 800 行的代码 -o 　　制定目标名称,缺省的时候,gcc 编译出来的文件是 a.out,很难听,如果 　　你和我有同感，改掉它,哈哈 　　例子用法 　　 gcc -o hello.exe hello.c (哦,windows 用习惯了) 　　 gcc -o hello.asm -S hello.c -ansi 　　关闭 gnu c 中与 ansi c 不兼容的特性,激活 ansi c 的专有特性(包括禁止一些 asm inline typeof 关键字,以及 UNIX,vax 等预处理宏,","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/apue/gcc.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"gcc"}],["meta",{"property":"og:description","content":"gcc GCC 参数详解 [介绍] gcc and g++分别是 gnu 的 c &amp; c++编译器 gcc/g++在执行编译工作的时候，总共需要 4 步 1.预处理，生成.i 的文件 2.将预处理后的文件转换成汇编语言，生成文件.s 3.由汇编变为目标代码(机器代码)，生成.o 的文件 4.连接目标代码，生成可执行程序 [参数详解] -c 　　只激活预处理,编译,和汇编,也就是他只把程序做成 obj 文件 　　例子用法: 　　 gcc -c hello.c 　　他将生成.o 的 obj 文件 -S 　　只激活预处理和编译，就是指把文件编译成为汇编代码。 　　例子用法 　　 gcc -S hello.c 　　他将生成.s 的汇编代码，你可以用文本编辑器察看 -E 　　只激活预处理,这个不生成文件,你需要把它重定向到一个输出文件里 　　面. 　　例子用法: 　　 gcc -E hello.c &gt; pianoapan.txt 　　 gcc -E hello.c | more 　　慢慢看吧,一个 hello word 也要与处理成 800 行的代码 -o 　　制定目标名称,缺省的时候,gcc 编译出来的文件是 a.out,很难听,如果 　　你和我有同感，改掉它,哈哈 　　例子用法 　　 gcc -o hello.exe hello.c (哦,windows 用习惯了) 　　 gcc -o hello.asm -S hello.c -ansi 　　关闭 gnu c 中与 ansi c 不兼容的特性,激活 ansi c 的专有特性(包括禁止一些 asm inline typeof 关键字,以及 UNIX,vax 等预处理宏,"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gcc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":4.95,"words":1484},"filePathRelative":"apue/gcc.md","localizedDate":"2023年3月11日","excerpt":"<h1> gcc</h1>\\n<p><strong>GCC 参数详解</strong></p>\\n<p>[介绍]\\ngcc and g++分别是 gnu 的 c &amp; c++编译器\\ngcc/g++在执行编译工作的时候，总共需要 4 步 1.预处理，生成.i 的文件 2.将预处理后的文件转换成汇编语言，生成文件.s 3.由汇编变为目标代码(机器代码)，生成.o 的文件 4.连接目标代码，生成可执行程序</p>\\n<p>[参数详解]\\n-c<br>\\n　　只激活预处理,编译,和汇编,也就是他只把程序做成 obj 文件\\n　　例子用法:\\n　　 gcc -c hello.c\\n　　他将生成.o 的 obj 文件<br>\\n-S\\n　　只激活预处理和编译，就是指把文件编译成为汇编代码。\\n　　例子用法\\n　　 gcc -S hello.c\\n　　他将生成.s 的汇编代码，你可以用文本编辑器察看\\n-E\\n　　只激活预处理,这个不生成文件,你需要把它重定向到一个输出文件里\\n　　面.\\n　　例子用法:\\n　　 gcc -E hello.c &gt; pianoapan.txt\\n　　 gcc -E hello.c | more\\n　　慢慢看吧,一个 hello word 也要与处理成 800 行的代码\\n-o\\n　　制定目标名称,缺省的时候,gcc 编译出来的文件是 a.out,很难听,如果\\n　　你和我有同感，改掉它,哈哈\\n　　例子用法\\n　　 gcc -o hello.exe hello.c (哦,windows 用习惯了)\\n　　 gcc -o hello.asm -S hello.c\\n-ansi\\n　　关闭 gnu c 中与 ansi c 不兼容的特性,激活 ansi c 的专有特性(包括禁止一些 asm inline typeof 关键字,以及 UNIX,vax 等预处理宏,</p>","autoDesc":true}');export{c as data};
