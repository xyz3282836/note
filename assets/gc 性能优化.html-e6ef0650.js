import{_ as n,W as a,X as l,Z as e,$ as t,a0 as o,Y as i,C as s}from"./framework-3ab8bde0.js";const c={},h=i('<h1 id="gc-性能优化" tabindex="-1"><a class="header-anchor" href="#gc-性能优化" aria-hidden="true">#</a> gc 性能优化</h1><p>Go gc 触发时机为 heap 大小增长为上次 gc 的两倍时。但在 GO GC 实际实践中会按照 Pacer 调频算法根据堆增长速度等因素，使堆大小在达到两倍大小前提前发起 GC。通过调整 GC 的步调，以调整 GC 的触发频率。</p><p>两种方式</p><ol><li>设置 gc</li><li>设置 debug.SetGCPercent()</li></ol><p>设置 GOGC 的弊端</p><ul><li>GOGC 设置比率的方式不精确；</li><li>GOGC 设置过小，容易频繁触发 GC；</li><li>对某些程序本身占用内存就低，容易触发 GC；</li><li>GOGC 设置很大，有的时候又容易触发 OOM；</li></ul><h2 id="go-ballast" tabindex="-1"><a class="header-anchor" href="#go-ballast" aria-hidden="true">#</a> go ballast</h2><ul><li><strong>n.</strong>（船中保持平衡的）压舱物；（热气球的）镇重物</li><li>**v.**在…上装压舱物[沙囊]；为(铁路等)铺道碴；使沉着</li></ul><p>Go ballast，其实很简单就是初始化一个生命周期贯穿整个 Go 应用生命周期的超大 slice。</p><h2 id="go-tuner" tabindex="-1"><a class="header-anchor" href="#go-tuner" aria-hidden="true">#</a> go tuner</h2><p>通过自动调整 GOGC，来动态的调整 GC 的 target ,用来在内存足够的时候调整 GOGC 来减少 GC 的次数。</p><h2 id="setmemorylimit" tabindex="-1"><a class="header-anchor" href="#setmemorylimit" aria-hidden="true">#</a> SetMemoryLimit</h2><p>1.19.1 新增 debug.SetMemoryLimit 解决这个问题</p><ul><li>SetMemoryLimit + GOGC = off + MemoryLimit 足够大； <ul><li>设置 Go Ballast 的效果一样，常驻稳态内存的服务；</li></ul></li><li>SetMemoryLimit + GOGC = 100 + MemoryLimit 足够大； <ul><li>在没有达到 MemoryLimit 阈值的情况下，还是遵循 GOGC 的 target 决定要不要进行垃圾回收，使用 GOGC tuner 进行调优，避免多次高频的垃圾回收，大部分应用服务符合这类配置；</li></ul></li><li>SetMemoryLimit + GOGC = 100 + MemoryLimit 不足够大；</li><li>SetMemoryLimit + GOGC = off + MemoryLimit 不足够大；</li></ul><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> references</h2>',15),m={href:"https://segmentfault.com/a/1190000041602269",target:"_blank",rel:"noopener noreferrer"},p={href:"https://segmentfault.com/a/1190000041637173",target:"_blank",rel:"noopener noreferrer"},g={href:"https://wudaijun.com/2020/01/go-gc-keypoint-and-monitor/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://mp.weixin.qq.com/s/gc34RYqmzeMndEJ1-7sOwg",target:"_blank",rel:"noopener noreferrer"},_={href:"https://mp.weixin.qq.com/s/_qedHY6tHvtmXcmy9JTfig",target:"_blank",rel:"noopener noreferrer"},u={href:"https://mp.weixin.qq.com/s/ry9HpZqFt4nZD_BZYLUBeA",target:"_blank",rel:"noopener noreferrer"},b={href:"https://mp.weixin.qq.com/s/EIuM073G7VV1rIsnTXWyEw",target:"_blank",rel:"noopener noreferrer"},f={href:"https://go.googlesource.com/proposal/+/a216b56e743c5b6b300b3ef1673ee62684b5b63b/design/44167-gc-pacer-redesign.md",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.ardanlabs.com/blog/2018/12/garbage-collection-in-go-part1-semantics.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html",target:"_blank",rel:"noopener noreferrer"};function q(y,x){const r=s("ExternalLinkIcon");return a(),l("div",null,[h,e("p",null,[t("[1] "),e("a",m,[t("https://segmentfault.com/a/1190000041602269"),o(r)])]),e("p",null,[t("[2] "),e("a",p,[t("https://segmentfault.com/a/1190000041637173"),o(r)])]),e("p",null,[t("[3] "),e("a",g,[t("https://wudaijun.com/2020/01/go-gc-keypoint-and-monitor/"),o(r)])]),e("p",null,[t("[4] "),e("a",d,[t("https://mp.weixin.qq.com/s/gc34RYqmzeMndEJ1-7sOwg"),o(r)])]),e("p",null,[t("[5] "),e("a",_,[t("https://mp.weixin.qq.com/s/_qedHY6tHvtmXcmy9JTfig"),o(r)])]),e("p",null,[t("[6] "),e("a",u,[t("https://mp.weixin.qq.com/s/ry9HpZqFt4nZD_BZYLUBeA"),o(r)])]),e("p",null,[t("[7] "),e("a",b,[t("https://mp.weixin.qq.com/s/EIuM073G7VV1rIsnTXWyEw"),o(r)])]),e("p",null,[t("[8] "),e("a",f,[t("https://go.googlesource.com/proposal/+/a216b56e743c5b6b300b3ef1673ee62684b5b63b/design/44167-gc-pacer-redesign.md"),o(r)])]),e("p",null,[t("[9] "),e("a",G,[t("https://www.ardanlabs.com/blog/2018/12/garbage-collection-in-go-part1-semantics.html"),o(r)])]),e("p",null,[t("[10] "),e("a",w,[t("https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html"),o(r)])]),e("p",null,[t("[11] "),e("a",C,[t("https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html"),o(r)])])])}const O=n(c,[["render",q],["__file","gc 性能优化.html.vue"]]);export{O as default};
