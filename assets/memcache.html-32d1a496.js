const n=JSON.parse('{"key":"v-5539e700","path":"/source-code/bilibili-kratos/library/cache/memcache/memcache.html","title":"Memcache","lang":"zh-CN","frontmatter":{"description":"Memcache // Memcache主体结构 type Memcache struct { \\tpool *Pool // pool_conn.go 中的Pool } func New(cfg *Config) *Memcache { \\treturn &amp;Memcache{pool: NewPool(cfg)} // pool_conn.go 中的NewPool方法 } type Conn interface { \\tClose() error \\tErr() error \\tAdd(item *Item) error \\tSet(item *Item) error \\tReplace(item *Item) error \\tGet(key string) (*Item, error) \\tGetMulti(keys []string) (map[string]*Item, error) \\tDelete(key string) error \\tIncrement(key string, delta uint64) (newValue uint64, err error) \\tDecrement(key string, delta uint64) (newValue uint64, err error) \\tCompareAndSwap(item *Item) error \\tTouch(key string, seconds int32) (err error) \\tScan(item *Item, v interface{}) (err error) \\tAddContext(ctx context.Context, item *Item) error \\tSetContext(ctx context.Context, item *Item) error \\tReplaceContext(ctx context.Context, item *Item) error \\tGetContext(ctx context.Context, key string) (*Item, error) \\tGetMultiContext(ctx context.Context, keys []string) (map[string]*Item, error) \\tDeleteContext(ctx context.Context, key string) error \\tIncrementContext(ctx context.Context, key string, delta uint64) (newValue uint64, err error) \\tDecrementContext(ctx context.Context, key string, delta uint64) (newValue uint64, err error) \\tCompareAndSwapContext(ctx context.Context, item *Item) error \\tTouchContext(ctx context.Context, key string, seconds int32) (err error) }","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/source-code/bilibili-kratos/library/cache/memcache/memcache.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"Memcache"}],["meta",{"property":"og:description","content":"Memcache // Memcache主体结构 type Memcache struct { \\tpool *Pool // pool_conn.go 中的Pool } func New(cfg *Config) *Memcache { \\treturn &amp;Memcache{pool: NewPool(cfg)} // pool_conn.go 中的NewPool方法 } type Conn interface { \\tClose() error \\tErr() error \\tAdd(item *Item) error \\tSet(item *Item) error \\tReplace(item *Item) error \\tGet(key string) (*Item, error) \\tGetMulti(keys []string) (map[string]*Item, error) \\tDelete(key string) error \\tIncrement(key string, delta uint64) (newValue uint64, err error) \\tDecrement(key string, delta uint64) (newValue uint64, err error) \\tCompareAndSwap(item *Item) error \\tTouch(key string, seconds int32) (err error) \\tScan(item *Item, v interface{}) (err error) \\tAddContext(ctx context.Context, item *Item) error \\tSetContext(ctx context.Context, item *Item) error \\tReplaceContext(ctx context.Context, item *Item) error \\tGetContext(ctx context.Context, key string) (*Item, error) \\tGetMultiContext(ctx context.Context, keys []string) (map[string]*Item, error) \\tDeleteContext(ctx context.Context, key string) error \\tIncrementContext(ctx context.Context, key string, delta uint64) (newValue uint64, err error) \\tDecrementContext(ctx context.Context, key string, delta uint64) (newValue uint64, err error) \\tCompareAndSwapContext(ctx context.Context, item *Item) error \\tTouchContext(ctx context.Context, key string, seconds int32) (err error) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Memcache\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":0.61,"words":183},"filePathRelative":"source-code/bilibili-kratos/library/cache/memcache/memcache.md","localizedDate":"2023年3月11日","excerpt":"<h1> Memcache</h1>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// Memcache主体结构</span>\\n<span class=\\"token keyword\\">type</span> Memcache <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tpool <span class=\\"token operator\\">*</span>Pool <span class=\\"token comment\\">// pool_conn.go 中的Pool</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">New</span><span class=\\"token punctuation\\">(</span>cfg <span class=\\"token operator\\">*</span>Config<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>Memcache <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">&amp;</span>Memcache<span class=\\"token punctuation\\">{</span>pool<span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">NewPool</span><span class=\\"token punctuation\\">(</span>cfg<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">}</span> <span class=\\"token comment\\">// pool_conn.go 中的NewPool方法</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token keyword\\">type</span> Conn <span class=\\"token keyword\\">interface</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Err</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Set</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Replace</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">GetMulti</span><span class=\\"token punctuation\\">(</span>keys <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">Delete</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Increment</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> delta <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>newValue <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">,</span> err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">Decrement</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> delta <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>newValue <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">,</span> err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">CompareAndSwap</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">Touch</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> seconds <span class=\\"token builtin\\">int32</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">Scan</span><span class=\\"token punctuation\\">(</span>item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">,</span> v <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">AddContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">SetContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">ReplaceContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">GetContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">GetMultiContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> keys <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">map</span><span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">DeleteContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">IncrementContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> delta <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>newValue <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">,</span> err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">DecrementContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> delta <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>newValue <span class=\\"token builtin\\">uint64</span><span class=\\"token punctuation\\">,</span> err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">CompareAndSwapContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> item <span class=\\"token operator\\">*</span>Item<span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">error</span>\\n\\t<span class=\\"token function\\">TouchContext</span><span class=\\"token punctuation\\">(</span>ctx context<span class=\\"token punctuation\\">.</span>Context<span class=\\"token punctuation\\">,</span> key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> seconds <span class=\\"token builtin\\">int32</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>err <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
