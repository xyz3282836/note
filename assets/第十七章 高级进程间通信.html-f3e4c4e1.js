const n=JSON.parse('{"key":"v-1912efa4","path":"/apue/%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0%20%E9%AB%98%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html","title":"第十七章 高级进程间通信","lang":"zh-CN","frontmatter":{"description":"第十七章 高级进程间通信 UNIX 域套接字 UNIX 域套接字用于在同一台计算机上运行的进程之间的通信 虽然因特网域套接字可用于 同一目的，但 UNIX 域套接字的效率更高 UNIX 域套接字提供流和数据报两种接口 UNIX 域套接字就像是套接字和管道的混合 可以使用它们面向网络的域套接 字接口或者使用 socketpair 函数来创建一对无命名的、相互连接的 UNIX 域套接字 #include &lt;sys/sock.h&gt; int socketpair(int domain,int type,int protocol,int sockfd[2]); sockpair(AF_UNIX,SOCK_DGRAM,0,fd)","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/apue/%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0%20%E9%AB%98%E7%BA%A7%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"第十七章 高级进程间通信"}],["meta",{"property":"og:description","content":"第十七章 高级进程间通信 UNIX 域套接字 UNIX 域套接字用于在同一台计算机上运行的进程之间的通信 虽然因特网域套接字可用于 同一目的，但 UNIX 域套接字的效率更高 UNIX 域套接字提供流和数据报两种接口 UNIX 域套接字就像是套接字和管道的混合 可以使用它们面向网络的域套接 字接口或者使用 socketpair 函数来创建一对无命名的、相互连接的 UNIX 域套接字 #include &lt;sys/sock.h&gt; int socketpair(int domain,int type,int protocol,int sockfd[2]); sockpair(AF_UNIX,SOCK_DGRAM,0,fd)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第十七章 高级进程间通信\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[{"level":2,"title":"UNIX 域套接字","slug":"unix-域套接字","link":"#unix-域套接字","children":[{"level":3,"title":"fd_pipe","slug":"fd-pipe","link":"#fd-pipe","children":[]},{"level":3,"title":"借助 UNIX 域套接字轮询 XSI 消息队列","slug":"借助-unix-域套接字轮询-xsi-消息队列","link":"#借助-unix-域套接字轮询-xsi-消息队列","children":[]}]},{"level":2,"title":"命名 UNIX 域套接字","slug":"命名-unix-域套接字","link":"#命名-unix-域套接字","children":[]},{"level":2,"title":"唯一连接","slug":"唯一连接","link":"#唯一连接","children":[]},{"level":2,"title":"传送文件描述符","slug":"传送文件描述符","link":"#传送文件描述符","children":[]},{"level":2,"title":"open 服务器进程 v1","slug":"open-服务器进程-v1","link":"#open-服务器进程-v1","children":[]},{"level":2,"title":"open 服务器进程 v2","slug":"open-服务器进程-v2","link":"#open-服务器进程-v2","children":[]}],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":2.1,"words":629},"filePathRelative":"apue/第十七章 高级进程间通信.md","localizedDate":"2023年3月11日","excerpt":"<h1> 第十七章 高级进程间通信</h1>\\n<h2> UNIX 域套接字</h2>\\n<p>UNIX 域套接字用于在同一台计算机上运行的进程之间的通信</p>\\n<p>虽然因特网域套接字可用于 同一目的，但 UNIX 域套接字的效率更高</p>\\n<p>UNIX 域套接字提供流和数据报两种接口</p>\\n<p>UNIX 域套接字就像是套接字和管道的混合</p>\\n<p>可以使用它们面向网络的域套接 字接口或者使用 socketpair 函数来创建一对无命名的、相互连接的 UNIX 域套接字</p>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;sys/sock.h&gt;</span></span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">socketpair</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> domain<span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">int</span> type<span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">int</span> protocol<span class=\\"token punctuation\\">,</span><span class=\\"token keyword\\">int</span> sockfd<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">sockpair</span><span class=\\"token punctuation\\">(</span>AF_UNIX<span class=\\"token punctuation\\">,</span>SOCK_DGRAM<span class=\\"token punctuation\\">,</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>fd<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
