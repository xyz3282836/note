const e=JSON.parse(`{"key":"v-624dff1f","path":"/source-code/bilibili-kratos/grpc/grpc.html","title":"GRPC","lang":"zh-CN","frontmatter":{"description":"GRPC grpc 服务发现 定义了两个 interface：Resolver 和 Builder // Resolver watches for the updates on the specified target. // Updates include address updates and service config updates. type Resolver interface { \\t// ResolveNow will be called by gRPC to try to resolve the target name \\t// again. It's just a hint, resolver can ignore this if it's not necessary. \\t// \\t// It could be called multiple times concurrently. \\tResolveNow(ResolveNowOptions) \\t// Close closes the resolver. \\tClose() } // Builder creates a resolver that will be used to watch name resolution updates. type Builder interface { \\t// Build creates a new resolver for the given target. \\t// \\t// gRPC dial calls Build synchronously, and fails if the returned error is \\t// not nil. \\tBuild(target Target, cc ClientConn, opts BuildOptions) (Resolver, error) \\t// Scheme returns the scheme supported by this resolver. \\t// Scheme is defined at https://github.com/grpc/grpc/blob/master/doc/naming.md. \\tScheme() string }","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/source-code/bilibili-kratos/grpc/grpc.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"GRPC"}],["meta",{"property":"og:description","content":"GRPC grpc 服务发现 定义了两个 interface：Resolver 和 Builder // Resolver watches for the updates on the specified target. // Updates include address updates and service config updates. type Resolver interface { \\t// ResolveNow will be called by gRPC to try to resolve the target name \\t// again. It's just a hint, resolver can ignore this if it's not necessary. \\t// \\t// It could be called multiple times concurrently. \\tResolveNow(ResolveNowOptions) \\t// Close closes the resolver. \\tClose() } // Builder creates a resolver that will be used to watch name resolution updates. type Builder interface { \\t// Build creates a new resolver for the given target. \\t// \\t// gRPC dial calls Build synchronously, and fails if the returned error is \\t// not nil. \\tBuild(target Target, cc ClientConn, opts BuildOptions) (Resolver, error) \\t// Scheme returns the scheme supported by this resolver. \\t// Scheme is defined at https://github.com/grpc/grpc/blob/master/doc/naming.md. \\tScheme() string }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-12T14:58:35.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-07-12T14:58:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GRPC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-12T14:58:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[{"level":2,"title":"grpc 服务发现","slug":"grpc-服务发现","link":"#grpc-服务发现","children":[]},{"level":2,"title":"B 站实现","slug":"b-站实现","link":"#b-站实现","children":[{"level":3,"title":"warden 目录","slug":"warden-目录","link":"#warden-目录","children":[]},{"level":3,"title":"naming","slug":"naming","link":"#naming","children":[]}]},{"level":2,"title":"grpc 负载均衡","slug":"grpc-负载均衡","link":"#grpc-负载均衡","children":[]}],"git":{"createdTime":1678545410000,"updatedTime":1689173915000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":2}]},"readingTime":{"minutes":5.62,"words":1686},"filePathRelative":"source-code/bilibili-kratos/grpc/grpc.md","localizedDate":"2023年3月11日","excerpt":"<h1> GRPC</h1>\\n<h2> grpc 服务发现</h2>\\n<p>定义了两个 interface：Resolver 和 Builder</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// Resolver watches for the updates on the specified target.</span>\\n<span class=\\"token comment\\">// Updates include address updates and service config updates.</span>\\n<span class=\\"token keyword\\">type</span> Resolver <span class=\\"token keyword\\">interface</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">// ResolveNow will be called by gRPC to try to resolve the target name</span>\\n\\t<span class=\\"token comment\\">// again. It's just a hint, resolver can ignore this if it's not necessary.</span>\\n\\t<span class=\\"token comment\\">//</span>\\n\\t<span class=\\"token comment\\">// It could be called multiple times concurrently.</span>\\n\\t<span class=\\"token function\\">ResolveNow</span><span class=\\"token punctuation\\">(</span>ResolveNowOptions<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token comment\\">// Close closes the resolver.</span>\\n\\t<span class=\\"token function\\">Close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Builder creates a resolver that will be used to watch name resolution updates.</span>\\n<span class=\\"token keyword\\">type</span> Builder <span class=\\"token keyword\\">interface</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">// Build creates a new resolver for the given target.</span>\\n\\t<span class=\\"token comment\\">//</span>\\n\\t<span class=\\"token comment\\">// gRPC dial calls Build synchronously, and fails if the returned error is</span>\\n\\t<span class=\\"token comment\\">// not nil.</span>\\n\\t<span class=\\"token function\\">Build</span><span class=\\"token punctuation\\">(</span>target Target<span class=\\"token punctuation\\">,</span> cc ClientConn<span class=\\"token punctuation\\">,</span> opts BuildOptions<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>Resolver<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token comment\\">// Scheme returns the scheme supported by this resolver.</span>\\n\\t<span class=\\"token comment\\">// Scheme is defined at https://github.com/grpc/grpc/blob/master/doc/naming.md.</span>\\n\\t<span class=\\"token function\\">Scheme</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">string</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
