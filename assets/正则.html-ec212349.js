const e=JSON.parse('{"key":"v-cb60c1de","path":"/other/%E6%AD%A3%E5%88%99.html","title":"正则","lang":"zh-CN","frontmatter":{"description":"正则 demo (^//)([\\\\w\\\\u4e00-\\\\u9fa5]{1})(?!😇 //fx //我是 排除 //go: 基础 \\\\d 数字 \\\\w 数字或者字母 \\\\s 空格 . 任意字符 * 任意个，包含 0 + 至少 1 个 ? 0 或者 1 个 {n} n 个 {n,m} n-m 个 [] 表示范围 ^ 开头 $ 结束 正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/other/%E6%AD%A3%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"正则"}],["meta",{"property":"og:description","content":"正则 demo (^//)([\\\\w\\\\u4e00-\\\\u9fa5]{1})(?!😇 //fx //我是 排除 //go: 基础 \\\\d 数字 \\\\w 数字或者字母 \\\\s 空格 . 任意字符 * 任意个，包含 0 + 至少 1 个 ? 0 或者 1 个 {n} n 个 {n,m} n-m 个 [] 表示范围 ^ 开头 $ 结束 正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-06T01:58:50.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-06-06T01:58:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-06T01:58:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[{"level":2,"title":"demo","slug":"demo","link":"#demo","children":[]},{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]}],"git":{"createdTime":1678545410000,"updatedTime":1686016730000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":2}]},"readingTime":{"minutes":0.42,"words":125},"filePathRelative":"other/正则.md","localizedDate":"2023年3月11日","excerpt":"<h1> 正则</h1>\\n<h2> demo</h2>\\n<p>(^//)([\\\\w\\\\u4e00-\\\\u9fa5]{1})(?!😇</p>\\n<p>//fx</p>\\n<p>//我是</p>\\n<p>排除 //go:</p>\\n<h2> 基础</h2>\\n<p>\\\\d 数字<br>\\n\\\\w 数字或者字母<br>\\n\\\\s 空格<br>\\n. 任意字符 * 任意个，包含 0<br>\\n+ 至少 1 个<br>\\n? 0 或者 1 个<br>\\n{n} n 个<br>\\n{n,m} n-m 个</p>\\n<p>[] 表示范围</p>\\n<p>^ 开头</p>\\n<p>$ 结束</p>\\n<p>正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符</p>","autoDesc":true}');export{e as data};
