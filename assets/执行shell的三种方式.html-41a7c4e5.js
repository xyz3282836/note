const e=JSON.parse('{"key":"v-55113402","path":"/apue/%E6%89%A7%E8%A1%8Cshell%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html","title":"执行 shell 的三种方式","lang":"zh-CN","frontmatter":{"description":"执行 shell 的三种方式 ./script-name (fork 方式) 运行的时候 terminal 会新开一个子 Shell 执行脚本，子 Shell 执行的时候, 父 Shell 还在。子 Shell 执行完毕后返回父 Shell。子 Shell 从父 Shell 继承环境变量，但是子 Shell 中的环境变量不会带回父 Shell。 bash ./script-name 当前 shell 启动一个子进程执行程序，不会对当前 shell 有影响 source ./script-name or . ./script-name 与 fork 的区别是不新开一个子 Shell 来执行被调用的脚本，而是在同一个 Shell 中执行. 所以被调用的脚本中声明的变量和环境变量, 都可以在主脚本中进行获取和使用。","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/apue/%E6%89%A7%E8%A1%8Cshell%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"执行 shell 的三种方式"}],["meta",{"property":"og:description","content":"执行 shell 的三种方式 ./script-name (fork 方式) 运行的时候 terminal 会新开一个子 Shell 执行脚本，子 Shell 执行的时候, 父 Shell 还在。子 Shell 执行完毕后返回父 Shell。子 Shell 从父 Shell 继承环境变量，但是子 Shell 中的环境变量不会带回父 Shell。 bash ./script-name 当前 shell 启动一个子进程执行程序，不会对当前 shell 有影响 source ./script-name or . ./script-name 与 fork 的区别是不新开一个子 Shell 来执行被调用的脚本，而是在同一个 Shell 中执行. 所以被调用的脚本中声明的变量和环境变量, 都可以在主脚本中进行获取和使用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"执行 shell 的三种方式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"apue/执行shell的三种方式.md","localizedDate":"2023年3月11日","excerpt":"<h1> 执行 shell 的三种方式</h1>\\n<p>./script-name (fork 方式) 运行的时候 terminal 会新开一个子 Shell 执行脚本，子 Shell 执行的时候, 父 Shell 还在。子 Shell 执行完毕后返回父 Shell。子 Shell 从父 Shell 继承环境变量，但是子 Shell 中的环境变量不会带回父 Shell。</p>\\n<p>bash ./script-name 当前 shell 启动一个子进程执行程序，不会对当前 shell 有影响</p>\\n<p>source ./script-name or . ./script-name 与 <code>fork</code> 的区别是不新开一个子 Shell 来执行被调用的脚本，而是在同一个 Shell 中执行. 所以被调用的脚本中声明的变量和环境变量, 都可以在主脚本中进行获取和使用。</p>","autoDesc":true}');export{e as data};
