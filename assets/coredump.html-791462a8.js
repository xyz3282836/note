import{_ as e,W as a,X as n,a0 as s}from"./framework-1046fca1.js";const c={},d=s(`<h1 id="linux-core-dump" tabindex="-1"><a class="header-anchor" href="#linux-core-dump" aria-hidden="true">#</a> linux core dump</h1><h2 id="运行的进程创建core-dump文件" tabindex="-1"><a class="header-anchor" href="#运行的进程创建core-dump文件" aria-hidden="true">#</a> 运行的进程创建core dump文件</h2><p>一般通过gdb来生成，使用gdb把进程attach进来，然后执行generate-core-file或者gcore命令来生成core dump文件</p><h2 id="程序崩溃生成core-dump文件" tabindex="-1"><a class="header-anchor" href="#程序崩溃生成core-dump文件" aria-hidden="true">#</a> 程序崩溃生成core dump文件</h2><p>这次崩溃生成由两个因素控制</p><ol><li><p>是否生成，ulimit -c 为0代表不会自动生成，含义就是限制core dump文件的大小，单位KB，可以设置成 ulimit -c unlimited 甚至成无限或者其他值；</p></li><li><p>生成格式配置 cat /proc/sys/kernel/core_pattern</p></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@23 ~<span class="token punctuation">]</span><span class="token comment"># cat /proc/sys/kernel/core_pattern </span>
<span class="token operator">|</span>/usr/lib/systemd/systemd-coredump %P %u %g %s %t %c %h %e

gdb ./cmdexec corefile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Golang 程序panic也可以生成core dump，需要设置运行golang 程序前，设置 export GOTRACEBACK=crash (none,single默认,all,system,crash)</p><p>gdb对于golang支持的不是太好，golang 官方建议使用delve</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/go-delve/delve
<span class="token builtin class-name">cd</span> delve <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> build

dlv core ./cmdexec corefile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),i=[d];function r(l,o){return a(),n("div",null,i)}const p=e(c,[["render",r],["__file","coredump.html.vue"]]);export{p as default};
