const n=JSON.parse('{"key":"v-3dca5d6e","path":"/apue/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84.html","title":"c 语言指针数组","lang":"zh-CN","frontmatter":{"description":"c 语言指针数组 int a = 3; int *p;//此时p已经有内存地址 *p = a;//这个操作是指针p指向的值 进行更新 int a = 3; int *p = &amp;a; //此时指针p的值为a的内存地址 int c[3]; int c1[3]; ... c本身是个指针，但是不可重新修改地址，而且c会自动转化为值，所以gdb p c打印出的是值，而 p &amp;c打印出地址 int *p = c;//此操作就是地址赋值，但是 int *p = &amp;c (报错：从不兼容的指针类型初始化，当然只是warning)，数组c进行指针赋值，那么c就不能当成值来处理，和gdb 将c作值处理不一样的； int c[3]; int *p; 数组本质是指针常量，可以修改值，但是不可重新修改地址，在低地址段 p++ c++就是错的 p = c c = c1 错的","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/apue/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"c 语言指针数组"}],["meta",{"property":"og:description","content":"c 语言指针数组 int a = 3; int *p;//此时p已经有内存地址 *p = a;//这个操作是指针p指向的值 进行更新 int a = 3; int *p = &amp;a; //此时指针p的值为a的内存地址 int c[3]; int c1[3]; ... c本身是个指针，但是不可重新修改地址，而且c会自动转化为值，所以gdb p c打印出的是值，而 p &amp;c打印出地址 int *p = c;//此操作就是地址赋值，但是 int *p = &amp;c (报错：从不兼容的指针类型初始化，当然只是warning)，数组c进行指针赋值，那么c就不能当成值来处理，和gdb 将c作值处理不一样的； int c[3]; int *p; 数组本质是指针常量，可以修改值，但是不可重新修改地址，在低地址段 p++ c++就是错的 p = c c = c1 错的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:author","content":"rz"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c 语言指针数组\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"rz\\",\\"url\\":\\"https://github.com/xyz3282836/monodoc\\"}]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":1.24,"words":373},"filePathRelative":"apue/c语言指针数组.md","localizedDate":"2023年3月11日","excerpt":"<h1> c 语言指针数组</h1>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>p<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//此时p已经有内存地址</span>\\n<span class=\\"token operator\\">*</span>p <span class=\\"token operator\\">=</span> a<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//这个操作是指针p指向的值 进行更新</span>\\n\\n<span class=\\"token keyword\\">int</span> a <span class=\\"token operator\\">=</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>p <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">&amp;</span>a<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//此时指针p的值为a的内存地址</span>\\n\\n<span class=\\"token keyword\\">int</span> c<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> c1<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\nc本身是个指针，但是不可重新修改地址，而且c会自动转化为值，所以gdb p c打印出的是值，而 p <span class=\\"token operator\\">&amp;</span>c打印出地址\\n<span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>p <span class=\\"token operator\\">=</span> c<span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//此操作就是地址赋值，但是 int *p = &amp;c (报错：从不兼容的指针类型初始化，当然只是warning)，数组c进行指针赋值，那么c就不能当成值来处理，和gdb 将c作值处理不一样的；</span>\\n\\n<span class=\\"token keyword\\">int</span> c<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token operator\\">*</span>p<span class=\\"token punctuation\\">;</span>\\n数组本质是指针常量，可以修改值，但是不可重新修改地址，在低地址段\\np<span class=\\"token operator\\">++</span>\\nc<span class=\\"token operator\\">++</span>就是错的\\n\\np <span class=\\"token operator\\">=</span> c\\nc <span class=\\"token operator\\">=</span> c1 错的\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
