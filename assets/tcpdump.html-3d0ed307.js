import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as a,c,b as t,d as p,e as x,a as n}from"./app-739499e9.js";const o="/assets/tcpdump-28fba773.png",i="/assets/tcpdump-param-025b1c51.jpg",d={},h=t("h1",{id:"tcpdump",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#tcpdump","aria-hidden":"true"},"#"),p(" tcpdump")],-1),l={href:"http://xxx.xxx.xxx.xxx",target:"_blank",rel:"noopener noreferrer"},m={href:"http://xxx.xxx.xxx.xxx",target:"_blank",rel:"noopener noreferrer"},_=n('<p>ip [src|dst] host 127.0.0.2 and [tcp|udp] [src|dst] port 5000</p><p>net ip 网段 xxx.xxx.xxx.0/24</p><p>port|portrange [xxx|ssh|xxx-xxx]端口号，也可以是服务的通用名称如 http|https|dns|ssh</p><p>src,dst 修饰 host 或者 port</p><p>-n 不显示域名显示具体 ip 地址</p><p>-nn ip 地址和端口号</p><p>-w 写文件</p><p>-C 写文件的大小限制，1 标识 1,000,000 字节 1m 左右</p><p>-c 指定抓多少个包后就停止</p><p>tcp|arp|icmp|ip|ip6 传输层协议，应用层不支持</p><p>-q 简化输出信息</p><p>-Q in 外网请求主机的包; out 主机返回外网的包</p><p>-s 指定抓包的大小</p><p>-A ascii 码显示报文</p><p>-X ascii + 16 进制 和 wireshark 类似</p><p>-e 显示链路层信息 mac 地址等，以太网 ethert</p><p>-F 指定规则文件</p><p>less 10 抓取小于 10 字节的包</p><p>greater 100 抓取大于 100 字节的包</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>tcpdump src port https -nn -Q out</p><p>主机发包外网，443 服务向外网发数据包（翻墙机器把外网的内容返回给客户端）</p><p>tcpdump dst port https -nn -Q in</p><p>外网给主机 443 服务发包（客户端请求翻墙机器的翻墙服务 443）</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><figure><img src="'+i+'" alt="tcpdump 常用过滤表达式类" tabindex="0" loading="lazy"><figcaption>tcpdump 常用过滤表达式类</figcaption></figure>',26);function u(f,g){const e=s("ExternalLinkIcon");return a(),c("div",null,[h,t("p",null,[p("tcp|ip|arp 注意 tcp [src|dst] port xxx, ip [src|dst] host "),t("a",l,[p("xxx.xxx.xxx.xxx"),x(e)]),p("，只能 tcp 修饰 port，ip 修饰 host")]),t("p",null,[p("host "),t("a",m,[p("xxx.xxx.xxx.xxx"),x(e)]),p(" ip 地址或者域名")]),_])}const N=r(d,[["render",u],["__file","tcpdump.html.vue"]]);export{N as default};
