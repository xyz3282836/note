const n=JSON.parse(`{"key":"v-310bef1e","path":"/source-code/bilibili-kratos/library/container/group.html","title":"group","lang":"zh-CN","frontmatter":{"description":"group 缓存方法执行的结果 // Group is a lazy load container. type Group struct { \\tnew func() interface{} \\tobjs sync.Map \\tsync.RWMutex } // NewGroup news a group container. func NewGroup(new func() interface{}) *Group { \\tif new == nil { \\t\\tpanic(\\"container.group: can't assign a nil to the new function\\") \\t} \\treturn &amp;Group{ \\t\\tnew: new, \\t} } // Get gets the object by the given key. func (g *Group) Get(key string) interface{} // Reset resets the new function and deletes all existing objects. func (g *Group) Reset(new func() interface{}) // Clear deletes all objects. func (g *Group) Clear()","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/source-code/bilibili-kratos/library/container/group.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"group"}],["meta",{"property":"og:description","content":"group 缓存方法执行的结果 // Group is a lazy load container. type Group struct { \\tnew func() interface{} \\tobjs sync.Map \\tsync.RWMutex } // NewGroup news a group container. func NewGroup(new func() interface{}) *Group { \\tif new == nil { \\t\\tpanic(\\"container.group: can't assign a nil to the new function\\") \\t} \\treturn &amp;Group{ \\t\\tnew: new, \\t} } // Get gets the object by the given key. func (g *Group) Get(key string) interface{} // Reset resets the new function and deletes all existing objects. func (g *Group) Reset(new func() interface{}) // Clear deletes all objects. func (g *Group) Clear()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T14:36:50.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T14:36:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"group\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T14:36:50.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1678545410000,"updatedTime":1678545410000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":1}]},"readingTime":{"minutes":0.32,"words":95},"filePathRelative":"source-code/bilibili-kratos/library/container/group.md","localizedDate":"2023年3月11日","excerpt":"<h1> group</h1>\\n<p>缓存方法执行的结果</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// Group is a lazy load container.</span>\\n<span class=\\"token keyword\\">type</span> Group <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token builtin\\">new</span>  <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\tobjs sync<span class=\\"token punctuation\\">.</span>Map\\n\\tsync<span class=\\"token punctuation\\">.</span>RWMutex\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// NewGroup news a group container.</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">NewGroup</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">new</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">*</span>Group <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token builtin\\">new</span> <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">panic</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"container.group: can't assign a nil to the new function\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">&amp;</span>Group<span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token builtin\\">new</span><span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">new</span><span class=\\"token punctuation\\">,</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Get gets the object by the given key.</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>g <span class=\\"token operator\\">*</span>Group<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Get</span><span class=\\"token punctuation\\">(</span>key <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// Reset resets the new function and deletes all existing objects.</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>g <span class=\\"token operator\\">*</span>Group<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Reset</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">new</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// Clear deletes all objects.</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>g <span class=\\"token operator\\">*</span>Group<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Clear</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
