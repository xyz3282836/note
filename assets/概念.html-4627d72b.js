import{_ as t,V as s,W as o,X as e,Y as r}from"./framework-7d796c00.js";const c={},a=e("h1",{id:"基础概念",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基础概念","aria-hidden":"true"},"#"),r(" 基础概念")],-1),n=e("p",null,"memory order 本身就是一个高层的语义，比如 CPP、Rust 这样语言提供了这些选项。 memory order 是编译器+平台提供的最低保证，除非有平台完全不支持 SeqCst 的约束，否则正确使用 memory order 是不会有逻辑错误的风险的。 部分平台没有实现所有语义（比如主流的 X86，用 Acquire 和 Release，其实等价于 SeqCst），但是只会用更强的语义实现代替",-1),_=e("p",null,"x86的relaxed等价于release和acquire，但是seqcst还是不一样的哦，会加上xchg",-1),d=e("p",null,"面试时候，可以问一下关于 CPU Cache 一致性，Data race 中的可见性、原子性，也可以问一下Go 里面 关于 sync.Once/Sync.Mutex 为何可以利用 XCHG 来保证 可见性传递；",-1),l=e("p",null,"面试后，也可以问一下 CPU 一致性问题，可以从P4 CPU 到 MESI 协议，LOCK 指令的变化",-1),i=[a,n,_,d,l];function h(u,m){return s(),o("div",null,i)}const C=t(c,[["render",h],["__file","概念.html.vue"]]);export{C as default};
