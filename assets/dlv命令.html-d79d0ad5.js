const l=JSON.parse(`{"key":"v-4a239225","path":"/go/asm/dlv%E5%91%BD%E4%BB%A4.html","title":"dlv 命令","lang":"zh-CN","frontmatter":{"description":"dlv 命令 基础 go build 可以用*-gcflags给go*编译器传入参数，也就是传给 go tool compile 的参数，因此可以用 go tool compile --help 查看所有可用的参数。 其中-m 可以检查代码的编译优化情况，包括逃逸情况和函数是否内联。 如果只在编译特定包时需要传递参数，格式应遵守“包名=参数列表”，如 go build -gcflags -gcflags='log=-N -l' main.go go build 用-ldflags 给 go 链接器传入参数，实际是给 go tool link 的参数，可以用 go tool link --help 查看可用的参数。","head":[["meta",{"property":"og:url","content":"https://www.ruizhou.cf/go/asm/dlv%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"rz文档"}],["meta",{"property":"og:title","content":"dlv 命令"}],["meta",{"property":"og:description","content":"dlv 命令 基础 go build 可以用*-gcflags给go*编译器传入参数，也就是传给 go tool compile 的参数，因此可以用 go tool compile --help 查看所有可用的参数。 其中-m 可以检查代码的编译优化情况，包括逃逸情况和函数是否内联。 如果只在编译特定包时需要传递参数，格式应遵守“包名=参数列表”，如 go build -gcflags -gcflags='log=-N -l' main.go go build 用-ldflags 给 go 链接器传入参数，实际是给 go tool link 的参数，可以用 go tool link --help 查看可用的参数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-11T16:47:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-11T16:47:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dlv 命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-11T16:47:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"dlv","slug":"dlv","link":"#dlv","children":[]},{"level":2,"title":"reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1678545410000,"updatedTime":1678553257000,"contributors":[{"name":"liuruizhou","email":"liuruizhou@bilibili.com","commits":2}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"go/asm/dlv命令.md","localizedDate":"2023年3月11日","excerpt":"<h1> dlv 命令</h1>\\n<h2> 基础</h2>\\n<p>go build 可以用*-gcflags<em>给</em>go*编译器传入参数，也就是传给 go tool compile 的参数，因此可以用 go tool compile --help 查看所有可用的参数。</p>\\n<p>其中-m 可以检查代码的编译优化情况，包括逃逸情况和函数是否内联。</p>\\n<p>如果只在编译特定包时需要传递参数，格式应遵守“包名=参数列表”，如 go build -gcflags -gcflags='log=-N -l' main.go</p>\\n<p>go build 用-ldflags 给 go 链接器传入参数，实际是给 go tool link 的参数，可以用 go tool link --help 查看可用的参数。</p>","autoDesc":true}`);export{l as data};
